[2022-12-07 17:07:49] mrx-link.MRXLinkMagics.mrxlink_set_parameters() DEBUG: args: Namespace(no_reply=True, base_url='http://localhost:8888/', header='Accept-Encoding=gzip,%20deflate,%20br;Host=localhost:8888;%20Authorization=token%2028f6151ce9fbd73f4964bf998f83d5913e6655dbb33ebbe0', cookie='_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20username-localhost-8888=2%7C1:0%7C10:1670443668%7C23:username-localhost-8888%7C44:OTg1YzdiNjZkMmU4NGYwNThiNTE3OTkyYjY3ZjljMzQ=%7C396f3937c8ab3fc6fd3efa9240171927141c821af5d554ecaa5fd54f4784b275', cell='[]\n')
[2022-12-07 17:07:49] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: args: Namespace(base_url='http://localhost:8888/', header='Accept-Encoding=gzip,%20deflate,%20br;Host=localhost:8888;%20Authorization=token%2028f6151ce9fbd73f4964bf998f83d5913e6655dbb33ebbe0', cookie='_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20username-localhost-8888=2%7C1:0%7C10:1670443669%7C23:username-localhost-8888%7C44:ZGZmZmVjZGViNjI1NDE0MWI0NDc0YWIzODQ3MjZiZjg=%7C56e1cbc8297ada3e021bb9d3e96178d077f94d011f7489371c581654b23121df', cell='{"nodes":[{"id":"74e47343-3dbf-44f8-8228-e584f90a0e16","name":"Import libs","code":"import pandas as pd\\nimport numpy as np\\nfrom pickle import dump, load\\nimport itertools\\nimport winsound\\n\\nimport Custom_Tools\\nfrom sksurv.nonparametric import kaplan_meier_estimator\\nfrom target_definition import target_definition\\nfrom feature_engineering import feature_engineering\\nfrom drop_turnover import drop_turnover\\nfrom preprocess_turnover import preprocess_turnover\\nfrom scale_dataset import scale_dataset\\nfrom final_transformation import final_transformation\\nfrom population_filter import population_filter\\n\\n\\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\\nfrom sklearn.preprocessing import MinMaxScaler\\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\\n\\n\\nfrom imblearn.over_sampling import ADASYN\\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\\nfrom sklearn.linear_model import LogisticRegression\\nfrom lightgbm import LGBMClassifier\\nfrom xgboost import XGBClassifier\\nfrom catboost import CatBoostClassifier\\nfrom sklearn.naive_bayes import GaussianNB\\nfrom sklearn import metrics\\n\\n\\nimport plotly.express as px\\nimport seaborn as sns\\nimport matplotlib.pyplot as plt\\n\\n\\nimport optuna","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"df37f106-a4ff-49cb-9f22-c550f0812b37","name":"First dataset","code":"df = pd.read_excel(\'C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/\'\\n                   \'Python/Análise_Headcount.xlsx\')\\n\\n\'\'\'\\nAdicionar tipo de função (Gestor, não gestor)\\nFeature Hashing - funcao_descricao, codsecao\\nSalário, méritos e promoções\\nPulses\\n\\nfilial_descricao não vai entrar porque codsecao pega filial e área.\\n\'\'\'","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"651d005e-5f45-4ca8-96ed-50c5783a308d","name":"Survival analysis preparation","code":"df_surv = feature_engineering(target_definition(df, \'tipo_colaborador\', \'CLT\'))\\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\\ndf_surv.loc[df_surv.tipo_função == \'Docente\',\'tipo_filial\'] = \'DOCENTE\'","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d695fd5d-fedd-440a-933a-e6b09ae9902b","name":"Generate plots","code":"data_x = df_surv.copy()\\n\\ndata_y = df_surv.desligado==1\\n\\nsurv_days = data_x.tempo_de_casa\\n\\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\\n\\nfor i in analyze:\\n\\n    analisar = i\\n\\n    plt.figure(figsize=(12, 12), dpi=80)\\n\\n    for value in data_x[analisar].unique():\\n        mask = data_x[analisar] == value\\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\\n                                                               surv_days[mask])\\n        plt.step(time_cell, survival_prob_cell, where=\\"post\\",\\n                 label=\\"%s (n = %d)\\" % (value, mask.sum()));\\n\\n    plt.ylabel(\\"est. probability of survival $\\\\hat{S}(t)$\\")\\n    plt.xlabel(\\"Months\\")\\n    plt.legend(loc=\\"best\\");\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4dabbcf4-809d-4903-8e32-26279499c336","name":"Target definition","code":"df_alvo = target_definition(df, \'tipo_colaborador\', \'CLT\')\\n\\ndf_alvo = population_filter(df_alvo)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"ce04c155-4800-4dae-9253-501682182090","name":"Holdout","code":"X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop([\'desligado\'], axis=1), df_alvo[\'desligado\'], test_size=0.1, random_state=42, stratify=df_alvo[\'desligado\']) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64","name":"Check proportions Holdout","code":"print(y.value_counts()/y.shape[0])\\nprint(y_holdout.value_counts()/y_holdout.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","name":"Train test","code":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3","name":"Check proportion Train Test","code":"print(y_train.value_counts()/y_train.shape[0])\\nprint(y_test.value_counts()/y_test.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"d3a63656-d9e4-4200-80a2-ff1e529262ab","name":"Averages for input","code":"print(X_train.idade.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"501b8112-a010-4f1a-9bed-41508f2b1acb","name":"Engineer Drop and Preprocess","code":"df_trat = X_train\\n\\ny_trat = y_train.loc[df_trat.index]\\n\\ndf_eng = feature_engineering(df_trat)\\n\\ndf_trat_drop = drop_turnover(df_eng)\\n\\ndf_preprocess = preprocess_turnover(df_trat_drop)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"953422cc-3fb0-4601-952c-2840da505de3","name":"Engineer info","code":"print(df_preprocess.columns)\\nprint(df_preprocess.shape)\\nprint(y_trat.shape)\\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\\nprint(df_preprocess.isnull().sum())\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"719aa0e4-d5ec-44f6-a6c2-79117c96874e","name":"Scaling fit","code":"Scaler = MinMaxScaler((0,1))\\nScaler.fit(df_preprocess)\\ndump(Scaler, open(\'Scaler.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"#FAFF00","comments":[],"diskcache":false}},{"id":"a7324ce3-3533-4319-82d0-3360324d7249","name":"Hashing High Cardinality test","code":"from sklearn.feature_extraction import FeatureHasher\\n\\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])\\n\\nscores = pd.DataFrame()\\n\\nfrom tqdm.notebook import tqdm\\n\\nfor i in tqdm(range(3,50)):\\n\\n    n_features = i\\n\\n    hashf = FeatureHasher(n_features=n_features,  input_type=\'string\')\\n\\n    funcao_cols = [\'funcao_\'+str(i) for i in range(n_features)]\\n\\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\\n\\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\n    model.fit(train_hash, y_trat)\\n    \\n    score = useful_metrics(test_hash, y_test, model)\\n    \\n    score[\'cols\'] = i\\n    \\n    scores = pd.concat([scores, score])\\n    ","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a3fde54e-894a-488e-a629-25ac13ec53e0","name":"Scaling transform","code":"Scaler = load(open(\'Scaler.pkl\', \'rb\'))\\nfeature = df_preprocess.columns.tolist()\\nscaled_df = df_preprocess\\nscaled_df = scale_dataset(df_preprocess, feature, None)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"825318b2-890f-4cd9-984b-5d282130a117","name":"Custom Tool analysis","code":"df_preprocess_analysis = scaled_df.copy()\\ndf_preprocess_analysis[\'desligado\'] = y_train\\n\\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\\n\\ncols = aval.col_missing()\\n\\ncard = aval.cardinality()\\n\\nrws = aval.row_missing()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"04b793a6-4c8e-4598-828a-62fa4903b5bb","name":"Row evaluation","code":"print(rws[rws > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"c649590d-5e04-47b6-8889-a0bd2901b1ba","name":"Column evaluation","code":"print(cols[cols > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"71269304-ddf9-4591-a4d0-c45357dfb043","name":"Feature Selection run","code":"algorithms = [chi2, f_classif, mutual_info_classif]\\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","name":"Feature Selection results","code":"features = selection.columns.tolist()\\nfeatures.remove(\'Total_points\')\\nKbest_eval = selection.groupby(\'Columns\').sum()[\'Total_points\'].sort_values(ascending=False) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"3c5a1393-9b6d-4206-83ff-660448ee4528","name":"Dropping redundant features","code":"Kbest_eval[(Kbest_eval.index != \'agrup_salario\') & (Kbest_eval.index != \'tempo_de_casa\') & (Kbest_eval.index != \'ord_faixa_etaria\')][:Kbest_eval.shape[0]//2].index.tolist()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"11d639e9-9f16-4840-9ca2-932561027791","name":"Features selected and save","code":"# Tempo de casa redundante com ord_faixa_tempo_casa\\nfeature_final = [\'VP_descricao_VICEPRESIDENCIADEOPERACOES\',\\n \'tipo_filial_DIGITAL\',\\n \'VP_descricao_VICEPRESIDENCIADEMERCADO\',\\n \'tipo_filial_UNDERGRADUATE\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS\',\\n \'salario\',\\n \'ord_faixa_tempo_casa\',\\n \'idade\',\\n \'cotapcd\',\\n \'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS\',\\n \'VP_descricao_VICEPRESIDENCIADEMARKETING\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA\',\\n \'genero_Masculino\',\\n \'genero_Feminino\']\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"68316262-8a81-4e81-8305-99a17550bfcc","name":"Final features","code":"#feature_final = load(open(\'feature_selection.pkl\', \'rb\'))\\nfeature_final = [x for x in scaled_df]\\n\\n# Comment if feature selection was used\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))\\n\\n#feature_final.remove(\'escolaridade_classificao\')\\nX_train_final = scaled_df[feature_final]","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"616712eb-bc91-4af4-9b97-9bf57d3df147","name":"Models init overfit eval","code":"lr = LogisticRegression(max_iter=10000)\\nlgbm = LGBMClassifier()\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\ncat = CatBoostClassifier(silent=True)\\next = ExtraTreesClassifier()\\ngnb = GaussianNB()\\n\\n\\nmodels = {\'Logistic Regression\': lr,\\n          \'LGBM\': lgbm,\\n          \'XGBoost\': xgb,\\n          \'CatBoost | Default\': cat,\\n          \'Gaussian NB\': gnb,\\n          \'Extra trees | Default\': ExtraTreesClassifier(),\\n          \'Extra trees | balanced \': ExtraTreesClassifier(class_weight=\'balanced\'), # noqa E501\\n          \'Extra trees | balanced_subsample\': ExtraTreesClassifier(class_weight=\'balanced_subsample\'), # noqa E501\\n          \'Random Forest | Default\': RandomForestClassifier()}\\n\\nfor a in range(5, 2, -1):\\n    models[\'Random Forest - Max_depth:\'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\\n\\ndepth = [3]\\nrs = [0.5]\\nparams_list=[ depth, rs ]\\n\\nfor depth_at, rs_at in list(itertools.product(*params_list)):\\n    models[\'CatBoostClassifier | Early_Stopping:4\'+\' | depth:\'+str(depth_at)+\' | strength:\'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","name":"One model test","code":"models_1 = {\'Random Forest - Default\': RandomForestClassifier()}","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","name":"Test results","code":"test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\\ntest_results = test.overfit(metrics.f1_score)\\ntest_results","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"b2b08397-d1fa-49bb-b121-6d2fbd86f821","name":"Test results chart","code":"fig = px.line(test_results, x=\\"Sample\\", y=\\"f1_score\\", color=\\"Dataset\\", facet_col=\\"Model\\", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\\nfig.show()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"dac101ac-b57e-445a-8101-b90e36ac28f7","name":"All models run F1 score","code":"All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"60fd0370-09a6-49e3-abdf-9c29067c6754","name":"F1 Score","code":"pivot_f1 = All_models_results_f1.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'f1_score\') # noqa E501\\npivot_f1[\'Overfit\'] = abs(pivot_f1[\'Test\']-pivot_f1[\'Train\'])\\npivot_f1 = pivot_f1.groupby([\'Model\'])[[\'Overfit\', \'Test\']].mean().sort_values([\'Overfit\']) # noqa E501\\npivot_f1[pivot_f1.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","name":"All models run recall score","code":"All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf","name":"Recall score","code":"pivot_recall = All_models_results_recall.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'recall_score\') # noqa E501\\npivot_recall[\'Overfit\'] = abs(pivot_recall[\'Test\']-pivot_recall[\'Train\'])\\npivot_recall = pivot_recall.groupby(\'Model\')[\'Overfit\', \'Test\'].mean().sort_values(\'Overfit\') # noqa E501\\npivot_recall[pivot_recall.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","name":"All models run precision score","code":"All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"2873ca00-5d55-4437-9f3d-1c723e51a070","name":"Precision score","code":"pivot_precision = All_models_results_precision.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'precision_score\') # noqa E501\\npivot_precision[\'Overfit\'] = abs(pivot_precision[\'Test\']-pivot_precision[\'Train\'])\\npivot_precision = pivot_precision.groupby(\'Model\')[[\'Overfit\', \'Test\']].mean().sort_values(\'Overfit\') # noqa E501\\npivot_precision[pivot_precision.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"180c9593-1123-4208-aa33-b2bf9c86b1e8","name":"Prepare X_test dataset","code":"X_test_final = final_transformation(X_test, feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","name":"Wrap up final datasets","code":"X_train_final, y_train_final = X_train_final, y_trat","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c969afb6-beca-462c-994b-3711f45b9725","name":"Check shapes","code":"print(X_train_final.shape)\\nprint(y_train_final.shape)\\nprint(X_test_final.shape)\\nprint(y_test.shape)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","name":"Metrics function","code":"def useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"10188aaf-83cc-4fcb-afe3-d7520346a34a","name":"Chosen model baseline","code":"gnb = GaussianNB()\\ngnb.fit(X_train_final, y_train_final)\\n\\ncat = CatBoostClassifier(silent=True)\\ncat.fit(X_train_final, y_train_final)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\nmodels = [gnb, cat, xgb]\\n\\nfor model in models:\\n\\n    print(model.__class__.__name__)\\n\\n    model.fit(X_train_final, y_train_final)\\n\\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\\n                         y_test, model))\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a878d86e-3707-49be-bb85-3a5c0cbe3972","name":"Optuna dataset","code":"X_optuna = pd.concat([X_train_final, X_test_final])\\ny_optuna = pd.concat([y_train_final, y_test])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"d5742407-e18a-4185-a945-f5ac11dcb854","name":"Optuna function Gaussian","code":"\\nsequence = [ ]\\nfor i in range(-9, 1):\\n    sequence.append(10**i)\\n\\ndef objective_gnb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'var_smoothing\': trial.suggest_categorical(\'var_smoothing\', sequence)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = GaussianNB(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","name":"Optuna function LR","code":"def objective_lr(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'max_iter\':10000\\n    }\\n    \\n    oversample_grid = {\\n        \'sampling_strategy\': trial.suggest_float(\'sampling_strategy\',0.5,1.0,step=0.01)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = LogisticRegression(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n    \\n    over_under = ADASYN(**oversample_grid)\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n        \\n        X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2ff29722-5176-486b-8ec0-7b138fbe2c05","name":"Optuna Run LR","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_lr, n_trials=100)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4","name":"Optuna Results LR","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","name":"Optuna function XGB","code":"def objective_xgb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n\\n    model_grid = {\\n        # Prevent Overfit\\n        \'max_depth\': trial.suggest_int(\'max_depth\', 3, 7, step=1),\\n        \'min_child_weight\': trial.suggest_int(\'min_child_weight\', 1, 7, step=1),\\n        \'gamma\': trial.suggest_int(\'gamma\', 0, 7, step=1),\\n        # Imbalanced dataset\\n        \'max_delta_step\': trial.suggest_int(\'max_delta_step\', 0, 10, step=1)\\n    }\\n\\n    param_grid = {\\n        \'threshold\': trial.suggest_float(\'threshold\', 0.2, 1.0, step=0.01)\\n    }\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n\\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation, evaluation])\\n\\n    return(F_evaluation.f1_score.std(),\\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\\n           F_evaluation.recall_score.mean(),\\n           F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","name":"Optuna Run XGB","code":"study = optuna.create_study(directions=[\'minimize\', \'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_xgb, n_trials=50)\\n\\nduration = 2000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c8443305-4d7a-4455-9492-a7aeaaff5e07","name":"Optuna Results XGB","code":"metrics_name = [\'std_F1\',\'F1\', \'Precision\', \'Recall\', \'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n\\n    for metric, value in zip(metrics_name, trial.values):\\n\\n        try_1[metric] = value\\n\\n    try_1[\'Params\'] = str(trial.params)\\n\\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n\\n    tries = tries[tries.Precision > 0]\\n\\nbest_params = tries.sort_values([\'std_F1\', \'Precision\',\'F1\',\'Brier\'], ascending= [True, False, True, False]).head(100)\\n\\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","name":"Optuna run Gaussian","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_gnb, n_trials=200)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"05f7e787-a336-4342-b603-78809382262e","name":"Optuna results","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d7fdb49f-1502-43d4-87ef-e452da6ecf74","name":"Top 20 results optuna","code":"tries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","name":"Final model params","code":"params = {\'max_depth\': 6, \'min_child_weight\': 4, \'gamma\': 1, \'max_delta_step\': 10}\\n\\nthreshold = 0.52\\n\\ngnb = GaussianNB()\\n\\nlr = LogisticRegression(max_iter=10000)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\\n\\nover_under = ADASYN(sampling_strategy=0.64)\\n\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac","name":"Yellowbricks threshold","code":"from yellowbrick.classifier import DiscriminationThreshold\\n\\n\\n# Instantiate the classification model and visualizer\\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\\nvisualizer = DiscriminationThreshold(model)\\n\\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\\nvisualizer.show()           # Finalize and render the figure","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","name":"Final model stats","code":"X_dataset, y_dataset = X_optuna, y_optuna\\n\\nmodel = xgb\\n\\nevaluation = pd.DataFrame()\\n\\nassertiveness = pd.DataFrame()\\n\\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\\n\\ncount = 0\\n\\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\\n\\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\\n        \\n        #Exclude if no oversample\\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train,y_train)\\n\\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\\n        \\n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\\n        \\n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\\n        \\n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\\n        \\n\\n        count+=1\\n        \\n        print(\\"Shuffle \\" + str(count), end = \\"\\\\r\\")\\n        \\nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\n        \\ngrouped_stats = assertiveness.groupby(\'index\').agg(\\n        avg_correct_percent =(\'correct\', \'mean\'),\\n        avg_precision = (\'precision\', np.nanmean),\\n        avg_recall = (\'recall\', np.nanmean),\\n        std = (\'brier\', np.std),\\n        brier = (\'brier\', np.mean),\\n        count = (\'brier\', \'count\')\\n        )\\n        \\nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\\n\\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"1dd18a01-147a-489b-941e-867a5fc7389b","name":"Stats visualization","code":"duration = 1000  # milliseconds\\nfreq = 440# Hz\\nwinsound.Beep(freq, duration)\\nax = sns.boxplot(x=\'variable\', y=\'value\', data=pd.melt(evaluation))\\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"7122c816-b17e-4185-9c99-0fc03101be5b","name":"Prepare X_holdout dataset","code":"X_holdout_final = final_transformation(X_holdout,feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","name":"Final Results","code":"xgb.fit(X_optuna, y_optuna)\\n\\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\\n\\nconfusion_matrix = metrics.confusion_matrix(\\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\\n\\ntn, fp, fn, tp = confusion_matrix.ravel()\\nspecificity = tn / (tn+fp)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b54670b-7be3-4478-a89c-0fb50685bba2","name":"Confusion Matrix","code":"cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\\n\\ncm_display.plot()\\nplt.grid(False)\\nplt.show()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","name":"Laymans Results","code":"print(f\\"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\\\n\\")\\n\\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\\n\\nprint(\'\\\\nExcelente notícia!!!!\')\\n\\n\\n\\nduration = 1000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca","name":"Save Model","code":"dump(xgb, open(\'turnover_general_model.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}}],"edges":[{"parent":"74e47343-3dbf-44f8-8228-e584f90a0e16","child":"df37f106-a4ff-49cb-9f22-c550f0812b37"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"651d005e-5f45-4ca8-96ed-50c5783a308d"},{"parent":"651d005e-5f45-4ca8-96ed-50c5783a308d","child":"d695fd5d-fedd-440a-933a-e6b09ae9902b"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"4dabbcf4-809d-4903-8e32-26279499c336"},{"parent":"4dabbcf4-809d-4903-8e32-26279499c336","child":"ce04c155-4800-4dae-9253-501682182090"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"d3a63656-d9e4-4200-80a2-ff1e529262ab"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"501b8112-a010-4f1a-9bed-41508f2b1acb"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"953422cc-3fb0-4601-952c-2840da505de3"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"953422cc-3fb0-4601-952c-2840da505de3","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a7324ce3-3533-4319-82d0-3360324d7249"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a3fde54e-894a-488e-a629-25ac13ec53e0"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"825318b2-890f-4cd9-984b-5d282130a117"},{"parent":"825318b2-890f-4cd9-984b-5d282130a117","child":"04b793a6-4c8e-4598-828a-62fa4903b5bb"},{"parent":"04b793a6-4c8e-4598-828a-62fa4903b5bb","child":"c649590d-5e04-47b6-8889-a0bd2901b1ba"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"71269304-ddf9-4591-a4d0-c45357dfb043"},{"parent":"71269304-ddf9-4591-a4d0-c45357dfb043","child":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f"},{"parent":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","child":"3c5a1393-9b6d-4206-83ff-660448ee4528"},{"parent":"3c5a1393-9b6d-4206-83ff-660448ee4528","child":"11d639e9-9f16-4840-9ca2-932561027791"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"68316262-8a81-4e81-8305-99a17550bfcc"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"616712eb-bc91-4af4-9b97-9bf57d3df147"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4"},{"parent":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","child":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb"},{"parent":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","child":"b2b08397-d1fa-49bb-b121-6d2fbd86f821"},{"parent":"616712eb-bc91-4af4-9b97-9bf57d3df147","child":"dac101ac-b57e-445a-8101-b90e36ac28f7"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"60fd0370-09a6-49e3-abdf-9c29067c6754"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288"},{"parent":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","child":"2873ca00-5d55-4437-9f3d-1c723e51a070"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"180c9593-1123-4208-aa33-b2bf9c86b1e8","child":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"c969afb6-beca-462c-994b-3711f45b9725"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"16da288a-1d46-4d2f-96e9-b9e59c5505f3"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"10188aaf-83cc-4fcb-afe3-d7520346a34a"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"a878d86e-3707-49be-bb85-3a5c0cbe3972"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"d5742407-e18a-4185-a945-f5ac11dcb854"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175"},{"parent":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","child":"2ff29722-5176-486b-8ec0-7b138fbe2c05"},{"parent":"2ff29722-5176-486b-8ec0-7b138fbe2c05","child":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"8f560d16-8a82-4a85-821e-0a6dbf399eaf"},{"parent":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","child":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0"},{"parent":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","child":"c8443305-4d7a-4455-9492-a7aeaaff5e07"},{"parent":"d5742407-e18a-4185-a945-f5ac11dcb854","child":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257"},{"parent":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","child":"05f7e787-a336-4342-b603-78809382262e"},{"parent":"05f7e787-a336-4342-b603-78809382262e","child":"d7fdb49f-1502-43d4-87ef-e452da6ecf74"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d"},{"parent":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","child":"1dd18a01-147a-489b-941e-867a5fc7389b"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"7122c816-b17e-4185-9c99-0fc03101be5b","child":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0"},{"parent":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","child":"2b54670b-7be3-4478-a89c-0fb50685bba2"},{"parent":"2b54670b-7be3-4478-a89c-0fb50685bba2","child":"4b0268ef-ea00-4441-a8ad-58cdb5372c28"},{"parent":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","child":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca"}]}\n')
[2022-12-07 17:07:49] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: graph: {'nodes': [{'id': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'name': 'Import libs', 'code': 'import pandas as pd\nimport numpy as np\nfrom pickle import dump, load\nimport itertools\nimport winsound\n\nimport Custom_Tools\nfrom sksurv.nonparametric import kaplan_meier_estimator\nfrom target_definition import target_definition\nfrom feature_engineering import feature_engineering\nfrom drop_turnover import drop_turnover\nfrom preprocess_turnover import preprocess_turnover\nfrom scale_dataset import scale_dataset\nfrom final_transformation import final_transformation\nfrom population_filter import population_filter\n\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\n\n\nfrom imblearn.over_sampling import ADASYN\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics\n\n\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport optuna', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'name': 'First dataset', 'code': "df = pd.read_excel('C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/'\n                   'Python/Análise_Headcount.xlsx')\n\n'''\nAdicionar tipo de função (Gestor, não gestor)\nFeature Hashing - funcao_descricao, codsecao\nSalário, méritos e promoções\nPulses\n\nfilial_descricao não vai entrar porque codsecao pega filial e área.\n'''", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'name': 'Survival analysis preparation', 'code': "df_surv = feature_engineering(target_definition(df, 'tipo_colaborador', 'CLT'))\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\ndf_surv.loc[df_surv.tipo_função == 'Docente','tipo_filial'] = 'DOCENTE'", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd695fd5d-fedd-440a-933a-e6b09ae9902b', 'name': 'Generate plots', 'code': 'data_x = df_surv.copy()\n\ndata_y = df_surv.desligado==1\n\nsurv_days = data_x.tempo_de_casa\n\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\n\nfor i in analyze:\n\n    analisar = i\n\n    plt.figure(figsize=(12, 12), dpi=80)\n\n    for value in data_x[analisar].unique():\n        mask = data_x[analisar] == value\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\n                                                               surv_days[mask])\n        plt.step(time_cell, survival_prob_cell, where="post",\n                 label="%s (n = %d)" % (value, mask.sum()));\n\n    plt.ylabel("est. probability of survival $\\hat{S}(t)$")\n    plt.xlabel("Months")\n    plt.legend(loc="best");\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4dabbcf4-809d-4903-8e32-26279499c336', 'name': 'Target definition', 'code': "df_alvo = target_definition(df, 'tipo_colaborador', 'CLT')\n\ndf_alvo = population_filter(df_alvo)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'ce04c155-4800-4dae-9253-501682182090', 'name': 'Holdout', 'code': "X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop(['desligado'], axis=1), df_alvo['desligado'], test_size=0.1, random_state=42, stratify=df_alvo['desligado']) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64', 'name': 'Check proportions Holdout', 'code': 'print(y.value_counts()/y.shape[0])\nprint(y_holdout.value_counts()/y_holdout.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'name': 'Train test', 'code': 'X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3', 'name': 'Check proportion Train Test', 'code': 'print(y_train.value_counts()/y_train.shape[0])\nprint(y_test.value_counts()/y_test.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'd3a63656-d9e4-4200-80a2-ff1e529262ab', 'name': 'Averages for input', 'code': 'print(X_train.idade.mean())', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'name': 'Engineer Drop and Preprocess', 'code': 'df_trat = X_train\n\ny_trat = y_train.loc[df_trat.index]\n\ndf_eng = feature_engineering(df_trat)\n\ndf_trat_drop = drop_turnover(df_eng)\n\ndf_preprocess = preprocess_turnover(df_trat_drop)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '953422cc-3fb0-4601-952c-2840da505de3', 'name': 'Engineer info', 'code': 'print(df_preprocess.columns)\nprint(df_preprocess.shape)\nprint(y_trat.shape)\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\nprint(df_preprocess.isnull().sum())\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '719aa0e4-d5ec-44f6-a6c2-79117c96874e', 'name': 'Scaling fit', 'code': "Scaler = MinMaxScaler((0,1))\nScaler.fit(df_preprocess)\ndump(Scaler, open('Scaler.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': '#FAFF00', 'comments': [], 'diskcache': False}}, {'id': 'a7324ce3-3533-4319-82d0-3360324d7249', 'name': 'Hashing High Cardinality test', 'code': "from sklearn.feature_extraction import FeatureHasher\n\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])\n\nscores = pd.DataFrame()\n\nfrom tqdm.notebook import tqdm\n\nfor i in tqdm(range(3,50)):\n\n    n_features = i\n\n    hashf = FeatureHasher(n_features=n_features,  input_type='string')\n\n    funcao_cols = ['funcao_'+str(i) for i in range(n_features)]\n\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\n\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\n\n    model.fit(train_hash, y_trat)\n    \n    score = useful_metrics(test_hash, y_test, model)\n    \n    score['cols'] = i\n    \n    scores = pd.concat([scores, score])\n    ", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'name': 'Scaling transform', 'code': "Scaler = load(open('Scaler.pkl', 'rb'))\nfeature = df_preprocess.columns.tolist()\nscaled_df = df_preprocess\nscaled_df = scale_dataset(df_preprocess, feature, None)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '825318b2-890f-4cd9-984b-5d282130a117', 'name': 'Custom Tool analysis', 'code': "df_preprocess_analysis = scaled_df.copy()\ndf_preprocess_analysis['desligado'] = y_train\n\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\n\ncols = aval.col_missing()\n\ncard = aval.cardinality()\n\nrws = aval.row_missing()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'name': 'Row evaluation', 'code': 'print(rws[rws > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'c649590d-5e04-47b6-8889-a0bd2901b1ba', 'name': 'Column evaluation', 'code': 'print(cols[cols > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '71269304-ddf9-4591-a4d0-c45357dfb043', 'name': 'Feature Selection run', 'code': 'algorithms = [chi2, f_classif, mutual_info_classif]\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'name': 'Feature Selection results', 'code': "features = selection.columns.tolist()\nfeatures.remove('Total_points')\nKbest_eval = selection.groupby('Columns').sum()['Total_points'].sort_values(ascending=False) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'name': 'Dropping redundant features', 'code': "Kbest_eval[(Kbest_eval.index != 'agrup_salario') & (Kbest_eval.index != 'tempo_de_casa') & (Kbest_eval.index != 'ord_faixa_etaria')][:Kbest_eval.shape[0]//2].index.tolist()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '11d639e9-9f16-4840-9ca2-932561027791', 'name': 'Features selected and save', 'code': "# Tempo de casa redundante com ord_faixa_tempo_casa\nfeature_final = ['VP_descricao_VICEPRESIDENCIADEOPERACOES',\n 'tipo_filial_DIGITAL',\n 'VP_descricao_VICEPRESIDENCIADEMERCADO',\n 'tipo_filial_UNDERGRADUATE',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS',\n 'salario',\n 'ord_faixa_tempo_casa',\n 'idade',\n 'cotapcd',\n 'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS',\n 'VP_descricao_VICEPRESIDENCIADEMARKETING',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA',\n 'genero_Masculino',\n 'genero_Feminino']\ndump(feature_final, open('feature_selection.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '68316262-8a81-4e81-8305-99a17550bfcc', 'name': 'Final features', 'code': "#feature_final = load(open('feature_selection.pkl', 'rb'))\nfeature_final = [x for x in scaled_df]\n\n# Comment if feature selection was used\ndump(feature_final, open('feature_selection.pkl', 'wb'))\n\n#feature_final.remove('escolaridade_classificao')\nX_train_final = scaled_df[feature_final]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'name': 'Models init overfit eval', 'code': "lr = LogisticRegression(max_iter=10000)\nlgbm = LGBMClassifier()\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\ncat = CatBoostClassifier(silent=True)\next = ExtraTreesClassifier()\ngnb = GaussianNB()\n\n\nmodels = {'Logistic Regression': lr,\n          'LGBM': lgbm,\n          'XGBoost': xgb,\n          'CatBoost | Default': cat,\n          'Gaussian NB': gnb,\n          'Extra trees | Default': ExtraTreesClassifier(),\n          'Extra trees | balanced ': ExtraTreesClassifier(class_weight='balanced'), # noqa E501\n          'Extra trees | balanced_subsample': ExtraTreesClassifier(class_weight='balanced_subsample'), # noqa E501\n          'Random Forest | Default': RandomForestClassifier()}\n\nfor a in range(5, 2, -1):\n    models['Random Forest - Max_depth:'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\n\ndepth = [3]\nrs = [0.5]\nparams_list=[ depth, rs ]\n\nfor depth_at, rs_at in list(itertools.product(*params_list)):\n    models['CatBoostClassifier | Early_Stopping:4'+' | depth:'+str(depth_at)+' | strength:'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'name': 'One model test', 'code': "models_1 = {'Random Forest - Default': RandomForestClassifier()}", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'name': 'Test results', 'code': 'test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\ntest_results = test.overfit(metrics.f1_score)\ntest_results', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821', 'name': 'Test results chart', 'code': 'fig = px.line(test_results, x="Sample", y="f1_score", color="Dataset", facet_col="Model", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\nfig.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'name': 'All models run F1 score', 'code': 'All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '60fd0370-09a6-49e3-abdf-9c29067c6754', 'name': 'F1 Score', 'code': "pivot_f1 = All_models_results_f1.pivot(index=['Sample', 'Model'], columns='Dataset', values='f1_score') # noqa E501\npivot_f1['Overfit'] = abs(pivot_f1['Test']-pivot_f1['Train'])\npivot_f1 = pivot_f1.groupby(['Model'])[['Overfit', 'Test']].mean().sort_values(['Overfit']) # noqa E501\npivot_f1[pivot_f1.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'name': 'All models run recall score', 'code': 'All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf', 'name': 'Recall score', 'code': "pivot_recall = All_models_results_recall.pivot(index=['Sample', 'Model'], columns='Dataset', values='recall_score') # noqa E501\npivot_recall['Overfit'] = abs(pivot_recall['Test']-pivot_recall['Train'])\npivot_recall = pivot_recall.groupby('Model')['Overfit', 'Test'].mean().sort_values('Overfit') # noqa E501\npivot_recall[pivot_recall.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'name': 'All models run precision score', 'code': 'All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '2873ca00-5d55-4437-9f3d-1c723e51a070', 'name': 'Precision score', 'code': "pivot_precision = All_models_results_precision.pivot(index=['Sample', 'Model'], columns='Dataset', values='precision_score') # noqa E501\npivot_precision['Overfit'] = abs(pivot_precision['Test']-pivot_precision['Train'])\npivot_precision = pivot_precision.groupby('Model')[['Overfit', 'Test']].mean().sort_values('Overfit') # noqa E501\npivot_precision[pivot_precision.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'name': 'Prepare X_test dataset', 'code': "X_test_final = final_transformation(X_test, feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'name': 'Wrap up final datasets', 'code': 'X_train_final, y_train_final = X_train_final, y_trat', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c969afb6-beca-462c-994b-3711f45b9725', 'name': 'Check shapes', 'code': 'print(X_train_final.shape)\nprint(y_train_final.shape)\nprint(X_test_final.shape)\nprint(y_test.shape)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'name': 'Metrics function', 'code': "def useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '10188aaf-83cc-4fcb-afe3-d7520346a34a', 'name': 'Chosen model baseline', 'code': 'gnb = GaussianNB()\ngnb.fit(X_train_final, y_train_final)\n\ncat = CatBoostClassifier(silent=True)\ncat.fit(X_train_final, y_train_final)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\n\nmodels = [gnb, cat, xgb]\n\nfor model in models:\n\n    print(model.__class__.__name__)\n\n    model.fit(X_train_final, y_train_final)\n\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\n                         y_test, model))\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'name': 'Optuna dataset', 'code': 'X_optuna = pd.concat([X_train_final, X_test_final])\ny_optuna = pd.concat([y_train_final, y_test])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'name': 'Optuna function Gaussian', 'code': "\nsequence = [ ]\nfor i in range(-9, 1):\n    sequence.append(10**i)\n\ndef objective_gnb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'var_smoothing': trial.suggest_categorical('var_smoothing', sequence)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = GaussianNB(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'name': 'Optuna function LR', 'code': "def objective_lr(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'max_iter':10000\n    }\n    \n    oversample_grid = {\n        'sampling_strategy': trial.suggest_float('sampling_strategy',0.5,1.0,step=0.01)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = LogisticRegression(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n    \n    over_under = ADASYN(**oversample_grid)\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n        \n        X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'name': 'Optuna Run LR', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_lr, n_trials=100)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4', 'name': 'Optuna Results LR', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'name': 'Optuna function XGB', 'code': "def objective_xgb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n\n    model_grid = {\n        # Prevent Overfit\n        'max_depth': trial.suggest_int('max_depth', 3, 7, step=1),\n        'min_child_weight': trial.suggest_int('min_child_weight', 1, 7, step=1),\n        'gamma': trial.suggest_int('gamma', 0, 7, step=1),\n        # Imbalanced dataset\n        'max_delta_step': trial.suggest_int('max_delta_step', 0, 10, step=1)\n    }\n\n    param_grid = {\n        'threshold': trial.suggest_float('threshold', 0.2, 1.0, step=0.01)\n    }\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation, evaluation])\n\n    return(F_evaluation.f1_score.std(),\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\n           F_evaluation.recall_score.mean(),\n           F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'name': 'Optuna Run XGB', 'code': "study = optuna.create_study(directions=['minimize', 'maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_xgb, n_trials=50)\n\nduration = 2000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c8443305-4d7a-4455-9492-a7aeaaff5e07', 'name': 'Optuna Results XGB', 'code': "metrics_name = ['std_F1','F1', 'Precision', 'Recall', 'Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n\n    for metric, value in zip(metrics_name, trial.values):\n\n        try_1[metric] = value\n\n    try_1['Params'] = str(trial.params)\n\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n\n    tries = tries[tries.Precision > 0]\n\nbest_params = tries.sort_values(['std_F1', 'Precision','F1','Brier'], ascending= [True, False, True, False]).head(100)\n\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'name': 'Optuna run Gaussian', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_gnb, n_trials=200)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '05f7e787-a336-4342-b603-78809382262e', 'name': 'Optuna results', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74', 'name': 'Top 20 results optuna', 'code': "tries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'name': 'Final model params', 'code': "params = {'max_depth': 6, 'min_child_weight': 4, 'gamma': 1, 'max_delta_step': 10}\n\nthreshold = 0.52\n\ngnb = GaussianNB()\n\nlr = LogisticRegression(max_iter=10000)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\n\nover_under = ADASYN(sampling_strategy=0.64)\n\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac', 'name': 'Yellowbricks threshold', 'code': 'from yellowbrick.classifier import DiscriminationThreshold\n\n\n# Instantiate the classification model and visualizer\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\nvisualizer = DiscriminationThreshold(model)\n\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\nvisualizer.show()           # Finalize and render the figure', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'name': 'Final model stats', 'code': 'X_dataset, y_dataset = X_optuna, y_optuna\n\nmodel = xgb\n\nevaluation = pd.DataFrame()\n\nassertiveness = pd.DataFrame()\n\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\n\ncount = 0\n\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\n\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\n        \n        #Exclude if no oversample\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train,y_train)\n\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\n        \n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\n        \n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\n        \n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\n        \n\n        count+=1\n        \n        print("Shuffle " + str(count), end = "\\r")\n        \nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\n        \ngrouped_stats = assertiveness.groupby(\'index\').agg(\n        avg_correct_percent =(\'correct\', \'mean\'),\n        avg_precision = (\'precision\', np.nanmean),\n        avg_recall = (\'recall\', np.nanmean),\n        std = (\'brier\', np.std),\n        brier = (\'brier\', np.mean),\n        count = (\'brier\', \'count\')\n        )\n        \nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\n\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '1dd18a01-147a-489b-941e-867a5fc7389b', 'name': 'Stats visualization', 'code': "duration = 1000  # milliseconds\nfreq = 440# Hz\nwinsound.Beep(freq, duration)\nax = sns.boxplot(x='variable', y='value', data=pd.melt(evaluation))\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '7122c816-b17e-4185-9c99-0fc03101be5b', 'name': 'Prepare X_holdout dataset', 'code': "X_holdout_final = final_transformation(X_holdout,feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'name': 'Final Results', 'code': 'xgb.fit(X_optuna, y_optuna)\n\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\n\nconfusion_matrix = metrics.confusion_matrix(\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\n\ntn, fp, fn, tp = confusion_matrix.ravel()\nspecificity = tn / (tn+fp)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'name': 'Confusion Matrix', 'code': 'cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\n\ncm_display.plot()\nplt.grid(False)\nplt.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'name': 'Laymans Results', 'code': 'print(f"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\n")\n\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\n\nprint(\'\\nExcelente notícia!!!!\')\n\n\n\nduration = 1000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca', 'name': 'Save Model', 'code': "dump(xgb, open('turnover_general_model.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}], 'edges': [{'parent': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'child': 'df37f106-a4ff-49cb-9f22-c550f0812b37'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '651d005e-5f45-4ca8-96ed-50c5783a308d'}, {'parent': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'child': 'd695fd5d-fedd-440a-933a-e6b09ae9902b'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '4dabbcf4-809d-4903-8e32-26279499c336'}, {'parent': '4dabbcf4-809d-4903-8e32-26279499c336', 'child': 'ce04c155-4800-4dae-9253-501682182090'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': 'd3a63656-d9e4-4200-80a2-ff1e529262ab'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '501b8112-a010-4f1a-9bed-41508f2b1acb'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '953422cc-3fb0-4601-952c-2840da505de3'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '953422cc-3fb0-4601-952c-2840da505de3', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a7324ce3-3533-4319-82d0-3360324d7249'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a3fde54e-894a-488e-a629-25ac13ec53e0'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '825318b2-890f-4cd9-984b-5d282130a117'}, {'parent': '825318b2-890f-4cd9-984b-5d282130a117', 'child': '04b793a6-4c8e-4598-828a-62fa4903b5bb'}, {'parent': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'child': 'c649590d-5e04-47b6-8889-a0bd2901b1ba'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '71269304-ddf9-4591-a4d0-c45357dfb043'}, {'parent': '71269304-ddf9-4591-a4d0-c45357dfb043', 'child': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f'}, {'parent': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'child': '3c5a1393-9b6d-4206-83ff-660448ee4528'}, {'parent': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'child': '11d639e9-9f16-4840-9ca2-932561027791'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '68316262-8a81-4e81-8305-99a17550bfcc'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '616712eb-bc91-4af4-9b97-9bf57d3df147'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4'}, {'parent': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'child': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb'}, {'parent': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'child': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821'}, {'parent': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'child': 'dac101ac-b57e-445a-8101-b90e36ac28f7'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '60fd0370-09a6-49e3-abdf-9c29067c6754'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288'}, {'parent': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'child': '2873ca00-5d55-4437-9f3d-1c723e51a070'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'child': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': 'c969afb6-beca-462c-994b-3711f45b9725'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': '16da288a-1d46-4d2f-96e9-b9e59c5505f3'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': '10188aaf-83cc-4fcb-afe3-d7520346a34a'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': 'a878d86e-3707-49be-bb85-3a5c0cbe3972'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': 'd5742407-e18a-4185-a945-f5ac11dcb854'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175'}, {'parent': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'child': '2ff29722-5176-486b-8ec0-7b138fbe2c05'}, {'parent': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'child': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '8f560d16-8a82-4a85-821e-0a6dbf399eaf'}, {'parent': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'child': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0'}, {'parent': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'child': 'c8443305-4d7a-4455-9492-a7aeaaff5e07'}, {'parent': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'child': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257'}, {'parent': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'child': '05f7e787-a336-4342-b603-78809382262e'}, {'parent': '05f7e787-a336-4342-b603-78809382262e', 'child': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d'}, {'parent': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'child': '1dd18a01-147a-489b-941e-867a5fc7389b'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': '7122c816-b17e-4185-9c99-0fc03101be5b', 'child': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0'}, {'parent': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'child': '2b54670b-7be3-4478-a89c-0fb50685bba2'}, {'parent': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'child': '4b0268ef-ea00-4441-a8ad-58cdb5372c28'}, {'parent': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'child': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca'}]}
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Import libs (74e47343-3dbf-44f8-8228-e584f90a0e16), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:07:49] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:03] mrx-link.MRXLinkMagics.mrxlink_set_parameters() DEBUG: args: Namespace(no_reply=True, base_url='http://localhost:8888/', header='Accept-Encoding=gzip,%20deflate,%20br;Host=localhost:8888;%20Authorization=token%2028f6151ce9fbd73f4964bf998f83d5913e6655dbb33ebbe0', cookie='_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20username-localhost-8888=2%7C1:0%7C10:1670443682%7C23:username-localhost-8888%7C44:Mjc5NDg2NGI5ZmI2NGQ0NDk4ODlmN2ViM2U0YjNhM2U=%7C2b3fff27df542d3cf475d3a1c72fc834b19ecc28397a502044c5a18f71f09754', cell='[]\n')
[2022-12-07 17:08:04] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: args: Namespace(base_url='http://localhost:8888/', header='Accept-Encoding=gzip,%20deflate,%20br;Host=localhost:8888;%20Authorization=token%2028f6151ce9fbd73f4964bf998f83d5913e6655dbb33ebbe0', cookie='_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20username-localhost-8888=2%7C1:0%7C10:1670443683%7C23:username-localhost-8888%7C44:NzIxZTFjMWZmNDc4NDBjMWE4OWVkODJhZDA0ZmRmMGQ=%7C4b4b173712e92f8851d994b2d87f003f2d620b7b66ade2a14fe278ae68413d8c', cell='{"nodes":[{"id":"74e47343-3dbf-44f8-8228-e584f90a0e16","name":"Import libs","code":"import pandas as pd\\nimport numpy as np\\nfrom pickle import dump, load\\nimport itertools\\nimport winsound\\n\\nimport Custom_Tools\\nfrom sksurv.nonparametric import kaplan_meier_estimator\\nfrom target_definition import target_definition\\nfrom feature_engineering import feature_engineering\\nfrom drop_turnover import drop_turnover\\nfrom preprocess_turnover import preprocess_turnover\\nfrom scale_dataset import scale_dataset\\nfrom final_transformation import final_transformation\\nfrom population_filter import population_filter\\n\\n\\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\\nfrom sklearn.preprocessing import MinMaxScaler\\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\\n\\n\\nfrom imblearn.over_sampling import ADASYN\\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\\nfrom sklearn.linear_model import LogisticRegression\\nfrom lightgbm import LGBMClassifier\\nfrom xgboost import XGBClassifier\\nfrom catboost import CatBoostClassifier\\nfrom sklearn.naive_bayes import GaussianNB\\nfrom sklearn import metrics\\n\\n\\nimport plotly.express as px\\nimport seaborn as sns\\nimport matplotlib.pyplot as plt\\n\\n\\nimport optuna","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"df37f106-a4ff-49cb-9f22-c550f0812b37","name":"First dataset","code":"df = pd.read_excel(\'C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/\'\\n                   \'Python/Análise_Headcount.xlsx\')\\n\\n\'\'\'\\nAdicionar tipo de função (Gestor, não gestor)\\nFeature Hashing - funcao_descricao, codsecao\\nSalário, méritos e promoções\\nPulses\\n\\nfilial_descricao não vai entrar porque codsecao pega filial e área.\\n\'\'\'","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"651d005e-5f45-4ca8-96ed-50c5783a308d","name":"Survival analysis preparation","code":"df_surv = feature_engineering(target_definition(df, \'tipo_colaborador\', \'CLT\'))\\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\\ndf_surv.loc[df_surv.tipo_função == \'Docente\',\'tipo_filial\'] = \'DOCENTE\'","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d695fd5d-fedd-440a-933a-e6b09ae9902b","name":"Generate plots","code":"data_x = df_surv.copy()\\n\\ndata_y = df_surv.desligado==1\\n\\nsurv_days = data_x.tempo_de_casa\\n\\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\\n\\nfor i in analyze:\\n\\n    analisar = i\\n\\n    plt.figure(figsize=(12, 12), dpi=80)\\n\\n    for value in data_x[analisar].unique():\\n        mask = data_x[analisar] == value\\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\\n                                                               surv_days[mask])\\n        plt.step(time_cell, survival_prob_cell, where=\\"post\\",\\n                 label=\\"%s (n = %d)\\" % (value, mask.sum()));\\n\\n    plt.ylabel(\\"est. probability of survival $\\\\hat{S}(t)$\\")\\n    plt.xlabel(\\"Months\\")\\n    plt.legend(loc=\\"best\\");\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4dabbcf4-809d-4903-8e32-26279499c336","name":"Target definition","code":"df_alvo = target_definition(df, \'tipo_colaborador\', \'CLT\')\\n\\ndf_alvo = population_filter(df_alvo)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"ce04c155-4800-4dae-9253-501682182090","name":"Holdout","code":"X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop([\'desligado\'], axis=1), df_alvo[\'desligado\'], test_size=0.1, random_state=42, stratify=df_alvo[\'desligado\']) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64","name":"Check proportions Holdout","code":"print(y.value_counts()/y.shape[0])\\nprint(y_holdout.value_counts()/y_holdout.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","name":"Train test","code":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3","name":"Check proportion Train Test","code":"print(y_train.value_counts()/y_train.shape[0])\\nprint(y_test.value_counts()/y_test.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"d3a63656-d9e4-4200-80a2-ff1e529262ab","name":"Averages for input","code":"print(X_train.idade.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"501b8112-a010-4f1a-9bed-41508f2b1acb","name":"Engineer Drop and Preprocess","code":"df_trat = X_train\\n\\ny_trat = y_train.loc[df_trat.index]\\n\\ndf_eng = feature_engineering(df_trat)\\n\\ndf_trat_drop = drop_turnover(df_eng)\\n\\ndf_preprocess = preprocess_turnover(df_trat_drop)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"953422cc-3fb0-4601-952c-2840da505de3","name":"Engineer info","code":"print(df_preprocess.columns)\\nprint(df_preprocess.shape)\\nprint(y_trat.shape)\\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\\nprint(df_preprocess.isnull().sum())\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"719aa0e4-d5ec-44f6-a6c2-79117c96874e","name":"Scaling fit","code":"Scaler = MinMaxScaler((0,1))\\nScaler.fit(df_preprocess)\\ndump(Scaler, open(\'Scaler.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"#FAFF00","comments":[],"diskcache":false}},{"id":"a7324ce3-3533-4319-82d0-3360324d7249","name":"Hashing High Cardinality test","code":"from sklearn.feature_extraction import FeatureHasher\\n\\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])\\n\\nscores = pd.DataFrame()\\n\\nfrom tqdm.notebook import tqdm\\n\\nfor i in tqdm(range(3,50)):\\n\\n    n_features = i\\n\\n    hashf = FeatureHasher(n_features=n_features,  input_type=\'string\')\\n\\n    funcao_cols = [\'funcao_\'+str(i) for i in range(n_features)]\\n\\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\\n\\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\n    model.fit(train_hash, y_trat)\\n    \\n    score = useful_metrics(test_hash, y_test, model)\\n    \\n    score[\'cols\'] = i\\n    \\n    scores = pd.concat([scores, score])\\n    ","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a3fde54e-894a-488e-a629-25ac13ec53e0","name":"Scaling transform","code":"Scaler = load(open(\'Scaler.pkl\', \'rb\'))\\nfeature = df_preprocess.columns.tolist()\\nscaled_df = df_preprocess\\nscaled_df = scale_dataset(df_preprocess, feature, None)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"825318b2-890f-4cd9-984b-5d282130a117","name":"Custom Tool analysis","code":"df_preprocess_analysis = scaled_df.copy()\\ndf_preprocess_analysis[\'desligado\'] = y_train\\n\\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\\n\\ncols = aval.col_missing()\\n\\ncard = aval.cardinality()\\n\\nrws = aval.row_missing()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"04b793a6-4c8e-4598-828a-62fa4903b5bb","name":"Row evaluation","code":"print(rws[rws > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"c649590d-5e04-47b6-8889-a0bd2901b1ba","name":"Column evaluation","code":"print(cols[cols > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"71269304-ddf9-4591-a4d0-c45357dfb043","name":"Feature Selection run","code":"algorithms = [chi2, f_classif, mutual_info_classif]\\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","name":"Feature Selection results","code":"features = selection.columns.tolist()\\nfeatures.remove(\'Total_points\')\\nKbest_eval = selection.groupby(\'Columns\').sum()[\'Total_points\'].sort_values(ascending=False) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"3c5a1393-9b6d-4206-83ff-660448ee4528","name":"Dropping redundant features","code":"Kbest_eval[(Kbest_eval.index != \'agrup_salario\') & (Kbest_eval.index != \'tempo_de_casa\') & (Kbest_eval.index != \'ord_faixa_etaria\')][:Kbest_eval.shape[0]//2].index.tolist()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"11d639e9-9f16-4840-9ca2-932561027791","name":"Features selected and save","code":"# Tempo de casa redundante com ord_faixa_tempo_casa\\nfeature_final = [\'VP_descricao_VICEPRESIDENCIADEOPERACOES\',\\n \'tipo_filial_DIGITAL\',\\n \'VP_descricao_VICEPRESIDENCIADEMERCADO\',\\n \'tipo_filial_UNDERGRADUATE\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS\',\\n \'salario\',\\n \'ord_faixa_tempo_casa\',\\n \'idade\',\\n \'cotapcd\',\\n \'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS\',\\n \'VP_descricao_VICEPRESIDENCIADEMARKETING\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA\',\\n \'genero_Masculino\',\\n \'genero_Feminino\']\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"68316262-8a81-4e81-8305-99a17550bfcc","name":"Final features","code":"#feature_final = load(open(\'feature_selection.pkl\', \'rb\'))\\nfeature_final = [x for x in scaled_df]\\n\\n# Comment if feature selection was used\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))\\n\\n#feature_final.remove(\'escolaridade_classificao\')\\nX_train_final = scaled_df[feature_final]","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"616712eb-bc91-4af4-9b97-9bf57d3df147","name":"Models init overfit eval","code":"lr = LogisticRegression(max_iter=10000)\\nlgbm = LGBMClassifier()\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\ncat = CatBoostClassifier(silent=True)\\next = ExtraTreesClassifier()\\ngnb = GaussianNB()\\n\\n\\nmodels = {\'Logistic Regression\': lr,\\n          \'LGBM\': lgbm,\\n          \'XGBoost\': xgb,\\n          \'CatBoost | Default\': cat,\\n          \'Gaussian NB\': gnb,\\n          \'Extra trees | Default\': ExtraTreesClassifier(),\\n          \'Extra trees | balanced \': ExtraTreesClassifier(class_weight=\'balanced\'), # noqa E501\\n          \'Extra trees | balanced_subsample\': ExtraTreesClassifier(class_weight=\'balanced_subsample\'), # noqa E501\\n          \'Random Forest | Default\': RandomForestClassifier()}\\n\\nfor a in range(5, 2, -1):\\n    models[\'Random Forest - Max_depth:\'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\\n\\ndepth = [3]\\nrs = [0.5]\\nparams_list=[ depth, rs ]\\n\\nfor depth_at, rs_at in list(itertools.product(*params_list)):\\n    models[\'CatBoostClassifier | Early_Stopping:4\'+\' | depth:\'+str(depth_at)+\' | strength:\'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","name":"One model test","code":"models_1 = {\'Random Forest - Default\': RandomForestClassifier()}","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","name":"Test results","code":"test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\\ntest_results = test.overfit(metrics.f1_score)\\ntest_results","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"b2b08397-d1fa-49bb-b121-6d2fbd86f821","name":"Test results chart","code":"fig = px.line(test_results, x=\\"Sample\\", y=\\"f1_score\\", color=\\"Dataset\\", facet_col=\\"Model\\", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\\nfig.show()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"dac101ac-b57e-445a-8101-b90e36ac28f7","name":"All models run F1 score","code":"All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"60fd0370-09a6-49e3-abdf-9c29067c6754","name":"F1 Score","code":"pivot_f1 = All_models_results_f1.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'f1_score\') # noqa E501\\npivot_f1[\'Overfit\'] = abs(pivot_f1[\'Test\']-pivot_f1[\'Train\'])\\npivot_f1 = pivot_f1.groupby([\'Model\'])[[\'Overfit\', \'Test\']].mean().sort_values([\'Overfit\']) # noqa E501\\npivot_f1[pivot_f1.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","name":"All models run recall score","code":"All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf","name":"Recall score","code":"pivot_recall = All_models_results_recall.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'recall_score\') # noqa E501\\npivot_recall[\'Overfit\'] = abs(pivot_recall[\'Test\']-pivot_recall[\'Train\'])\\npivot_recall = pivot_recall.groupby(\'Model\')[\'Overfit\', \'Test\'].mean().sort_values(\'Overfit\') # noqa E501\\npivot_recall[pivot_recall.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","name":"All models run precision score","code":"All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"2873ca00-5d55-4437-9f3d-1c723e51a070","name":"Precision score","code":"pivot_precision = All_models_results_precision.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'precision_score\') # noqa E501\\npivot_precision[\'Overfit\'] = abs(pivot_precision[\'Test\']-pivot_precision[\'Train\'])\\npivot_precision = pivot_precision.groupby(\'Model\')[[\'Overfit\', \'Test\']].mean().sort_values(\'Overfit\') # noqa E501\\npivot_precision[pivot_precision.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"180c9593-1123-4208-aa33-b2bf9c86b1e8","name":"Prepare X_test dataset","code":"X_test_final = final_transformation(X_test, feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","name":"Wrap up final datasets","code":"X_train_final, y_train_final = X_train_final, y_trat","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c969afb6-beca-462c-994b-3711f45b9725","name":"Check shapes","code":"print(X_train_final.shape)\\nprint(y_train_final.shape)\\nprint(X_test_final.shape)\\nprint(y_test.shape)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","name":"Metrics function","code":"def useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"10188aaf-83cc-4fcb-afe3-d7520346a34a","name":"Chosen model baseline","code":"gnb = GaussianNB()\\ngnb.fit(X_train_final, y_train_final)\\n\\ncat = CatBoostClassifier(silent=True)\\ncat.fit(X_train_final, y_train_final)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\nmodels = [gnb, cat, xgb]\\n\\nfor model in models:\\n\\n    print(model.__class__.__name__)\\n\\n    model.fit(X_train_final, y_train_final)\\n\\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\\n                         y_test, model))\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a878d86e-3707-49be-bb85-3a5c0cbe3972","name":"Optuna dataset","code":"X_optuna = pd.concat([X_train_final, X_test_final])\\ny_optuna = pd.concat([y_train_final, y_test])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"d5742407-e18a-4185-a945-f5ac11dcb854","name":"Optuna function Gaussian","code":"\\nsequence = [ ]\\nfor i in range(-9, 1):\\n    sequence.append(10**i)\\n\\ndef objective_gnb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'var_smoothing\': trial.suggest_categorical(\'var_smoothing\', sequence)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = GaussianNB(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","name":"Optuna function LR","code":"def objective_lr(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'max_iter\':10000\\n    }\\n    \\n    oversample_grid = {\\n        \'sampling_strategy\': trial.suggest_float(\'sampling_strategy\',0.5,1.0,step=0.01)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = LogisticRegression(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n    \\n    over_under = ADASYN(**oversample_grid)\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n        \\n        X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2ff29722-5176-486b-8ec0-7b138fbe2c05","name":"Optuna Run LR","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_lr, n_trials=100)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4","name":"Optuna Results LR","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","name":"Optuna function XGB","code":"def objective_xgb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n\\n    model_grid = {\\n        # Prevent Overfit\\n        \'max_depth\': trial.suggest_int(\'max_depth\', 3, 7, step=1),\\n        \'min_child_weight\': trial.suggest_int(\'min_child_weight\', 1, 7, step=1),\\n        \'gamma\': trial.suggest_int(\'gamma\', 0, 7, step=1),\\n        # Imbalanced dataset\\n        \'max_delta_step\': trial.suggest_int(\'max_delta_step\', 0, 10, step=1)\\n    }\\n\\n    param_grid = {\\n        \'threshold\': trial.suggest_float(\'threshold\', 0.2, 1.0, step=0.01)\\n    }\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n\\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation, evaluation])\\n\\n    return(F_evaluation.f1_score.std(),\\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\\n           F_evaluation.recall_score.mean(),\\n           F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","name":"Optuna Run XGB","code":"study = optuna.create_study(directions=[\'minimize\', \'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_xgb, n_trials=50)\\n\\nduration = 2000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c8443305-4d7a-4455-9492-a7aeaaff5e07","name":"Optuna Results XGB","code":"metrics_name = [\'std_F1\',\'F1\', \'Precision\', \'Recall\', \'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n\\n    for metric, value in zip(metrics_name, trial.values):\\n\\n        try_1[metric] = value\\n\\n    try_1[\'Params\'] = str(trial.params)\\n\\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n\\n    tries = tries[tries.Precision > 0]\\n\\nbest_params = tries.sort_values([\'std_F1\', \'Precision\',\'F1\',\'Brier\'], ascending= [True, False, True, False]).head(100)\\n\\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","name":"Optuna run Gaussian","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_gnb, n_trials=200)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"05f7e787-a336-4342-b603-78809382262e","name":"Optuna results","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d7fdb49f-1502-43d4-87ef-e452da6ecf74","name":"Top 20 results optuna","code":"tries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","name":"Final model params","code":"params = {\'max_depth\': 6, \'min_child_weight\': 4, \'gamma\': 1, \'max_delta_step\': 10}\\n\\nthreshold = 0.52\\n\\ngnb = GaussianNB()\\n\\nlr = LogisticRegression(max_iter=10000)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\\n\\nover_under = ADASYN(sampling_strategy=0.64)\\n\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac","name":"Yellowbricks threshold","code":"from yellowbrick.classifier import DiscriminationThreshold\\n\\n\\n# Instantiate the classification model and visualizer\\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\\nvisualizer = DiscriminationThreshold(model)\\n\\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\\nvisualizer.show()           # Finalize and render the figure","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","name":"Final model stats","code":"X_dataset, y_dataset = X_optuna, y_optuna\\n\\nmodel = xgb\\n\\nevaluation = pd.DataFrame()\\n\\nassertiveness = pd.DataFrame()\\n\\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\\n\\ncount = 0\\n\\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\\n\\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\\n        \\n        #Exclude if no oversample\\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train,y_train)\\n\\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\\n        \\n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\\n        \\n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\\n        \\n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\\n        \\n\\n        count+=1\\n        \\n        print(\\"Shuffle \\" + str(count), end = \\"\\\\r\\")\\n        \\nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\n        \\ngrouped_stats = assertiveness.groupby(\'index\').agg(\\n        avg_correct_percent =(\'correct\', \'mean\'),\\n        avg_precision = (\'precision\', np.nanmean),\\n        avg_recall = (\'recall\', np.nanmean),\\n        std = (\'brier\', np.std),\\n        brier = (\'brier\', np.mean),\\n        count = (\'brier\', \'count\')\\n        )\\n        \\nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\\n\\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"1dd18a01-147a-489b-941e-867a5fc7389b","name":"Stats visualization","code":"duration = 1000  # milliseconds\\nfreq = 440# Hz\\nwinsound.Beep(freq, duration)\\nax = sns.boxplot(x=\'variable\', y=\'value\', data=pd.melt(evaluation))\\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"7122c816-b17e-4185-9c99-0fc03101be5b","name":"Prepare X_holdout dataset","code":"X_holdout_final = final_transformation(X_holdout,feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","name":"Final Results","code":"xgb.fit(X_optuna, y_optuna)\\n\\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\\n\\nconfusion_matrix = metrics.confusion_matrix(\\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\\n\\ntn, fp, fn, tp = confusion_matrix.ravel()\\nspecificity = tn / (tn+fp)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b54670b-7be3-4478-a89c-0fb50685bba2","name":"Confusion Matrix","code":"cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\\n\\ncm_display.plot()\\nplt.grid(False)\\nplt.show()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","name":"Laymans Results","code":"print(f\\"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\\\n\\")\\n\\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\\n\\nprint(\'\\\\nExcelente notícia!!!!\')\\n\\n\\n\\nduration = 1000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca","name":"Save Model","code":"dump(xgb, open(\'turnover_general_model.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}}],"edges":[{"parent":"74e47343-3dbf-44f8-8228-e584f90a0e16","child":"df37f106-a4ff-49cb-9f22-c550f0812b37"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"651d005e-5f45-4ca8-96ed-50c5783a308d"},{"parent":"651d005e-5f45-4ca8-96ed-50c5783a308d","child":"d695fd5d-fedd-440a-933a-e6b09ae9902b"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"4dabbcf4-809d-4903-8e32-26279499c336"},{"parent":"4dabbcf4-809d-4903-8e32-26279499c336","child":"ce04c155-4800-4dae-9253-501682182090"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"d3a63656-d9e4-4200-80a2-ff1e529262ab"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"501b8112-a010-4f1a-9bed-41508f2b1acb"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"953422cc-3fb0-4601-952c-2840da505de3"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"953422cc-3fb0-4601-952c-2840da505de3","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a7324ce3-3533-4319-82d0-3360324d7249"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a3fde54e-894a-488e-a629-25ac13ec53e0"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"825318b2-890f-4cd9-984b-5d282130a117"},{"parent":"825318b2-890f-4cd9-984b-5d282130a117","child":"04b793a6-4c8e-4598-828a-62fa4903b5bb"},{"parent":"04b793a6-4c8e-4598-828a-62fa4903b5bb","child":"c649590d-5e04-47b6-8889-a0bd2901b1ba"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"71269304-ddf9-4591-a4d0-c45357dfb043"},{"parent":"71269304-ddf9-4591-a4d0-c45357dfb043","child":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f"},{"parent":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","child":"3c5a1393-9b6d-4206-83ff-660448ee4528"},{"parent":"3c5a1393-9b6d-4206-83ff-660448ee4528","child":"11d639e9-9f16-4840-9ca2-932561027791"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"68316262-8a81-4e81-8305-99a17550bfcc"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"616712eb-bc91-4af4-9b97-9bf57d3df147"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4"},{"parent":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","child":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb"},{"parent":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","child":"b2b08397-d1fa-49bb-b121-6d2fbd86f821"},{"parent":"616712eb-bc91-4af4-9b97-9bf57d3df147","child":"dac101ac-b57e-445a-8101-b90e36ac28f7"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"60fd0370-09a6-49e3-abdf-9c29067c6754"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288"},{"parent":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","child":"2873ca00-5d55-4437-9f3d-1c723e51a070"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"180c9593-1123-4208-aa33-b2bf9c86b1e8","child":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"c969afb6-beca-462c-994b-3711f45b9725"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"16da288a-1d46-4d2f-96e9-b9e59c5505f3"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"10188aaf-83cc-4fcb-afe3-d7520346a34a"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"a878d86e-3707-49be-bb85-3a5c0cbe3972"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"d5742407-e18a-4185-a945-f5ac11dcb854"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175"},{"parent":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","child":"2ff29722-5176-486b-8ec0-7b138fbe2c05"},{"parent":"2ff29722-5176-486b-8ec0-7b138fbe2c05","child":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"8f560d16-8a82-4a85-821e-0a6dbf399eaf"},{"parent":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","child":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0"},{"parent":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","child":"c8443305-4d7a-4455-9492-a7aeaaff5e07"},{"parent":"d5742407-e18a-4185-a945-f5ac11dcb854","child":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257"},{"parent":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","child":"05f7e787-a336-4342-b603-78809382262e"},{"parent":"05f7e787-a336-4342-b603-78809382262e","child":"d7fdb49f-1502-43d4-87ef-e452da6ecf74"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d"},{"parent":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","child":"1dd18a01-147a-489b-941e-867a5fc7389b"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"7122c816-b17e-4185-9c99-0fc03101be5b","child":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0"},{"parent":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","child":"2b54670b-7be3-4478-a89c-0fb50685bba2"},{"parent":"2b54670b-7be3-4478-a89c-0fb50685bba2","child":"4b0268ef-ea00-4441-a8ad-58cdb5372c28"},{"parent":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","child":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca"}]}\n')
[2022-12-07 17:08:04] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: graph: {'nodes': [{'id': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'name': 'Import libs', 'code': 'import pandas as pd\nimport numpy as np\nfrom pickle import dump, load\nimport itertools\nimport winsound\n\nimport Custom_Tools\nfrom sksurv.nonparametric import kaplan_meier_estimator\nfrom target_definition import target_definition\nfrom feature_engineering import feature_engineering\nfrom drop_turnover import drop_turnover\nfrom preprocess_turnover import preprocess_turnover\nfrom scale_dataset import scale_dataset\nfrom final_transformation import final_transformation\nfrom population_filter import population_filter\n\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\n\n\nfrom imblearn.over_sampling import ADASYN\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics\n\n\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport optuna', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'name': 'First dataset', 'code': "df = pd.read_excel('C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/'\n                   'Python/Análise_Headcount.xlsx')\n\n'''\nAdicionar tipo de função (Gestor, não gestor)\nFeature Hashing - funcao_descricao, codsecao\nSalário, méritos e promoções\nPulses\n\nfilial_descricao não vai entrar porque codsecao pega filial e área.\n'''", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'name': 'Survival analysis preparation', 'code': "df_surv = feature_engineering(target_definition(df, 'tipo_colaborador', 'CLT'))\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\ndf_surv.loc[df_surv.tipo_função == 'Docente','tipo_filial'] = 'DOCENTE'", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd695fd5d-fedd-440a-933a-e6b09ae9902b', 'name': 'Generate plots', 'code': 'data_x = df_surv.copy()\n\ndata_y = df_surv.desligado==1\n\nsurv_days = data_x.tempo_de_casa\n\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\n\nfor i in analyze:\n\n    analisar = i\n\n    plt.figure(figsize=(12, 12), dpi=80)\n\n    for value in data_x[analisar].unique():\n        mask = data_x[analisar] == value\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\n                                                               surv_days[mask])\n        plt.step(time_cell, survival_prob_cell, where="post",\n                 label="%s (n = %d)" % (value, mask.sum()));\n\n    plt.ylabel("est. probability of survival $\\hat{S}(t)$")\n    plt.xlabel("Months")\n    plt.legend(loc="best");\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4dabbcf4-809d-4903-8e32-26279499c336', 'name': 'Target definition', 'code': "df_alvo = target_definition(df, 'tipo_colaborador', 'CLT')\n\ndf_alvo = population_filter(df_alvo)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'ce04c155-4800-4dae-9253-501682182090', 'name': 'Holdout', 'code': "X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop(['desligado'], axis=1), df_alvo['desligado'], test_size=0.1, random_state=42, stratify=df_alvo['desligado']) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64', 'name': 'Check proportions Holdout', 'code': 'print(y.value_counts()/y.shape[0])\nprint(y_holdout.value_counts()/y_holdout.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'name': 'Train test', 'code': 'X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3', 'name': 'Check proportion Train Test', 'code': 'print(y_train.value_counts()/y_train.shape[0])\nprint(y_test.value_counts()/y_test.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'd3a63656-d9e4-4200-80a2-ff1e529262ab', 'name': 'Averages for input', 'code': 'print(X_train.idade.mean())', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'name': 'Engineer Drop and Preprocess', 'code': 'df_trat = X_train\n\ny_trat = y_train.loc[df_trat.index]\n\ndf_eng = feature_engineering(df_trat)\n\ndf_trat_drop = drop_turnover(df_eng)\n\ndf_preprocess = preprocess_turnover(df_trat_drop)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '953422cc-3fb0-4601-952c-2840da505de3', 'name': 'Engineer info', 'code': 'print(df_preprocess.columns)\nprint(df_preprocess.shape)\nprint(y_trat.shape)\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\nprint(df_preprocess.isnull().sum())\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '719aa0e4-d5ec-44f6-a6c2-79117c96874e', 'name': 'Scaling fit', 'code': "Scaler = MinMaxScaler((0,1))\nScaler.fit(df_preprocess)\ndump(Scaler, open('Scaler.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': '#FAFF00', 'comments': [], 'diskcache': False}}, {'id': 'a7324ce3-3533-4319-82d0-3360324d7249', 'name': 'Hashing High Cardinality test', 'code': "from sklearn.feature_extraction import FeatureHasher\n\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])\n\nscores = pd.DataFrame()\n\nfrom tqdm.notebook import tqdm\n\nfor i in tqdm(range(3,50)):\n\n    n_features = i\n\n    hashf = FeatureHasher(n_features=n_features,  input_type='string')\n\n    funcao_cols = ['funcao_'+str(i) for i in range(n_features)]\n\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\n\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\n\n    model.fit(train_hash, y_trat)\n    \n    score = useful_metrics(test_hash, y_test, model)\n    \n    score['cols'] = i\n    \n    scores = pd.concat([scores, score])\n    ", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'name': 'Scaling transform', 'code': "Scaler = load(open('Scaler.pkl', 'rb'))\nfeature = df_preprocess.columns.tolist()\nscaled_df = df_preprocess\nscaled_df = scale_dataset(df_preprocess, feature, None)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '825318b2-890f-4cd9-984b-5d282130a117', 'name': 'Custom Tool analysis', 'code': "df_preprocess_analysis = scaled_df.copy()\ndf_preprocess_analysis['desligado'] = y_train\n\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\n\ncols = aval.col_missing()\n\ncard = aval.cardinality()\n\nrws = aval.row_missing()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'name': 'Row evaluation', 'code': 'print(rws[rws > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'c649590d-5e04-47b6-8889-a0bd2901b1ba', 'name': 'Column evaluation', 'code': 'print(cols[cols > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '71269304-ddf9-4591-a4d0-c45357dfb043', 'name': 'Feature Selection run', 'code': 'algorithms = [chi2, f_classif, mutual_info_classif]\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'name': 'Feature Selection results', 'code': "features = selection.columns.tolist()\nfeatures.remove('Total_points')\nKbest_eval = selection.groupby('Columns').sum()['Total_points'].sort_values(ascending=False) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'name': 'Dropping redundant features', 'code': "Kbest_eval[(Kbest_eval.index != 'agrup_salario') & (Kbest_eval.index != 'tempo_de_casa') & (Kbest_eval.index != 'ord_faixa_etaria')][:Kbest_eval.shape[0]//2].index.tolist()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '11d639e9-9f16-4840-9ca2-932561027791', 'name': 'Features selected and save', 'code': "# Tempo de casa redundante com ord_faixa_tempo_casa\nfeature_final = ['VP_descricao_VICEPRESIDENCIADEOPERACOES',\n 'tipo_filial_DIGITAL',\n 'VP_descricao_VICEPRESIDENCIADEMERCADO',\n 'tipo_filial_UNDERGRADUATE',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS',\n 'salario',\n 'ord_faixa_tempo_casa',\n 'idade',\n 'cotapcd',\n 'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS',\n 'VP_descricao_VICEPRESIDENCIADEMARKETING',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA',\n 'genero_Masculino',\n 'genero_Feminino']\ndump(feature_final, open('feature_selection.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '68316262-8a81-4e81-8305-99a17550bfcc', 'name': 'Final features', 'code': "#feature_final = load(open('feature_selection.pkl', 'rb'))\nfeature_final = [x for x in scaled_df]\n\n# Comment if feature selection was used\ndump(feature_final, open('feature_selection.pkl', 'wb'))\n\n#feature_final.remove('escolaridade_classificao')\nX_train_final = scaled_df[feature_final]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'name': 'Models init overfit eval', 'code': "lr = LogisticRegression(max_iter=10000)\nlgbm = LGBMClassifier()\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\ncat = CatBoostClassifier(silent=True)\next = ExtraTreesClassifier()\ngnb = GaussianNB()\n\n\nmodels = {'Logistic Regression': lr,\n          'LGBM': lgbm,\n          'XGBoost': xgb,\n          'CatBoost | Default': cat,\n          'Gaussian NB': gnb,\n          'Extra trees | Default': ExtraTreesClassifier(),\n          'Extra trees | balanced ': ExtraTreesClassifier(class_weight='balanced'), # noqa E501\n          'Extra trees | balanced_subsample': ExtraTreesClassifier(class_weight='balanced_subsample'), # noqa E501\n          'Random Forest | Default': RandomForestClassifier()}\n\nfor a in range(5, 2, -1):\n    models['Random Forest - Max_depth:'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\n\ndepth = [3]\nrs = [0.5]\nparams_list=[ depth, rs ]\n\nfor depth_at, rs_at in list(itertools.product(*params_list)):\n    models['CatBoostClassifier | Early_Stopping:4'+' | depth:'+str(depth_at)+' | strength:'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'name': 'One model test', 'code': "models_1 = {'Random Forest - Default': RandomForestClassifier()}", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'name': 'Test results', 'code': 'test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\ntest_results = test.overfit(metrics.f1_score)\ntest_results', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821', 'name': 'Test results chart', 'code': 'fig = px.line(test_results, x="Sample", y="f1_score", color="Dataset", facet_col="Model", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\nfig.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'name': 'All models run F1 score', 'code': 'All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '60fd0370-09a6-49e3-abdf-9c29067c6754', 'name': 'F1 Score', 'code': "pivot_f1 = All_models_results_f1.pivot(index=['Sample', 'Model'], columns='Dataset', values='f1_score') # noqa E501\npivot_f1['Overfit'] = abs(pivot_f1['Test']-pivot_f1['Train'])\npivot_f1 = pivot_f1.groupby(['Model'])[['Overfit', 'Test']].mean().sort_values(['Overfit']) # noqa E501\npivot_f1[pivot_f1.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'name': 'All models run recall score', 'code': 'All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf', 'name': 'Recall score', 'code': "pivot_recall = All_models_results_recall.pivot(index=['Sample', 'Model'], columns='Dataset', values='recall_score') # noqa E501\npivot_recall['Overfit'] = abs(pivot_recall['Test']-pivot_recall['Train'])\npivot_recall = pivot_recall.groupby('Model')['Overfit', 'Test'].mean().sort_values('Overfit') # noqa E501\npivot_recall[pivot_recall.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'name': 'All models run precision score', 'code': 'All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '2873ca00-5d55-4437-9f3d-1c723e51a070', 'name': 'Precision score', 'code': "pivot_precision = All_models_results_precision.pivot(index=['Sample', 'Model'], columns='Dataset', values='precision_score') # noqa E501\npivot_precision['Overfit'] = abs(pivot_precision['Test']-pivot_precision['Train'])\npivot_precision = pivot_precision.groupby('Model')[['Overfit', 'Test']].mean().sort_values('Overfit') # noqa E501\npivot_precision[pivot_precision.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'name': 'Prepare X_test dataset', 'code': "X_test_final = final_transformation(X_test, feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'name': 'Wrap up final datasets', 'code': 'X_train_final, y_train_final = X_train_final, y_trat', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c969afb6-beca-462c-994b-3711f45b9725', 'name': 'Check shapes', 'code': 'print(X_train_final.shape)\nprint(y_train_final.shape)\nprint(X_test_final.shape)\nprint(y_test.shape)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'name': 'Metrics function', 'code': "def useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '10188aaf-83cc-4fcb-afe3-d7520346a34a', 'name': 'Chosen model baseline', 'code': 'gnb = GaussianNB()\ngnb.fit(X_train_final, y_train_final)\n\ncat = CatBoostClassifier(silent=True)\ncat.fit(X_train_final, y_train_final)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\n\nmodels = [gnb, cat, xgb]\n\nfor model in models:\n\n    print(model.__class__.__name__)\n\n    model.fit(X_train_final, y_train_final)\n\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\n                         y_test, model))\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'name': 'Optuna dataset', 'code': 'X_optuna = pd.concat([X_train_final, X_test_final])\ny_optuna = pd.concat([y_train_final, y_test])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'name': 'Optuna function Gaussian', 'code': "\nsequence = [ ]\nfor i in range(-9, 1):\n    sequence.append(10**i)\n\ndef objective_gnb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'var_smoothing': trial.suggest_categorical('var_smoothing', sequence)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = GaussianNB(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'name': 'Optuna function LR', 'code': "def objective_lr(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'max_iter':10000\n    }\n    \n    oversample_grid = {\n        'sampling_strategy': trial.suggest_float('sampling_strategy',0.5,1.0,step=0.01)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = LogisticRegression(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n    \n    over_under = ADASYN(**oversample_grid)\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n        \n        X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'name': 'Optuna Run LR', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_lr, n_trials=100)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4', 'name': 'Optuna Results LR', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'name': 'Optuna function XGB', 'code': "def objective_xgb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n\n    model_grid = {\n        # Prevent Overfit\n        'max_depth': trial.suggest_int('max_depth', 3, 7, step=1),\n        'min_child_weight': trial.suggest_int('min_child_weight', 1, 7, step=1),\n        'gamma': trial.suggest_int('gamma', 0, 7, step=1),\n        # Imbalanced dataset\n        'max_delta_step': trial.suggest_int('max_delta_step', 0, 10, step=1)\n    }\n\n    param_grid = {\n        'threshold': trial.suggest_float('threshold', 0.2, 1.0, step=0.01)\n    }\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation, evaluation])\n\n    return(F_evaluation.f1_score.std(),\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\n           F_evaluation.recall_score.mean(),\n           F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'name': 'Optuna Run XGB', 'code': "study = optuna.create_study(directions=['minimize', 'maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_xgb, n_trials=50)\n\nduration = 2000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c8443305-4d7a-4455-9492-a7aeaaff5e07', 'name': 'Optuna Results XGB', 'code': "metrics_name = ['std_F1','F1', 'Precision', 'Recall', 'Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n\n    for metric, value in zip(metrics_name, trial.values):\n\n        try_1[metric] = value\n\n    try_1['Params'] = str(trial.params)\n\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n\n    tries = tries[tries.Precision > 0]\n\nbest_params = tries.sort_values(['std_F1', 'Precision','F1','Brier'], ascending= [True, False, True, False]).head(100)\n\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'name': 'Optuna run Gaussian', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_gnb, n_trials=200)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '05f7e787-a336-4342-b603-78809382262e', 'name': 'Optuna results', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74', 'name': 'Top 20 results optuna', 'code': "tries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'name': 'Final model params', 'code': "params = {'max_depth': 6, 'min_child_weight': 4, 'gamma': 1, 'max_delta_step': 10}\n\nthreshold = 0.52\n\ngnb = GaussianNB()\n\nlr = LogisticRegression(max_iter=10000)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\n\nover_under = ADASYN(sampling_strategy=0.64)\n\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac', 'name': 'Yellowbricks threshold', 'code': 'from yellowbrick.classifier import DiscriminationThreshold\n\n\n# Instantiate the classification model and visualizer\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\nvisualizer = DiscriminationThreshold(model)\n\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\nvisualizer.show()           # Finalize and render the figure', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'name': 'Final model stats', 'code': 'X_dataset, y_dataset = X_optuna, y_optuna\n\nmodel = xgb\n\nevaluation = pd.DataFrame()\n\nassertiveness = pd.DataFrame()\n\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\n\ncount = 0\n\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\n\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\n        \n        #Exclude if no oversample\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train,y_train)\n\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\n        \n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\n        \n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\n        \n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\n        \n\n        count+=1\n        \n        print("Shuffle " + str(count), end = "\\r")\n        \nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\n        \ngrouped_stats = assertiveness.groupby(\'index\').agg(\n        avg_correct_percent =(\'correct\', \'mean\'),\n        avg_precision = (\'precision\', np.nanmean),\n        avg_recall = (\'recall\', np.nanmean),\n        std = (\'brier\', np.std),\n        brier = (\'brier\', np.mean),\n        count = (\'brier\', \'count\')\n        )\n        \nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\n\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '1dd18a01-147a-489b-941e-867a5fc7389b', 'name': 'Stats visualization', 'code': "duration = 1000  # milliseconds\nfreq = 440# Hz\nwinsound.Beep(freq, duration)\nax = sns.boxplot(x='variable', y='value', data=pd.melt(evaluation))\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '7122c816-b17e-4185-9c99-0fc03101be5b', 'name': 'Prepare X_holdout dataset', 'code': "X_holdout_final = final_transformation(X_holdout,feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'name': 'Final Results', 'code': 'xgb.fit(X_optuna, y_optuna)\n\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\n\nconfusion_matrix = metrics.confusion_matrix(\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\n\ntn, fp, fn, tp = confusion_matrix.ravel()\nspecificity = tn / (tn+fp)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'name': 'Confusion Matrix', 'code': 'cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\n\ncm_display.plot()\nplt.grid(False)\nplt.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'name': 'Laymans Results', 'code': 'print(f"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\n")\n\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\n\nprint(\'\\nExcelente notícia!!!!\')\n\n\n\nduration = 1000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca', 'name': 'Save Model', 'code': "dump(xgb, open('turnover_general_model.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}], 'edges': [{'parent': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'child': 'df37f106-a4ff-49cb-9f22-c550f0812b37'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '651d005e-5f45-4ca8-96ed-50c5783a308d'}, {'parent': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'child': 'd695fd5d-fedd-440a-933a-e6b09ae9902b'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '4dabbcf4-809d-4903-8e32-26279499c336'}, {'parent': '4dabbcf4-809d-4903-8e32-26279499c336', 'child': 'ce04c155-4800-4dae-9253-501682182090'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': 'd3a63656-d9e4-4200-80a2-ff1e529262ab'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '501b8112-a010-4f1a-9bed-41508f2b1acb'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '953422cc-3fb0-4601-952c-2840da505de3'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '953422cc-3fb0-4601-952c-2840da505de3', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a7324ce3-3533-4319-82d0-3360324d7249'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a3fde54e-894a-488e-a629-25ac13ec53e0'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '825318b2-890f-4cd9-984b-5d282130a117'}, {'parent': '825318b2-890f-4cd9-984b-5d282130a117', 'child': '04b793a6-4c8e-4598-828a-62fa4903b5bb'}, {'parent': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'child': 'c649590d-5e04-47b6-8889-a0bd2901b1ba'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '71269304-ddf9-4591-a4d0-c45357dfb043'}, {'parent': '71269304-ddf9-4591-a4d0-c45357dfb043', 'child': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f'}, {'parent': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'child': '3c5a1393-9b6d-4206-83ff-660448ee4528'}, {'parent': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'child': '11d639e9-9f16-4840-9ca2-932561027791'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '68316262-8a81-4e81-8305-99a17550bfcc'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '616712eb-bc91-4af4-9b97-9bf57d3df147'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4'}, {'parent': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'child': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb'}, {'parent': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'child': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821'}, {'parent': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'child': 'dac101ac-b57e-445a-8101-b90e36ac28f7'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '60fd0370-09a6-49e3-abdf-9c29067c6754'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288'}, {'parent': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'child': '2873ca00-5d55-4437-9f3d-1c723e51a070'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'child': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': 'c969afb6-beca-462c-994b-3711f45b9725'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': '16da288a-1d46-4d2f-96e9-b9e59c5505f3'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': '10188aaf-83cc-4fcb-afe3-d7520346a34a'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': 'a878d86e-3707-49be-bb85-3a5c0cbe3972'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': 'd5742407-e18a-4185-a945-f5ac11dcb854'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175'}, {'parent': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'child': '2ff29722-5176-486b-8ec0-7b138fbe2c05'}, {'parent': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'child': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '8f560d16-8a82-4a85-821e-0a6dbf399eaf'}, {'parent': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'child': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0'}, {'parent': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'child': 'c8443305-4d7a-4455-9492-a7aeaaff5e07'}, {'parent': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'child': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257'}, {'parent': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'child': '05f7e787-a336-4342-b603-78809382262e'}, {'parent': '05f7e787-a336-4342-b603-78809382262e', 'child': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d'}, {'parent': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'child': '1dd18a01-147a-489b-941e-867a5fc7389b'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': '7122c816-b17e-4185-9c99-0fc03101be5b', 'child': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0'}, {'parent': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'child': '2b54670b-7be3-4478-a89c-0fb50685bba2'}, {'parent': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'child': '4b0268ef-ea00-4441-a8ad-58cdb5372c28'}, {'parent': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'child': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca'}]}
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Import libs (74e47343-3dbf-44f8-8228-e584f90a0e16), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:04] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: args: Namespace(base_url='http://localhost:8888/', header='Accept-Encoding=gzip,%20deflate,%20br;Host=localhost:8888;%20Authorization=token%2028f6151ce9fbd73f4964bf998f83d5913e6655dbb33ebbe0', cookie='_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20username-localhost-8888=2%7C1:0%7C10:1670443688%7C23:username-localhost-8888%7C44:ZjkxZmMyMGU0NDdmNDAxNGJlNmZjMTY0ZjczNGQ3MTY=%7Cff7816e013b43e1f1463672ce215c674a30f8f94e94847a52eace43e31765abb', cell='{"nodes":[{"id":"74e47343-3dbf-44f8-8228-e584f90a0e16","name":"Import libs","code":"import pandas as pd\\nimport numpy as np\\nfrom pickle import dump, load\\nimport itertools\\nimport winsound\\n\\nimport Custom_Tools\\nfrom sksurv.nonparametric import kaplan_meier_estimator\\nfrom target_definition import target_definition\\nfrom feature_engineering import feature_engineering\\nfrom drop_turnover import drop_turnover\\nfrom preprocess_turnover import preprocess_turnover\\nfrom scale_dataset import scale_dataset\\nfrom final_transformation import final_transformation\\nfrom population_filter import population_filter\\n\\n\\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\\nfrom sklearn.preprocessing import MinMaxScaler\\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\\n\\n\\nfrom imblearn.over_sampling import ADASYN\\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\\nfrom sklearn.linear_model import LogisticRegression\\nfrom lightgbm import LGBMClassifier\\nfrom xgboost import XGBClassifier\\nfrom catboost import CatBoostClassifier\\nfrom sklearn.naive_bayes import GaussianNB\\nfrom sklearn import metrics\\n\\n\\nimport plotly.express as px\\nimport seaborn as sns\\nimport matplotlib.pyplot as plt\\n\\n\\nimport optuna","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"df37f106-a4ff-49cb-9f22-c550f0812b37","name":"First dataset","code":"df = pd.read_excel(\'C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/\'\\n                   \'Python/Análise_Headcount.xlsx\')\\n\\n\'\'\'\\nAdicionar tipo de função (Gestor, não gestor)\\nFeature Hashing - funcao_descricao, codsecao\\nSalário, méritos e promoções\\nPulses\\n\\nfilial_descricao não vai entrar porque codsecao pega filial e área.\\n\'\'\'","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"651d005e-5f45-4ca8-96ed-50c5783a308d","name":"Survival analysis preparation","code":"df_surv = feature_engineering(target_definition(df, \'tipo_colaborador\', \'CLT\'))\\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\\ndf_surv.loc[df_surv.tipo_função == \'Docente\',\'tipo_filial\'] = \'DOCENTE\'","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d695fd5d-fedd-440a-933a-e6b09ae9902b","name":"Generate plots","code":"data_x = df_surv.copy()\\n\\ndata_y = df_surv.desligado==1\\n\\nsurv_days = data_x.tempo_de_casa\\n\\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\\n\\nfor i in analyze:\\n\\n    analisar = i\\n\\n    plt.figure(figsize=(12, 12), dpi=80)\\n\\n    for value in data_x[analisar].unique():\\n        mask = data_x[analisar] == value\\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\\n                                                               surv_days[mask])\\n        plt.step(time_cell, survival_prob_cell, where=\\"post\\",\\n                 label=\\"%s (n = %d)\\" % (value, mask.sum()));\\n\\n    plt.ylabel(\\"est. probability of survival $\\\\hat{S}(t)$\\")\\n    plt.xlabel(\\"Months\\")\\n    plt.legend(loc=\\"best\\");\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4dabbcf4-809d-4903-8e32-26279499c336","name":"Target definition","code":"df_alvo = target_definition(df, \'tipo_colaborador\', \'CLT\')\\n\\ndf_alvo = population_filter(df_alvo)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"ce04c155-4800-4dae-9253-501682182090","name":"Holdout","code":"X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop([\'desligado\'], axis=1), df_alvo[\'desligado\'], test_size=0.1, random_state=42, stratify=df_alvo[\'desligado\']) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64","name":"Check proportions Holdout","code":"print(y.value_counts()/y.shape[0])\\nprint(y_holdout.value_counts()/y_holdout.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","name":"Train test","code":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3","name":"Check proportion Train Test","code":"print(y_train.value_counts()/y_train.shape[0])\\nprint(y_test.value_counts()/y_test.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"d3a63656-d9e4-4200-80a2-ff1e529262ab","name":"Averages for input","code":"print(X_train.idade.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"501b8112-a010-4f1a-9bed-41508f2b1acb","name":"Engineer Drop and Preprocess","code":"df_trat = X_train\\n\\ny_trat = y_train.loc[df_trat.index]\\n\\ndf_eng = feature_engineering(df_trat)\\n\\ndf_trat_drop = drop_turnover(df_eng)\\n\\ndf_preprocess = preprocess_turnover(df_trat_drop)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"953422cc-3fb0-4601-952c-2840da505de3","name":"Engineer info","code":"print(df_preprocess.columns)\\nprint(df_preprocess.shape)\\nprint(y_trat.shape)\\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\\nprint(df_preprocess.isnull().sum())\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"719aa0e4-d5ec-44f6-a6c2-79117c96874e","name":"Scaling fit","code":"Scaler = MinMaxScaler((0,1))\\nScaler.fit(df_preprocess)\\ndump(Scaler, open(\'Scaler.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"#FAFF00","comments":[],"diskcache":false}},{"id":"a7324ce3-3533-4319-82d0-3360324d7249","name":"Hashing High Cardinality test","code":"from sklearn.feature_extraction import FeatureHasher\\n\\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])\\n\\nscores = pd.DataFrame()\\n\\nfrom tqdm.notebook import tqdm\\n\\nfor i in tqdm(range(3,50)):\\n\\n    n_features = i\\n\\n    hashf = FeatureHasher(n_features=n_features,  input_type=\'string\')\\n\\n    funcao_cols = [\'funcao_\'+str(i) for i in range(n_features)]\\n\\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\\n\\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\n    model.fit(train_hash, y_trat)\\n    \\n    score = useful_metrics(test_hash, y_test, model)\\n    \\n    score[\'cols\'] = i\\n    \\n    scores = pd.concat([scores, score])\\n    ","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a3fde54e-894a-488e-a629-25ac13ec53e0","name":"Scaling transform","code":"Scaler = load(open(\'Scaler.pkl\', \'rb\'))\\nfeature = df_preprocess.columns.tolist()\\nscaled_df = df_preprocess\\nscaled_df = scale_dataset(df_preprocess, feature, None)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"825318b2-890f-4cd9-984b-5d282130a117","name":"Custom Tool analysis","code":"df_preprocess_analysis = scaled_df.copy()\\ndf_preprocess_analysis[\'desligado\'] = y_train\\n\\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\\n\\ncols = aval.col_missing()\\n\\ncard = aval.cardinality()\\n\\nrws = aval.row_missing()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"04b793a6-4c8e-4598-828a-62fa4903b5bb","name":"Row evaluation","code":"print(rws[rws > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"c649590d-5e04-47b6-8889-a0bd2901b1ba","name":"Column evaluation","code":"print(cols[cols > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"71269304-ddf9-4591-a4d0-c45357dfb043","name":"Feature Selection run","code":"algorithms = [chi2, f_classif, mutual_info_classif]\\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","name":"Feature Selection results","code":"features = selection.columns.tolist()\\nfeatures.remove(\'Total_points\')\\nKbest_eval = selection.groupby(\'Columns\').sum()[\'Total_points\'].sort_values(ascending=False) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"3c5a1393-9b6d-4206-83ff-660448ee4528","name":"Dropping redundant features","code":"Kbest_eval[(Kbest_eval.index != \'agrup_salario\') & (Kbest_eval.index != \'tempo_de_casa\') & (Kbest_eval.index != \'ord_faixa_etaria\')][:Kbest_eval.shape[0]//2].index.tolist()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"11d639e9-9f16-4840-9ca2-932561027791","name":"Features selected and save","code":"# Tempo de casa redundante com ord_faixa_tempo_casa\\nfeature_final = [\'VP_descricao_VICEPRESIDENCIADEOPERACOES\',\\n \'tipo_filial_DIGITAL\',\\n \'VP_descricao_VICEPRESIDENCIADEMERCADO\',\\n \'tipo_filial_UNDERGRADUATE\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS\',\\n \'salario\',\\n \'ord_faixa_tempo_casa\',\\n \'idade\',\\n \'cotapcd\',\\n \'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS\',\\n \'VP_descricao_VICEPRESIDENCIADEMARKETING\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA\',\\n \'genero_Masculino\',\\n \'genero_Feminino\']\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"68316262-8a81-4e81-8305-99a17550bfcc","name":"Final features","code":"#feature_final = load(open(\'feature_selection.pkl\', \'rb\'))\\nfeature_final = [x for x in scaled_df]\\n\\n# Comment if feature selection was used\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))\\n\\n#feature_final.remove(\'escolaridade_classificao\')\\nX_train_final = scaled_df[feature_final]","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"616712eb-bc91-4af4-9b97-9bf57d3df147","name":"Models init overfit eval","code":"lr = LogisticRegression(max_iter=10000)\\nlgbm = LGBMClassifier()\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\ncat = CatBoostClassifier(silent=True)\\next = ExtraTreesClassifier()\\ngnb = GaussianNB()\\n\\n\\nmodels = {\'Logistic Regression\': lr,\\n          \'LGBM\': lgbm,\\n          \'XGBoost\': xgb,\\n          \'CatBoost | Default\': cat,\\n          \'Gaussian NB\': gnb,\\n          \'Extra trees | Default\': ExtraTreesClassifier(),\\n          \'Extra trees | balanced \': ExtraTreesClassifier(class_weight=\'balanced\'), # noqa E501\\n          \'Extra trees | balanced_subsample\': ExtraTreesClassifier(class_weight=\'balanced_subsample\'), # noqa E501\\n          \'Random Forest | Default\': RandomForestClassifier()}\\n\\nfor a in range(5, 2, -1):\\n    models[\'Random Forest - Max_depth:\'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\\n\\ndepth = [3]\\nrs = [0.5]\\nparams_list=[ depth, rs ]\\n\\nfor depth_at, rs_at in list(itertools.product(*params_list)):\\n    models[\'CatBoostClassifier | Early_Stopping:4\'+\' | depth:\'+str(depth_at)+\' | strength:\'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","name":"One model test","code":"models_1 = {\'Random Forest - Default\': RandomForestClassifier()}","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","name":"Test results","code":"test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\\ntest_results = test.overfit(metrics.f1_score)\\ntest_results","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"b2b08397-d1fa-49bb-b121-6d2fbd86f821","name":"Test results chart","code":"fig = px.line(test_results, x=\\"Sample\\", y=\\"f1_score\\", color=\\"Dataset\\", facet_col=\\"Model\\", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\\nfig.show()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"dac101ac-b57e-445a-8101-b90e36ac28f7","name":"All models run F1 score","code":"All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"60fd0370-09a6-49e3-abdf-9c29067c6754","name":"F1 Score","code":"pivot_f1 = All_models_results_f1.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'f1_score\') # noqa E501\\npivot_f1[\'Overfit\'] = abs(pivot_f1[\'Test\']-pivot_f1[\'Train\'])\\npivot_f1 = pivot_f1.groupby([\'Model\'])[[\'Overfit\', \'Test\']].mean().sort_values([\'Overfit\']) # noqa E501\\npivot_f1[pivot_f1.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","name":"All models run recall score","code":"All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf","name":"Recall score","code":"pivot_recall = All_models_results_recall.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'recall_score\') # noqa E501\\npivot_recall[\'Overfit\'] = abs(pivot_recall[\'Test\']-pivot_recall[\'Train\'])\\npivot_recall = pivot_recall.groupby(\'Model\')[\'Overfit\', \'Test\'].mean().sort_values(\'Overfit\') # noqa E501\\npivot_recall[pivot_recall.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","name":"All models run precision score","code":"All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"2873ca00-5d55-4437-9f3d-1c723e51a070","name":"Precision score","code":"pivot_precision = All_models_results_precision.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'precision_score\') # noqa E501\\npivot_precision[\'Overfit\'] = abs(pivot_precision[\'Test\']-pivot_precision[\'Train\'])\\npivot_precision = pivot_precision.groupby(\'Model\')[[\'Overfit\', \'Test\']].mean().sort_values(\'Overfit\') # noqa E501\\npivot_precision[pivot_precision.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"180c9593-1123-4208-aa33-b2bf9c86b1e8","name":"Prepare X_test dataset","code":"X_test_final = final_transformation(X_test, feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","name":"Wrap up final datasets","code":"X_train_final, y_train_final = X_train_final, y_trat","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c969afb6-beca-462c-994b-3711f45b9725","name":"Check shapes","code":"print(X_train_final.shape)\\nprint(y_train_final.shape)\\nprint(X_test_final.shape)\\nprint(y_test.shape)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","name":"Metrics function","code":"def useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"10188aaf-83cc-4fcb-afe3-d7520346a34a","name":"Chosen model baseline","code":"gnb = GaussianNB()\\ngnb.fit(X_train_final, y_train_final)\\n\\ncat = CatBoostClassifier(silent=True)\\ncat.fit(X_train_final, y_train_final)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\nmodels = [gnb, cat, xgb]\\n\\nfor model in models:\\n\\n    print(model.__class__.__name__)\\n\\n    model.fit(X_train_final, y_train_final)\\n\\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\\n                         y_test, model))\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a878d86e-3707-49be-bb85-3a5c0cbe3972","name":"Optuna dataset","code":"X_optuna = pd.concat([X_train_final, X_test_final])\\ny_optuna = pd.concat([y_train_final, y_test])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"d5742407-e18a-4185-a945-f5ac11dcb854","name":"Optuna function Gaussian","code":"\\nsequence = [ ]\\nfor i in range(-9, 1):\\n    sequence.append(10**i)\\n\\ndef objective_gnb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'var_smoothing\': trial.suggest_categorical(\'var_smoothing\', sequence)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = GaussianNB(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","name":"Optuna function LR","code":"def objective_lr(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'max_iter\':10000\\n    }\\n    \\n    oversample_grid = {\\n        \'sampling_strategy\': trial.suggest_float(\'sampling_strategy\',0.5,1.0,step=0.01)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = LogisticRegression(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n    \\n    over_under = ADASYN(**oversample_grid)\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n        \\n        X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2ff29722-5176-486b-8ec0-7b138fbe2c05","name":"Optuna Run LR","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_lr, n_trials=100)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4","name":"Optuna Results LR","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","name":"Optuna function XGB","code":"def objective_xgb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n\\n    model_grid = {\\n        # Prevent Overfit\\n        \'max_depth\': trial.suggest_int(\'max_depth\', 3, 7, step=1),\\n        \'min_child_weight\': trial.suggest_int(\'min_child_weight\', 1, 7, step=1),\\n        \'gamma\': trial.suggest_int(\'gamma\', 0, 7, step=1),\\n        # Imbalanced dataset\\n        \'max_delta_step\': trial.suggest_int(\'max_delta_step\', 0, 10, step=1)\\n    }\\n\\n    param_grid = {\\n        \'threshold\': trial.suggest_float(\'threshold\', 0.2, 1.0, step=0.01)\\n    }\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n\\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation, evaluation])\\n\\n    return(F_evaluation.f1_score.std(),\\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\\n           F_evaluation.recall_score.mean(),\\n           F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","name":"Optuna Run XGB","code":"study = optuna.create_study(directions=[\'minimize\', \'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_xgb, n_trials=50)\\n\\nduration = 2000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c8443305-4d7a-4455-9492-a7aeaaff5e07","name":"Optuna Results XGB","code":"metrics_name = [\'std_F1\',\'F1\', \'Precision\', \'Recall\', \'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n\\n    for metric, value in zip(metrics_name, trial.values):\\n\\n        try_1[metric] = value\\n\\n    try_1[\'Params\'] = str(trial.params)\\n\\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n\\n    tries = tries[tries.Precision > 0]\\n\\nbest_params = tries.sort_values([\'std_F1\', \'Precision\',\'F1\',\'Brier\'], ascending= [True, False, True, False]).head(100)\\n\\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","name":"Optuna run Gaussian","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_gnb, n_trials=200)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"05f7e787-a336-4342-b603-78809382262e","name":"Optuna results","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d7fdb49f-1502-43d4-87ef-e452da6ecf74","name":"Top 20 results optuna","code":"tries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","name":"Final model params","code":"params = {\'max_depth\': 6, \'min_child_weight\': 4, \'gamma\': 1, \'max_delta_step\': 10}\\n\\nthreshold = 0.52\\n\\ngnb = GaussianNB()\\n\\nlr = LogisticRegression(max_iter=10000)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\\n\\nover_under = ADASYN(sampling_strategy=0.64)\\n\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac","name":"Yellowbricks threshold","code":"from yellowbrick.classifier import DiscriminationThreshold\\n\\n\\n# Instantiate the classification model and visualizer\\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\\nvisualizer = DiscriminationThreshold(model)\\n\\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\\nvisualizer.show()           # Finalize and render the figure","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","name":"Final model stats","code":"X_dataset, y_dataset = X_optuna, y_optuna\\n\\nmodel = xgb\\n\\nevaluation = pd.DataFrame()\\n\\nassertiveness = pd.DataFrame()\\n\\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\\n\\ncount = 0\\n\\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\\n\\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\\n        \\n        #Exclude if no oversample\\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train,y_train)\\n\\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\\n        \\n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\\n        \\n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\\n        \\n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\\n        \\n\\n        count+=1\\n        \\n        print(\\"Shuffle \\" + str(count), end = \\"\\\\r\\")\\n        \\nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\n        \\ngrouped_stats = assertiveness.groupby(\'index\').agg(\\n        avg_correct_percent =(\'correct\', \'mean\'),\\n        avg_precision = (\'precision\', np.nanmean),\\n        avg_recall = (\'recall\', np.nanmean),\\n        std = (\'brier\', np.std),\\n        brier = (\'brier\', np.mean),\\n        count = (\'brier\', \'count\')\\n        )\\n        \\nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\\n\\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"1dd18a01-147a-489b-941e-867a5fc7389b","name":"Stats visualization","code":"duration = 1000  # milliseconds\\nfreq = 440# Hz\\nwinsound.Beep(freq, duration)\\nax = sns.boxplot(x=\'variable\', y=\'value\', data=pd.melt(evaluation))\\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"7122c816-b17e-4185-9c99-0fc03101be5b","name":"Prepare X_holdout dataset","code":"X_holdout_final = final_transformation(X_holdout,feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","name":"Final Results","code":"xgb.fit(X_optuna, y_optuna)\\n\\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\\n\\nconfusion_matrix = metrics.confusion_matrix(\\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\\n\\ntn, fp, fn, tp = confusion_matrix.ravel()\\nspecificity = tn / (tn+fp)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b54670b-7be3-4478-a89c-0fb50685bba2","name":"Confusion Matrix","code":"cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\\n\\ncm_display.plot()\\nplt.grid(False)\\nplt.show()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","name":"Laymans Results","code":"print(f\\"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\\\n\\")\\n\\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\\n\\nprint(\'\\\\nExcelente notícia!!!!\')\\n\\n\\n\\nduration = 1000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca","name":"Save Model","code":"dump(xgb, open(\'turnover_general_model.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}}],"edges":[{"parent":"74e47343-3dbf-44f8-8228-e584f90a0e16","child":"df37f106-a4ff-49cb-9f22-c550f0812b37"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"651d005e-5f45-4ca8-96ed-50c5783a308d"},{"parent":"651d005e-5f45-4ca8-96ed-50c5783a308d","child":"d695fd5d-fedd-440a-933a-e6b09ae9902b"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"4dabbcf4-809d-4903-8e32-26279499c336"},{"parent":"4dabbcf4-809d-4903-8e32-26279499c336","child":"ce04c155-4800-4dae-9253-501682182090"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"d3a63656-d9e4-4200-80a2-ff1e529262ab"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"501b8112-a010-4f1a-9bed-41508f2b1acb"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"953422cc-3fb0-4601-952c-2840da505de3"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"953422cc-3fb0-4601-952c-2840da505de3","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a7324ce3-3533-4319-82d0-3360324d7249"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a3fde54e-894a-488e-a629-25ac13ec53e0"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"825318b2-890f-4cd9-984b-5d282130a117"},{"parent":"825318b2-890f-4cd9-984b-5d282130a117","child":"04b793a6-4c8e-4598-828a-62fa4903b5bb"},{"parent":"04b793a6-4c8e-4598-828a-62fa4903b5bb","child":"c649590d-5e04-47b6-8889-a0bd2901b1ba"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"71269304-ddf9-4591-a4d0-c45357dfb043"},{"parent":"71269304-ddf9-4591-a4d0-c45357dfb043","child":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f"},{"parent":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","child":"3c5a1393-9b6d-4206-83ff-660448ee4528"},{"parent":"3c5a1393-9b6d-4206-83ff-660448ee4528","child":"11d639e9-9f16-4840-9ca2-932561027791"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"68316262-8a81-4e81-8305-99a17550bfcc"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"616712eb-bc91-4af4-9b97-9bf57d3df147"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4"},{"parent":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","child":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb"},{"parent":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","child":"b2b08397-d1fa-49bb-b121-6d2fbd86f821"},{"parent":"616712eb-bc91-4af4-9b97-9bf57d3df147","child":"dac101ac-b57e-445a-8101-b90e36ac28f7"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"60fd0370-09a6-49e3-abdf-9c29067c6754"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288"},{"parent":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","child":"2873ca00-5d55-4437-9f3d-1c723e51a070"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"180c9593-1123-4208-aa33-b2bf9c86b1e8","child":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"c969afb6-beca-462c-994b-3711f45b9725"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"16da288a-1d46-4d2f-96e9-b9e59c5505f3"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"10188aaf-83cc-4fcb-afe3-d7520346a34a"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"a878d86e-3707-49be-bb85-3a5c0cbe3972"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"d5742407-e18a-4185-a945-f5ac11dcb854"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175"},{"parent":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","child":"2ff29722-5176-486b-8ec0-7b138fbe2c05"},{"parent":"2ff29722-5176-486b-8ec0-7b138fbe2c05","child":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"8f560d16-8a82-4a85-821e-0a6dbf399eaf"},{"parent":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","child":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0"},{"parent":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","child":"c8443305-4d7a-4455-9492-a7aeaaff5e07"},{"parent":"d5742407-e18a-4185-a945-f5ac11dcb854","child":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257"},{"parent":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","child":"05f7e787-a336-4342-b603-78809382262e"},{"parent":"05f7e787-a336-4342-b603-78809382262e","child":"d7fdb49f-1502-43d4-87ef-e452da6ecf74"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d"},{"parent":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","child":"1dd18a01-147a-489b-941e-867a5fc7389b"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"7122c816-b17e-4185-9c99-0fc03101be5b","child":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0"},{"parent":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","child":"2b54670b-7be3-4478-a89c-0fb50685bba2"},{"parent":"2b54670b-7be3-4478-a89c-0fb50685bba2","child":"4b0268ef-ea00-4441-a8ad-58cdb5372c28"},{"parent":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","child":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca"}]}\n')
[2022-12-07 17:08:10] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: graph: {'nodes': [{'id': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'name': 'Import libs', 'code': 'import pandas as pd\nimport numpy as np\nfrom pickle import dump, load\nimport itertools\nimport winsound\n\nimport Custom_Tools\nfrom sksurv.nonparametric import kaplan_meier_estimator\nfrom target_definition import target_definition\nfrom feature_engineering import feature_engineering\nfrom drop_turnover import drop_turnover\nfrom preprocess_turnover import preprocess_turnover\nfrom scale_dataset import scale_dataset\nfrom final_transformation import final_transformation\nfrom population_filter import population_filter\n\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\n\n\nfrom imblearn.over_sampling import ADASYN\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics\n\n\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport optuna', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'name': 'First dataset', 'code': "df = pd.read_excel('C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/'\n                   'Python/Análise_Headcount.xlsx')\n\n'''\nAdicionar tipo de função (Gestor, não gestor)\nFeature Hashing - funcao_descricao, codsecao\nSalário, méritos e promoções\nPulses\n\nfilial_descricao não vai entrar porque codsecao pega filial e área.\n'''", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'name': 'Survival analysis preparation', 'code': "df_surv = feature_engineering(target_definition(df, 'tipo_colaborador', 'CLT'))\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\ndf_surv.loc[df_surv.tipo_função == 'Docente','tipo_filial'] = 'DOCENTE'", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd695fd5d-fedd-440a-933a-e6b09ae9902b', 'name': 'Generate plots', 'code': 'data_x = df_surv.copy()\n\ndata_y = df_surv.desligado==1\n\nsurv_days = data_x.tempo_de_casa\n\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\n\nfor i in analyze:\n\n    analisar = i\n\n    plt.figure(figsize=(12, 12), dpi=80)\n\n    for value in data_x[analisar].unique():\n        mask = data_x[analisar] == value\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\n                                                               surv_days[mask])\n        plt.step(time_cell, survival_prob_cell, where="post",\n                 label="%s (n = %d)" % (value, mask.sum()));\n\n    plt.ylabel("est. probability of survival $\\hat{S}(t)$")\n    plt.xlabel("Months")\n    plt.legend(loc="best");\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4dabbcf4-809d-4903-8e32-26279499c336', 'name': 'Target definition', 'code': "df_alvo = target_definition(df, 'tipo_colaborador', 'CLT')\n\ndf_alvo = population_filter(df_alvo)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'ce04c155-4800-4dae-9253-501682182090', 'name': 'Holdout', 'code': "X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop(['desligado'], axis=1), df_alvo['desligado'], test_size=0.1, random_state=42, stratify=df_alvo['desligado']) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64', 'name': 'Check proportions Holdout', 'code': 'print(y.value_counts()/y.shape[0])\nprint(y_holdout.value_counts()/y_holdout.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'name': 'Train test', 'code': 'X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3', 'name': 'Check proportion Train Test', 'code': 'print(y_train.value_counts()/y_train.shape[0])\nprint(y_test.value_counts()/y_test.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'd3a63656-d9e4-4200-80a2-ff1e529262ab', 'name': 'Averages for input', 'code': 'print(X_train.idade.mean())', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'name': 'Engineer Drop and Preprocess', 'code': 'df_trat = X_train\n\ny_trat = y_train.loc[df_trat.index]\n\ndf_eng = feature_engineering(df_trat)\n\ndf_trat_drop = drop_turnover(df_eng)\n\ndf_preprocess = preprocess_turnover(df_trat_drop)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '953422cc-3fb0-4601-952c-2840da505de3', 'name': 'Engineer info', 'code': 'print(df_preprocess.columns)\nprint(df_preprocess.shape)\nprint(y_trat.shape)\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\nprint(df_preprocess.isnull().sum())\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '719aa0e4-d5ec-44f6-a6c2-79117c96874e', 'name': 'Scaling fit', 'code': "Scaler = MinMaxScaler((0,1))\nScaler.fit(df_preprocess)\ndump(Scaler, open('Scaler.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': '#FAFF00', 'comments': [], 'diskcache': False}}, {'id': 'a7324ce3-3533-4319-82d0-3360324d7249', 'name': 'Hashing High Cardinality test', 'code': "from sklearn.feature_extraction import FeatureHasher\n\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])\n\nscores = pd.DataFrame()\n\nfrom tqdm.notebook import tqdm\n\nfor i in tqdm(range(3,50)):\n\n    n_features = i\n\n    hashf = FeatureHasher(n_features=n_features,  input_type='string')\n\n    funcao_cols = ['funcao_'+str(i) for i in range(n_features)]\n\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\n\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\n\n    model.fit(train_hash, y_trat)\n    \n    score = useful_metrics(test_hash, y_test, model)\n    \n    score['cols'] = i\n    \n    scores = pd.concat([scores, score])\n    ", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'name': 'Scaling transform', 'code': "Scaler = load(open('Scaler.pkl', 'rb'))\nfeature = df_preprocess.columns.tolist()\nscaled_df = df_preprocess\nscaled_df = scale_dataset(df_preprocess, feature, None)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '825318b2-890f-4cd9-984b-5d282130a117', 'name': 'Custom Tool analysis', 'code': "df_preprocess_analysis = scaled_df.copy()\ndf_preprocess_analysis['desligado'] = y_train\n\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\n\ncols = aval.col_missing()\n\ncard = aval.cardinality()\n\nrws = aval.row_missing()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'name': 'Row evaluation', 'code': 'print(rws[rws > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'c649590d-5e04-47b6-8889-a0bd2901b1ba', 'name': 'Column evaluation', 'code': 'print(cols[cols > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '71269304-ddf9-4591-a4d0-c45357dfb043', 'name': 'Feature Selection run', 'code': 'algorithms = [chi2, f_classif, mutual_info_classif]\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'name': 'Feature Selection results', 'code': "features = selection.columns.tolist()\nfeatures.remove('Total_points')\nKbest_eval = selection.groupby('Columns').sum()['Total_points'].sort_values(ascending=False) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'name': 'Dropping redundant features', 'code': "Kbest_eval[(Kbest_eval.index != 'agrup_salario') & (Kbest_eval.index != 'tempo_de_casa') & (Kbest_eval.index != 'ord_faixa_etaria')][:Kbest_eval.shape[0]//2].index.tolist()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '11d639e9-9f16-4840-9ca2-932561027791', 'name': 'Features selected and save', 'code': "# Tempo de casa redundante com ord_faixa_tempo_casa\nfeature_final = ['VP_descricao_VICEPRESIDENCIADEOPERACOES',\n 'tipo_filial_DIGITAL',\n 'VP_descricao_VICEPRESIDENCIADEMERCADO',\n 'tipo_filial_UNDERGRADUATE',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS',\n 'salario',\n 'ord_faixa_tempo_casa',\n 'idade',\n 'cotapcd',\n 'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS',\n 'VP_descricao_VICEPRESIDENCIADEMARKETING',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA',\n 'genero_Masculino',\n 'genero_Feminino']\ndump(feature_final, open('feature_selection.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '68316262-8a81-4e81-8305-99a17550bfcc', 'name': 'Final features', 'code': "#feature_final = load(open('feature_selection.pkl', 'rb'))\nfeature_final = [x for x in scaled_df]\n\n# Comment if feature selection was used\ndump(feature_final, open('feature_selection.pkl', 'wb'))\n\n#feature_final.remove('escolaridade_classificao')\nX_train_final = scaled_df[feature_final]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'name': 'Models init overfit eval', 'code': "lr = LogisticRegression(max_iter=10000)\nlgbm = LGBMClassifier()\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\ncat = CatBoostClassifier(silent=True)\next = ExtraTreesClassifier()\ngnb = GaussianNB()\n\n\nmodels = {'Logistic Regression': lr,\n          'LGBM': lgbm,\n          'XGBoost': xgb,\n          'CatBoost | Default': cat,\n          'Gaussian NB': gnb,\n          'Extra trees | Default': ExtraTreesClassifier(),\n          'Extra trees | balanced ': ExtraTreesClassifier(class_weight='balanced'), # noqa E501\n          'Extra trees | balanced_subsample': ExtraTreesClassifier(class_weight='balanced_subsample'), # noqa E501\n          'Random Forest | Default': RandomForestClassifier()}\n\nfor a in range(5, 2, -1):\n    models['Random Forest - Max_depth:'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\n\ndepth = [3]\nrs = [0.5]\nparams_list=[ depth, rs ]\n\nfor depth_at, rs_at in list(itertools.product(*params_list)):\n    models['CatBoostClassifier | Early_Stopping:4'+' | depth:'+str(depth_at)+' | strength:'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'name': 'One model test', 'code': "models_1 = {'Random Forest - Default': RandomForestClassifier()}", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'name': 'Test results', 'code': 'test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\ntest_results = test.overfit(metrics.f1_score)\ntest_results', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821', 'name': 'Test results chart', 'code': 'fig = px.line(test_results, x="Sample", y="f1_score", color="Dataset", facet_col="Model", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\nfig.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'name': 'All models run F1 score', 'code': 'All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '60fd0370-09a6-49e3-abdf-9c29067c6754', 'name': 'F1 Score', 'code': "pivot_f1 = All_models_results_f1.pivot(index=['Sample', 'Model'], columns='Dataset', values='f1_score') # noqa E501\npivot_f1['Overfit'] = abs(pivot_f1['Test']-pivot_f1['Train'])\npivot_f1 = pivot_f1.groupby(['Model'])[['Overfit', 'Test']].mean().sort_values(['Overfit']) # noqa E501\npivot_f1[pivot_f1.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'name': 'All models run recall score', 'code': 'All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf', 'name': 'Recall score', 'code': "pivot_recall = All_models_results_recall.pivot(index=['Sample', 'Model'], columns='Dataset', values='recall_score') # noqa E501\npivot_recall['Overfit'] = abs(pivot_recall['Test']-pivot_recall['Train'])\npivot_recall = pivot_recall.groupby('Model')['Overfit', 'Test'].mean().sort_values('Overfit') # noqa E501\npivot_recall[pivot_recall.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'name': 'All models run precision score', 'code': 'All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '2873ca00-5d55-4437-9f3d-1c723e51a070', 'name': 'Precision score', 'code': "pivot_precision = All_models_results_precision.pivot(index=['Sample', 'Model'], columns='Dataset', values='precision_score') # noqa E501\npivot_precision['Overfit'] = abs(pivot_precision['Test']-pivot_precision['Train'])\npivot_precision = pivot_precision.groupby('Model')[['Overfit', 'Test']].mean().sort_values('Overfit') # noqa E501\npivot_precision[pivot_precision.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'name': 'Prepare X_test dataset', 'code': "X_test_final = final_transformation(X_test, feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'name': 'Wrap up final datasets', 'code': 'X_train_final, y_train_final = X_train_final, y_trat', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c969afb6-beca-462c-994b-3711f45b9725', 'name': 'Check shapes', 'code': 'print(X_train_final.shape)\nprint(y_train_final.shape)\nprint(X_test_final.shape)\nprint(y_test.shape)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'name': 'Metrics function', 'code': "def useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '10188aaf-83cc-4fcb-afe3-d7520346a34a', 'name': 'Chosen model baseline', 'code': 'gnb = GaussianNB()\ngnb.fit(X_train_final, y_train_final)\n\ncat = CatBoostClassifier(silent=True)\ncat.fit(X_train_final, y_train_final)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\n\nmodels = [gnb, cat, xgb]\n\nfor model in models:\n\n    print(model.__class__.__name__)\n\n    model.fit(X_train_final, y_train_final)\n\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\n                         y_test, model))\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'name': 'Optuna dataset', 'code': 'X_optuna = pd.concat([X_train_final, X_test_final])\ny_optuna = pd.concat([y_train_final, y_test])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'name': 'Optuna function Gaussian', 'code': "\nsequence = [ ]\nfor i in range(-9, 1):\n    sequence.append(10**i)\n\ndef objective_gnb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'var_smoothing': trial.suggest_categorical('var_smoothing', sequence)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = GaussianNB(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'name': 'Optuna function LR', 'code': "def objective_lr(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'max_iter':10000\n    }\n    \n    oversample_grid = {\n        'sampling_strategy': trial.suggest_float('sampling_strategy',0.5,1.0,step=0.01)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = LogisticRegression(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n    \n    over_under = ADASYN(**oversample_grid)\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n        \n        X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'name': 'Optuna Run LR', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_lr, n_trials=100)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4', 'name': 'Optuna Results LR', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'name': 'Optuna function XGB', 'code': "def objective_xgb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n\n    model_grid = {\n        # Prevent Overfit\n        'max_depth': trial.suggest_int('max_depth', 3, 7, step=1),\n        'min_child_weight': trial.suggest_int('min_child_weight', 1, 7, step=1),\n        'gamma': trial.suggest_int('gamma', 0, 7, step=1),\n        # Imbalanced dataset\n        'max_delta_step': trial.suggest_int('max_delta_step', 0, 10, step=1)\n    }\n\n    param_grid = {\n        'threshold': trial.suggest_float('threshold', 0.2, 1.0, step=0.01)\n    }\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation, evaluation])\n\n    return(F_evaluation.f1_score.std(),\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\n           F_evaluation.recall_score.mean(),\n           F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'name': 'Optuna Run XGB', 'code': "study = optuna.create_study(directions=['minimize', 'maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_xgb, n_trials=50)\n\nduration = 2000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c8443305-4d7a-4455-9492-a7aeaaff5e07', 'name': 'Optuna Results XGB', 'code': "metrics_name = ['std_F1','F1', 'Precision', 'Recall', 'Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n\n    for metric, value in zip(metrics_name, trial.values):\n\n        try_1[metric] = value\n\n    try_1['Params'] = str(trial.params)\n\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n\n    tries = tries[tries.Precision > 0]\n\nbest_params = tries.sort_values(['std_F1', 'Precision','F1','Brier'], ascending= [True, False, True, False]).head(100)\n\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'name': 'Optuna run Gaussian', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_gnb, n_trials=200)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '05f7e787-a336-4342-b603-78809382262e', 'name': 'Optuna results', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74', 'name': 'Top 20 results optuna', 'code': "tries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'name': 'Final model params', 'code': "params = {'max_depth': 6, 'min_child_weight': 4, 'gamma': 1, 'max_delta_step': 10}\n\nthreshold = 0.52\n\ngnb = GaussianNB()\n\nlr = LogisticRegression(max_iter=10000)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\n\nover_under = ADASYN(sampling_strategy=0.64)\n\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac', 'name': 'Yellowbricks threshold', 'code': 'from yellowbrick.classifier import DiscriminationThreshold\n\n\n# Instantiate the classification model and visualizer\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\nvisualizer = DiscriminationThreshold(model)\n\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\nvisualizer.show()           # Finalize and render the figure', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'name': 'Final model stats', 'code': 'X_dataset, y_dataset = X_optuna, y_optuna\n\nmodel = xgb\n\nevaluation = pd.DataFrame()\n\nassertiveness = pd.DataFrame()\n\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\n\ncount = 0\n\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\n\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\n        \n        #Exclude if no oversample\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train,y_train)\n\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\n        \n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\n        \n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\n        \n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\n        \n\n        count+=1\n        \n        print("Shuffle " + str(count), end = "\\r")\n        \nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\n        \ngrouped_stats = assertiveness.groupby(\'index\').agg(\n        avg_correct_percent =(\'correct\', \'mean\'),\n        avg_precision = (\'precision\', np.nanmean),\n        avg_recall = (\'recall\', np.nanmean),\n        std = (\'brier\', np.std),\n        brier = (\'brier\', np.mean),\n        count = (\'brier\', \'count\')\n        )\n        \nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\n\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '1dd18a01-147a-489b-941e-867a5fc7389b', 'name': 'Stats visualization', 'code': "duration = 1000  # milliseconds\nfreq = 440# Hz\nwinsound.Beep(freq, duration)\nax = sns.boxplot(x='variable', y='value', data=pd.melt(evaluation))\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '7122c816-b17e-4185-9c99-0fc03101be5b', 'name': 'Prepare X_holdout dataset', 'code': "X_holdout_final = final_transformation(X_holdout,feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'name': 'Final Results', 'code': 'xgb.fit(X_optuna, y_optuna)\n\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\n\nconfusion_matrix = metrics.confusion_matrix(\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\n\ntn, fp, fn, tp = confusion_matrix.ravel()\nspecificity = tn / (tn+fp)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'name': 'Confusion Matrix', 'code': 'cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\n\ncm_display.plot()\nplt.grid(False)\nplt.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'name': 'Laymans Results', 'code': 'print(f"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\n")\n\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\n\nprint(\'\\nExcelente notícia!!!!\')\n\n\n\nduration = 1000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca', 'name': 'Save Model', 'code': "dump(xgb, open('turnover_general_model.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}], 'edges': [{'parent': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'child': 'df37f106-a4ff-49cb-9f22-c550f0812b37'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '651d005e-5f45-4ca8-96ed-50c5783a308d'}, {'parent': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'child': 'd695fd5d-fedd-440a-933a-e6b09ae9902b'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '4dabbcf4-809d-4903-8e32-26279499c336'}, {'parent': '4dabbcf4-809d-4903-8e32-26279499c336', 'child': 'ce04c155-4800-4dae-9253-501682182090'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': 'd3a63656-d9e4-4200-80a2-ff1e529262ab'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '501b8112-a010-4f1a-9bed-41508f2b1acb'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '953422cc-3fb0-4601-952c-2840da505de3'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '953422cc-3fb0-4601-952c-2840da505de3', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a7324ce3-3533-4319-82d0-3360324d7249'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a3fde54e-894a-488e-a629-25ac13ec53e0'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '825318b2-890f-4cd9-984b-5d282130a117'}, {'parent': '825318b2-890f-4cd9-984b-5d282130a117', 'child': '04b793a6-4c8e-4598-828a-62fa4903b5bb'}, {'parent': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'child': 'c649590d-5e04-47b6-8889-a0bd2901b1ba'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '71269304-ddf9-4591-a4d0-c45357dfb043'}, {'parent': '71269304-ddf9-4591-a4d0-c45357dfb043', 'child': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f'}, {'parent': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'child': '3c5a1393-9b6d-4206-83ff-660448ee4528'}, {'parent': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'child': '11d639e9-9f16-4840-9ca2-932561027791'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '68316262-8a81-4e81-8305-99a17550bfcc'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '616712eb-bc91-4af4-9b97-9bf57d3df147'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4'}, {'parent': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'child': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb'}, {'parent': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'child': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821'}, {'parent': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'child': 'dac101ac-b57e-445a-8101-b90e36ac28f7'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '60fd0370-09a6-49e3-abdf-9c29067c6754'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288'}, {'parent': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'child': '2873ca00-5d55-4437-9f3d-1c723e51a070'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'child': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': 'c969afb6-beca-462c-994b-3711f45b9725'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': '16da288a-1d46-4d2f-96e9-b9e59c5505f3'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': '10188aaf-83cc-4fcb-afe3-d7520346a34a'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': 'a878d86e-3707-49be-bb85-3a5c0cbe3972'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': 'd5742407-e18a-4185-a945-f5ac11dcb854'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175'}, {'parent': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'child': '2ff29722-5176-486b-8ec0-7b138fbe2c05'}, {'parent': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'child': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '8f560d16-8a82-4a85-821e-0a6dbf399eaf'}, {'parent': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'child': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0'}, {'parent': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'child': 'c8443305-4d7a-4455-9492-a7aeaaff5e07'}, {'parent': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'child': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257'}, {'parent': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'child': '05f7e787-a336-4342-b603-78809382262e'}, {'parent': '05f7e787-a336-4342-b603-78809382262e', 'child': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d'}, {'parent': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'child': '1dd18a01-147a-489b-941e-867a5fc7389b'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': '7122c816-b17e-4185-9c99-0fc03101be5b', 'child': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0'}, {'parent': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'child': '2b54670b-7be3-4478-a89c-0fb50685bba2'}, {'parent': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'child': '4b0268ef-ea00-4441-a8ad-58cdb5372c28'}, {'parent': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'child': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca'}]}
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Import libs (74e47343-3dbf-44f8-8228-e584f90a0e16), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:10] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:11] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: args: Namespace(base_url='http://localhost:8888/', header='Accept-Encoding=gzip,%20deflate,%20br;Host=localhost:8888;%20Authorization=token%2028f6151ce9fbd73f4964bf998f83d5913e6655dbb33ebbe0', cookie='_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20username-localhost-8888=2%7C1:0%7C10:1670443701%7C23:username-localhost-8888%7C44:OGUzODU2ZTNjZWE5NGI2ZGI3NmY2YTE1MDhmM2YzZmI=%7C53473ed6eebdb724bd2e5c72ab4f0acc2334f4158f78775a072d879b7a3e664a', cell='{"nodes":[{"id":"74e47343-3dbf-44f8-8228-e584f90a0e16","name":"Import libs","code":"import pandas as pd\\nimport numpy as np\\nfrom pickle import dump, load\\nimport itertools\\nimport winsound\\n\\nimport Custom_Tools\\nfrom sksurv.nonparametric import kaplan_meier_estimator\\nfrom target_definition import target_definition\\nfrom feature_engineering import feature_engineering\\nfrom drop_turnover import drop_turnover\\nfrom preprocess_turnover import preprocess_turnover\\nfrom scale_dataset import scale_dataset\\nfrom final_transformation import final_transformation\\nfrom population_filter import population_filter\\n\\n\\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\\nfrom sklearn.preprocessing import MinMaxScaler\\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\\n\\n\\nfrom imblearn.over_sampling import ADASYN\\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\\nfrom sklearn.linear_model import LogisticRegression\\nfrom lightgbm import LGBMClassifier\\nfrom xgboost import XGBClassifier\\nfrom catboost import CatBoostClassifier\\nfrom sklearn.naive_bayes import GaussianNB\\nfrom sklearn import metrics\\n\\n\\nimport plotly.express as px\\nimport seaborn as sns\\nimport matplotlib.pyplot as plt\\n\\n\\nimport optuna","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"df37f106-a4ff-49cb-9f22-c550f0812b37","name":"First dataset","code":"df = pd.read_excel(\'C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/\'\\n                   \'Python/Análise_Headcount.xlsx\')\\n\\n\'\'\'\\nAdicionar tipo de função (Gestor, não gestor)\\nFeature Hashing - funcao_descricao, codsecao\\nSalário, méritos e promoções\\nPulses\\n\\nfilial_descricao não vai entrar porque codsecao pega filial e área.\\n\'\'\'","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"651d005e-5f45-4ca8-96ed-50c5783a308d","name":"Survival analysis preparation","code":"df_surv = feature_engineering(target_definition(df, \'tipo_colaborador\', \'CLT\'))\\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\\ndf_surv.loc[df_surv.tipo_função == \'Docente\',\'tipo_filial\'] = \'DOCENTE\'","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d695fd5d-fedd-440a-933a-e6b09ae9902b","name":"Generate plots","code":"data_x = df_surv.copy()\\n\\ndata_y = df_surv.desligado==1\\n\\nsurv_days = data_x.tempo_de_casa\\n\\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\\n\\nfor i in analyze:\\n\\n    analisar = i\\n\\n    plt.figure(figsize=(12, 12), dpi=80)\\n\\n    for value in data_x[analisar].unique():\\n        mask = data_x[analisar] == value\\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\\n                                                               surv_days[mask])\\n        plt.step(time_cell, survival_prob_cell, where=\\"post\\",\\n                 label=\\"%s (n = %d)\\" % (value, mask.sum()));\\n\\n    plt.ylabel(\\"est. probability of survival $\\\\hat{S}(t)$\\")\\n    plt.xlabel(\\"Months\\")\\n    plt.legend(loc=\\"best\\");\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4dabbcf4-809d-4903-8e32-26279499c336","name":"Target definition","code":"df_alvo = target_definition(df, \'tipo_colaborador\', \'CLT\')\\n\\ndf_alvo = population_filter(df_alvo)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"ce04c155-4800-4dae-9253-501682182090","name":"Holdout","code":"X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop([\'desligado\'], axis=1), df_alvo[\'desligado\'], test_size=0.1, random_state=42, stratify=df_alvo[\'desligado\']) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64","name":"Check proportions Holdout","code":"print(y.value_counts()/y.shape[0])\\nprint(y_holdout.value_counts()/y_holdout.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","name":"Train test","code":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3","name":"Check proportion Train Test","code":"print(y_train.value_counts()/y_train.shape[0])\\nprint(y_test.value_counts()/y_test.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"d3a63656-d9e4-4200-80a2-ff1e529262ab","name":"Averages for input","code":"print(X_train.idade.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"501b8112-a010-4f1a-9bed-41508f2b1acb","name":"Engineer Drop and Preprocess","code":"df_trat = X_train\\n\\ny_trat = y_train.loc[df_trat.index]\\n\\ndf_eng = feature_engineering(df_trat)\\n\\ndf_trat_drop = drop_turnover(df_eng)\\n\\ndf_preprocess = preprocess_turnover(df_trat_drop)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"953422cc-3fb0-4601-952c-2840da505de3","name":"Engineer info","code":"print(df_preprocess.columns)\\nprint(df_preprocess.shape)\\nprint(y_trat.shape)\\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\\nprint(df_preprocess.isnull().sum())\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"719aa0e4-d5ec-44f6-a6c2-79117c96874e","name":"Scaling fit","code":"Scaler = MinMaxScaler((0,1))\\nScaler.fit(df_preprocess)\\ndump(Scaler, open(\'Scaler.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"#FAFF00","comments":[],"diskcache":false}},{"id":"a7324ce3-3533-4319-82d0-3360324d7249","name":"Hashing High Cardinality test","code":"from sklearn.feature_extraction import FeatureHasher\\n\\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])\\n\\nscores = pd.DataFrame()\\n\\nfrom tqdm.notebook import tqdm\\n\\nfor i in tqdm(range(3,50)):\\n\\n    n_features = i\\n\\n    hashf = FeatureHasher(n_features=n_features,  input_type=\'string\')\\n\\n    funcao_cols = [\'funcao_\'+str(i) for i in range(n_features)]\\n\\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\\n\\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\n    model.fit(train_hash, y_trat)\\n    \\n    score = useful_metrics(test_hash, y_test, model)\\n    \\n    score[\'cols\'] = i\\n    \\n    scores = pd.concat([scores, score])\\n    ","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a3fde54e-894a-488e-a629-25ac13ec53e0","name":"Scaling transform","code":"Scaler = load(open(\'Scaler.pkl\', \'rb\'))\\nfeature = df_preprocess.columns.tolist()\\nscaled_df = df_preprocess\\nscaled_df = scale_dataset(df_preprocess, feature, None)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"825318b2-890f-4cd9-984b-5d282130a117","name":"Custom Tool analysis","code":"df_preprocess_analysis = scaled_df.copy()\\ndf_preprocess_analysis[\'desligado\'] = y_train\\n\\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\\n\\ncols = aval.col_missing()\\n\\ncard = aval.cardinality()\\n\\nrws = aval.row_missing()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"04b793a6-4c8e-4598-828a-62fa4903b5bb","name":"Row evaluation","code":"print(rws[rws > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"c649590d-5e04-47b6-8889-a0bd2901b1ba","name":"Column evaluation","code":"print(cols[cols > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"71269304-ddf9-4591-a4d0-c45357dfb043","name":"Feature Selection run","code":"algorithms = [chi2, f_classif, mutual_info_classif]\\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","name":"Feature Selection results","code":"features = selection.columns.tolist()\\nfeatures.remove(\'Total_points\')\\nKbest_eval = selection.groupby(\'Columns\').sum()[\'Total_points\'].sort_values(ascending=False) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"3c5a1393-9b6d-4206-83ff-660448ee4528","name":"Dropping redundant features","code":"Kbest_eval[(Kbest_eval.index != \'agrup_salario\') & (Kbest_eval.index != \'tempo_de_casa\') & (Kbest_eval.index != \'ord_faixa_etaria\')][:Kbest_eval.shape[0]//2].index.tolist()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"11d639e9-9f16-4840-9ca2-932561027791","name":"Features selected and save","code":"# Tempo de casa redundante com ord_faixa_tempo_casa\\nfeature_final = [\'VP_descricao_VICEPRESIDENCIADEOPERACOES\',\\n \'tipo_filial_DIGITAL\',\\n \'VP_descricao_VICEPRESIDENCIADEMERCADO\',\\n \'tipo_filial_UNDERGRADUATE\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS\',\\n \'salario\',\\n \'ord_faixa_tempo_casa\',\\n \'idade\',\\n \'cotapcd\',\\n \'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS\',\\n \'VP_descricao_VICEPRESIDENCIADEMARKETING\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA\',\\n \'genero_Masculino\',\\n \'genero_Feminino\']\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"68316262-8a81-4e81-8305-99a17550bfcc","name":"Final features","code":"#feature_final = load(open(\'feature_selection.pkl\', \'rb\'))\\nfeature_final = [x for x in scaled_df]\\n\\n# Comment if feature selection was used\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))\\n\\n#feature_final.remove(\'escolaridade_classificao\')\\nX_train_final = scaled_df[feature_final]","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"616712eb-bc91-4af4-9b97-9bf57d3df147","name":"Models init overfit eval","code":"lr = LogisticRegression(max_iter=10000)\\nlgbm = LGBMClassifier()\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\ncat = CatBoostClassifier(silent=True)\\next = ExtraTreesClassifier()\\ngnb = GaussianNB()\\n\\n\\nmodels = {\'Logistic Regression\': lr,\\n          \'LGBM\': lgbm,\\n          \'XGBoost\': xgb,\\n          \'CatBoost | Default\': cat,\\n          \'Gaussian NB\': gnb,\\n          \'Extra trees | Default\': ExtraTreesClassifier(),\\n          \'Extra trees | balanced \': ExtraTreesClassifier(class_weight=\'balanced\'), # noqa E501\\n          \'Extra trees | balanced_subsample\': ExtraTreesClassifier(class_weight=\'balanced_subsample\'), # noqa E501\\n          \'Random Forest | Default\': RandomForestClassifier()}\\n\\nfor a in range(5, 2, -1):\\n    models[\'Random Forest - Max_depth:\'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\\n\\ndepth = [3]\\nrs = [0.5]\\nparams_list=[ depth, rs ]\\n\\nfor depth_at, rs_at in list(itertools.product(*params_list)):\\n    models[\'CatBoostClassifier | Early_Stopping:4\'+\' | depth:\'+str(depth_at)+\' | strength:\'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","name":"One model test","code":"models_1 = {\'Random Forest - Default\': RandomForestClassifier()}","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","name":"Test results","code":"test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\\ntest_results = test.overfit(metrics.f1_score)\\ntest_results","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"b2b08397-d1fa-49bb-b121-6d2fbd86f821","name":"Test results chart","code":"fig = px.line(test_results, x=\\"Sample\\", y=\\"f1_score\\", color=\\"Dataset\\", facet_col=\\"Model\\", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\\nfig.show()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"dac101ac-b57e-445a-8101-b90e36ac28f7","name":"All models run F1 score","code":"All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"60fd0370-09a6-49e3-abdf-9c29067c6754","name":"F1 Score","code":"pivot_f1 = All_models_results_f1.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'f1_score\') # noqa E501\\npivot_f1[\'Overfit\'] = abs(pivot_f1[\'Test\']-pivot_f1[\'Train\'])\\npivot_f1 = pivot_f1.groupby([\'Model\'])[[\'Overfit\', \'Test\']].mean().sort_values([\'Overfit\']) # noqa E501\\npivot_f1[pivot_f1.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","name":"All models run recall score","code":"All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf","name":"Recall score","code":"pivot_recall = All_models_results_recall.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'recall_score\') # noqa E501\\npivot_recall[\'Overfit\'] = abs(pivot_recall[\'Test\']-pivot_recall[\'Train\'])\\npivot_recall = pivot_recall.groupby(\'Model\')[\'Overfit\', \'Test\'].mean().sort_values(\'Overfit\') # noqa E501\\npivot_recall[pivot_recall.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","name":"All models run precision score","code":"All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"2873ca00-5d55-4437-9f3d-1c723e51a070","name":"Precision score","code":"pivot_precision = All_models_results_precision.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'precision_score\') # noqa E501\\npivot_precision[\'Overfit\'] = abs(pivot_precision[\'Test\']-pivot_precision[\'Train\'])\\npivot_precision = pivot_precision.groupby(\'Model\')[[\'Overfit\', \'Test\']].mean().sort_values(\'Overfit\') # noqa E501\\npivot_precision[pivot_precision.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"180c9593-1123-4208-aa33-b2bf9c86b1e8","name":"Prepare X_test dataset","code":"X_test_final = final_transformation(X_test, feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","name":"Wrap up final datasets","code":"X_train_final, y_train_final = X_train_final, y_trat","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c969afb6-beca-462c-994b-3711f45b9725","name":"Check shapes","code":"print(X_train_final.shape)\\nprint(y_train_final.shape)\\nprint(X_test_final.shape)\\nprint(y_test.shape)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","name":"Metrics function","code":"def useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"10188aaf-83cc-4fcb-afe3-d7520346a34a","name":"Chosen model baseline","code":"gnb = GaussianNB()\\ngnb.fit(X_train_final, y_train_final)\\n\\ncat = CatBoostClassifier(silent=True)\\ncat.fit(X_train_final, y_train_final)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\nmodels = [gnb, cat, xgb]\\n\\nfor model in models:\\n\\n    print(model.__class__.__name__)\\n\\n    model.fit(X_train_final, y_train_final)\\n\\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\\n                         y_test, model))\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a878d86e-3707-49be-bb85-3a5c0cbe3972","name":"Optuna dataset","code":"X_optuna = pd.concat([X_train_final, X_test_final])\\ny_optuna = pd.concat([y_train_final, y_test])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"d5742407-e18a-4185-a945-f5ac11dcb854","name":"Optuna function Gaussian","code":"\\nsequence = [ ]\\nfor i in range(-9, 1):\\n    sequence.append(10**i)\\n\\ndef objective_gnb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'var_smoothing\': trial.suggest_categorical(\'var_smoothing\', sequence)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = GaussianNB(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","name":"Optuna function LR","code":"def objective_lr(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'max_iter\':10000\\n    }\\n    \\n    oversample_grid = {\\n        \'sampling_strategy\': trial.suggest_float(\'sampling_strategy\',0.5,1.0,step=0.01)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = LogisticRegression(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n    \\n    over_under = ADASYN(**oversample_grid)\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n        \\n        X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2ff29722-5176-486b-8ec0-7b138fbe2c05","name":"Optuna Run LR","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_lr, n_trials=100)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4","name":"Optuna Results LR","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","name":"Optuna function XGB","code":"def objective_xgb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n\\n    model_grid = {\\n        # Prevent Overfit\\n        \'max_depth\': trial.suggest_int(\'max_depth\', 3, 7, step=1),\\n        \'min_child_weight\': trial.suggest_int(\'min_child_weight\', 1, 7, step=1),\\n        \'gamma\': trial.suggest_int(\'gamma\', 0, 7, step=1),\\n        # Imbalanced dataset\\n        \'max_delta_step\': trial.suggest_int(\'max_delta_step\', 0, 10, step=1)\\n    }\\n\\n    param_grid = {\\n        \'threshold\': trial.suggest_float(\'threshold\', 0.2, 1.0, step=0.01)\\n    }\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n\\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation, evaluation])\\n\\n    return(F_evaluation.f1_score.std(),\\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\\n           F_evaluation.recall_score.mean(),\\n           F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","name":"Optuna Run XGB","code":"study = optuna.create_study(directions=[\'minimize\', \'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_xgb, n_trials=50)\\n\\nduration = 2000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c8443305-4d7a-4455-9492-a7aeaaff5e07","name":"Optuna Results XGB","code":"metrics_name = [\'std_F1\',\'F1\', \'Precision\', \'Recall\', \'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n\\n    for metric, value in zip(metrics_name, trial.values):\\n\\n        try_1[metric] = value\\n\\n    try_1[\'Params\'] = str(trial.params)\\n\\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n\\n    tries = tries[tries.Precision > 0]\\n\\nbest_params = tries.sort_values([\'std_F1\', \'Precision\',\'F1\',\'Brier\'], ascending= [True, False, True, False]).head(100)\\n\\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","name":"Optuna run Gaussian","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_gnb, n_trials=200)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"05f7e787-a336-4342-b603-78809382262e","name":"Optuna results","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d7fdb49f-1502-43d4-87ef-e452da6ecf74","name":"Top 20 results optuna","code":"tries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","name":"Final model params","code":"params = {\'max_depth\': 6, \'min_child_weight\': 4, \'gamma\': 1, \'max_delta_step\': 10}\\n\\nthreshold = 0.52\\n\\ngnb = GaussianNB()\\n\\nlr = LogisticRegression(max_iter=10000)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\\n\\nover_under = ADASYN(sampling_strategy=0.64)\\n\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac","name":"Yellowbricks threshold","code":"from yellowbrick.classifier import DiscriminationThreshold\\n\\n\\n# Instantiate the classification model and visualizer\\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\\nvisualizer = DiscriminationThreshold(model)\\n\\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\\nvisualizer.show()           # Finalize and render the figure","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","name":"Final model stats","code":"X_dataset, y_dataset = X_optuna, y_optuna\\n\\nmodel = xgb\\n\\nevaluation = pd.DataFrame()\\n\\nassertiveness = pd.DataFrame()\\n\\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\\n\\ncount = 0\\n\\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\\n\\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\\n        \\n        #Exclude if no oversample\\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train,y_train)\\n\\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\\n        \\n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\\n        \\n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\\n        \\n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\\n        \\n\\n        count+=1\\n        \\n        print(\\"Shuffle \\" + str(count), end = \\"\\\\r\\")\\n        \\nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\n        \\ngrouped_stats = assertiveness.groupby(\'index\').agg(\\n        avg_correct_percent =(\'correct\', \'mean\'),\\n        avg_precision = (\'precision\', np.nanmean),\\n        avg_recall = (\'recall\', np.nanmean),\\n        std = (\'brier\', np.std),\\n        brier = (\'brier\', np.mean),\\n        count = (\'brier\', \'count\')\\n        )\\n        \\nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\\n\\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"1dd18a01-147a-489b-941e-867a5fc7389b","name":"Stats visualization","code":"duration = 1000  # milliseconds\\nfreq = 440# Hz\\nwinsound.Beep(freq, duration)\\nax = sns.boxplot(x=\'variable\', y=\'value\', data=pd.melt(evaluation))\\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"7122c816-b17e-4185-9c99-0fc03101be5b","name":"Prepare X_holdout dataset","code":"X_holdout_final = final_transformation(X_holdout,feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","name":"Final Results","code":"xgb.fit(X_optuna, y_optuna)\\n\\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\\n\\nconfusion_matrix = metrics.confusion_matrix(\\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\\n\\ntn, fp, fn, tp = confusion_matrix.ravel()\\nspecificity = tn / (tn+fp)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b54670b-7be3-4478-a89c-0fb50685bba2","name":"Confusion Matrix","code":"cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\\n\\ncm_display.plot()\\nplt.grid(False)\\nplt.show()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","name":"Laymans Results","code":"print(f\\"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\\\n\\")\\n\\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\\n\\nprint(\'\\\\nExcelente notícia!!!!\')\\n\\n\\n\\nduration = 1000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca","name":"Save Model","code":"dump(xgb, open(\'turnover_general_model.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}}],"edges":[{"parent":"74e47343-3dbf-44f8-8228-e584f90a0e16","child":"df37f106-a4ff-49cb-9f22-c550f0812b37"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"651d005e-5f45-4ca8-96ed-50c5783a308d"},{"parent":"651d005e-5f45-4ca8-96ed-50c5783a308d","child":"d695fd5d-fedd-440a-933a-e6b09ae9902b"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"4dabbcf4-809d-4903-8e32-26279499c336"},{"parent":"4dabbcf4-809d-4903-8e32-26279499c336","child":"ce04c155-4800-4dae-9253-501682182090"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"d3a63656-d9e4-4200-80a2-ff1e529262ab"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"501b8112-a010-4f1a-9bed-41508f2b1acb"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"953422cc-3fb0-4601-952c-2840da505de3"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"953422cc-3fb0-4601-952c-2840da505de3","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a7324ce3-3533-4319-82d0-3360324d7249"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a3fde54e-894a-488e-a629-25ac13ec53e0"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"825318b2-890f-4cd9-984b-5d282130a117"},{"parent":"825318b2-890f-4cd9-984b-5d282130a117","child":"04b793a6-4c8e-4598-828a-62fa4903b5bb"},{"parent":"04b793a6-4c8e-4598-828a-62fa4903b5bb","child":"c649590d-5e04-47b6-8889-a0bd2901b1ba"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"71269304-ddf9-4591-a4d0-c45357dfb043"},{"parent":"71269304-ddf9-4591-a4d0-c45357dfb043","child":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f"},{"parent":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","child":"3c5a1393-9b6d-4206-83ff-660448ee4528"},{"parent":"3c5a1393-9b6d-4206-83ff-660448ee4528","child":"11d639e9-9f16-4840-9ca2-932561027791"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"68316262-8a81-4e81-8305-99a17550bfcc"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"616712eb-bc91-4af4-9b97-9bf57d3df147"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4"},{"parent":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","child":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb"},{"parent":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","child":"b2b08397-d1fa-49bb-b121-6d2fbd86f821"},{"parent":"616712eb-bc91-4af4-9b97-9bf57d3df147","child":"dac101ac-b57e-445a-8101-b90e36ac28f7"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"60fd0370-09a6-49e3-abdf-9c29067c6754"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288"},{"parent":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","child":"2873ca00-5d55-4437-9f3d-1c723e51a070"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"180c9593-1123-4208-aa33-b2bf9c86b1e8","child":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"c969afb6-beca-462c-994b-3711f45b9725"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"16da288a-1d46-4d2f-96e9-b9e59c5505f3"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"10188aaf-83cc-4fcb-afe3-d7520346a34a"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"a878d86e-3707-49be-bb85-3a5c0cbe3972"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"d5742407-e18a-4185-a945-f5ac11dcb854"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175"},{"parent":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","child":"2ff29722-5176-486b-8ec0-7b138fbe2c05"},{"parent":"2ff29722-5176-486b-8ec0-7b138fbe2c05","child":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"8f560d16-8a82-4a85-821e-0a6dbf399eaf"},{"parent":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","child":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0"},{"parent":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","child":"c8443305-4d7a-4455-9492-a7aeaaff5e07"},{"parent":"d5742407-e18a-4185-a945-f5ac11dcb854","child":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257"},{"parent":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","child":"05f7e787-a336-4342-b603-78809382262e"},{"parent":"05f7e787-a336-4342-b603-78809382262e","child":"d7fdb49f-1502-43d4-87ef-e452da6ecf74"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d"},{"parent":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","child":"1dd18a01-147a-489b-941e-867a5fc7389b"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"7122c816-b17e-4185-9c99-0fc03101be5b","child":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0"},{"parent":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","child":"2b54670b-7be3-4478-a89c-0fb50685bba2"},{"parent":"2b54670b-7be3-4478-a89c-0fb50685bba2","child":"4b0268ef-ea00-4441-a8ad-58cdb5372c28"},{"parent":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","child":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca"}]}\n')
[2022-12-07 17:08:22] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: graph: {'nodes': [{'id': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'name': 'Import libs', 'code': 'import pandas as pd\nimport numpy as np\nfrom pickle import dump, load\nimport itertools\nimport winsound\n\nimport Custom_Tools\nfrom sksurv.nonparametric import kaplan_meier_estimator\nfrom target_definition import target_definition\nfrom feature_engineering import feature_engineering\nfrom drop_turnover import drop_turnover\nfrom preprocess_turnover import preprocess_turnover\nfrom scale_dataset import scale_dataset\nfrom final_transformation import final_transformation\nfrom population_filter import population_filter\n\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\n\n\nfrom imblearn.over_sampling import ADASYN\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics\n\n\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport optuna', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'name': 'First dataset', 'code': "df = pd.read_excel('C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/'\n                   'Python/Análise_Headcount.xlsx')\n\n'''\nAdicionar tipo de função (Gestor, não gestor)\nFeature Hashing - funcao_descricao, codsecao\nSalário, méritos e promoções\nPulses\n\nfilial_descricao não vai entrar porque codsecao pega filial e área.\n'''", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'name': 'Survival analysis preparation', 'code': "df_surv = feature_engineering(target_definition(df, 'tipo_colaborador', 'CLT'))\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\ndf_surv.loc[df_surv.tipo_função == 'Docente','tipo_filial'] = 'DOCENTE'", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd695fd5d-fedd-440a-933a-e6b09ae9902b', 'name': 'Generate plots', 'code': 'data_x = df_surv.copy()\n\ndata_y = df_surv.desligado==1\n\nsurv_days = data_x.tempo_de_casa\n\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\n\nfor i in analyze:\n\n    analisar = i\n\n    plt.figure(figsize=(12, 12), dpi=80)\n\n    for value in data_x[analisar].unique():\n        mask = data_x[analisar] == value\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\n                                                               surv_days[mask])\n        plt.step(time_cell, survival_prob_cell, where="post",\n                 label="%s (n = %d)" % (value, mask.sum()));\n\n    plt.ylabel("est. probability of survival $\\hat{S}(t)$")\n    plt.xlabel("Months")\n    plt.legend(loc="best");\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4dabbcf4-809d-4903-8e32-26279499c336', 'name': 'Target definition', 'code': "df_alvo = target_definition(df, 'tipo_colaborador', 'CLT')\n\ndf_alvo = population_filter(df_alvo)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'ce04c155-4800-4dae-9253-501682182090', 'name': 'Holdout', 'code': "X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop(['desligado'], axis=1), df_alvo['desligado'], test_size=0.1, random_state=42, stratify=df_alvo['desligado']) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64', 'name': 'Check proportions Holdout', 'code': 'print(y.value_counts()/y.shape[0])\nprint(y_holdout.value_counts()/y_holdout.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'name': 'Train test', 'code': 'X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3', 'name': 'Check proportion Train Test', 'code': 'print(y_train.value_counts()/y_train.shape[0])\nprint(y_test.value_counts()/y_test.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'd3a63656-d9e4-4200-80a2-ff1e529262ab', 'name': 'Averages for input', 'code': 'print(X_train.idade.mean())', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'name': 'Engineer Drop and Preprocess', 'code': 'df_trat = X_train\n\ny_trat = y_train.loc[df_trat.index]\n\ndf_eng = feature_engineering(df_trat)\n\ndf_trat_drop = drop_turnover(df_eng)\n\ndf_preprocess = preprocess_turnover(df_trat_drop)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '953422cc-3fb0-4601-952c-2840da505de3', 'name': 'Engineer info', 'code': 'print(df_preprocess.columns)\nprint(df_preprocess.shape)\nprint(y_trat.shape)\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\nprint(df_preprocess.isnull().sum())\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '719aa0e4-d5ec-44f6-a6c2-79117c96874e', 'name': 'Scaling fit', 'code': "Scaler = MinMaxScaler((0,1))\nScaler.fit(df_preprocess)\ndump(Scaler, open('Scaler.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': '#FAFF00', 'comments': [], 'diskcache': False}}, {'id': 'a7324ce3-3533-4319-82d0-3360324d7249', 'name': 'Hashing High Cardinality test', 'code': "from sklearn.feature_extraction import FeatureHasher\n\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])\n\nscores = pd.DataFrame()\n\nfrom tqdm.notebook import tqdm\n\nfor i in tqdm(range(3,50)):\n\n    n_features = i\n\n    hashf = FeatureHasher(n_features=n_features,  input_type='string')\n\n    funcao_cols = ['funcao_'+str(i) for i in range(n_features)]\n\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\n\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\n\n    model.fit(train_hash, y_trat)\n    \n    score = useful_metrics(test_hash, y_test, model)\n    \n    score['cols'] = i\n    \n    scores = pd.concat([scores, score])\n    ", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'name': 'Scaling transform', 'code': "Scaler = load(open('Scaler.pkl', 'rb'))\nfeature = df_preprocess.columns.tolist()\nscaled_df = df_preprocess\nscaled_df = scale_dataset(df_preprocess, feature, None)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '825318b2-890f-4cd9-984b-5d282130a117', 'name': 'Custom Tool analysis', 'code': "df_preprocess_analysis = scaled_df.copy()\ndf_preprocess_analysis['desligado'] = y_train\n\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\n\ncols = aval.col_missing()\n\ncard = aval.cardinality()\n\nrws = aval.row_missing()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'name': 'Row evaluation', 'code': 'print(rws[rws > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'c649590d-5e04-47b6-8889-a0bd2901b1ba', 'name': 'Column evaluation', 'code': 'print(cols[cols > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '71269304-ddf9-4591-a4d0-c45357dfb043', 'name': 'Feature Selection run', 'code': 'algorithms = [chi2, f_classif, mutual_info_classif]\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'name': 'Feature Selection results', 'code': "features = selection.columns.tolist()\nfeatures.remove('Total_points')\nKbest_eval = selection.groupby('Columns').sum()['Total_points'].sort_values(ascending=False) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'name': 'Dropping redundant features', 'code': "Kbest_eval[(Kbest_eval.index != 'agrup_salario') & (Kbest_eval.index != 'tempo_de_casa') & (Kbest_eval.index != 'ord_faixa_etaria')][:Kbest_eval.shape[0]//2].index.tolist()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '11d639e9-9f16-4840-9ca2-932561027791', 'name': 'Features selected and save', 'code': "# Tempo de casa redundante com ord_faixa_tempo_casa\nfeature_final = ['VP_descricao_VICEPRESIDENCIADEOPERACOES',\n 'tipo_filial_DIGITAL',\n 'VP_descricao_VICEPRESIDENCIADEMERCADO',\n 'tipo_filial_UNDERGRADUATE',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS',\n 'salario',\n 'ord_faixa_tempo_casa',\n 'idade',\n 'cotapcd',\n 'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS',\n 'VP_descricao_VICEPRESIDENCIADEMARKETING',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA',\n 'genero_Masculino',\n 'genero_Feminino']\ndump(feature_final, open('feature_selection.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '68316262-8a81-4e81-8305-99a17550bfcc', 'name': 'Final features', 'code': "#feature_final = load(open('feature_selection.pkl', 'rb'))\nfeature_final = [x for x in scaled_df]\n\n# Comment if feature selection was used\ndump(feature_final, open('feature_selection.pkl', 'wb'))\n\n#feature_final.remove('escolaridade_classificao')\nX_train_final = scaled_df[feature_final]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'name': 'Models init overfit eval', 'code': "lr = LogisticRegression(max_iter=10000)\nlgbm = LGBMClassifier()\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\ncat = CatBoostClassifier(silent=True)\next = ExtraTreesClassifier()\ngnb = GaussianNB()\n\n\nmodels = {'Logistic Regression': lr,\n          'LGBM': lgbm,\n          'XGBoost': xgb,\n          'CatBoost | Default': cat,\n          'Gaussian NB': gnb,\n          'Extra trees | Default': ExtraTreesClassifier(),\n          'Extra trees | balanced ': ExtraTreesClassifier(class_weight='balanced'), # noqa E501\n          'Extra trees | balanced_subsample': ExtraTreesClassifier(class_weight='balanced_subsample'), # noqa E501\n          'Random Forest | Default': RandomForestClassifier()}\n\nfor a in range(5, 2, -1):\n    models['Random Forest - Max_depth:'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\n\ndepth = [3]\nrs = [0.5]\nparams_list=[ depth, rs ]\n\nfor depth_at, rs_at in list(itertools.product(*params_list)):\n    models['CatBoostClassifier | Early_Stopping:4'+' | depth:'+str(depth_at)+' | strength:'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'name': 'One model test', 'code': "models_1 = {'Random Forest - Default': RandomForestClassifier()}", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'name': 'Test results', 'code': 'test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\ntest_results = test.overfit(metrics.f1_score)\ntest_results', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821', 'name': 'Test results chart', 'code': 'fig = px.line(test_results, x="Sample", y="f1_score", color="Dataset", facet_col="Model", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\nfig.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'name': 'All models run F1 score', 'code': 'All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '60fd0370-09a6-49e3-abdf-9c29067c6754', 'name': 'F1 Score', 'code': "pivot_f1 = All_models_results_f1.pivot(index=['Sample', 'Model'], columns='Dataset', values='f1_score') # noqa E501\npivot_f1['Overfit'] = abs(pivot_f1['Test']-pivot_f1['Train'])\npivot_f1 = pivot_f1.groupby(['Model'])[['Overfit', 'Test']].mean().sort_values(['Overfit']) # noqa E501\npivot_f1[pivot_f1.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'name': 'All models run recall score', 'code': 'All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf', 'name': 'Recall score', 'code': "pivot_recall = All_models_results_recall.pivot(index=['Sample', 'Model'], columns='Dataset', values='recall_score') # noqa E501\npivot_recall['Overfit'] = abs(pivot_recall['Test']-pivot_recall['Train'])\npivot_recall = pivot_recall.groupby('Model')['Overfit', 'Test'].mean().sort_values('Overfit') # noqa E501\npivot_recall[pivot_recall.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'name': 'All models run precision score', 'code': 'All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '2873ca00-5d55-4437-9f3d-1c723e51a070', 'name': 'Precision score', 'code': "pivot_precision = All_models_results_precision.pivot(index=['Sample', 'Model'], columns='Dataset', values='precision_score') # noqa E501\npivot_precision['Overfit'] = abs(pivot_precision['Test']-pivot_precision['Train'])\npivot_precision = pivot_precision.groupby('Model')[['Overfit', 'Test']].mean().sort_values('Overfit') # noqa E501\npivot_precision[pivot_precision.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'name': 'Prepare X_test dataset', 'code': "X_test_final = final_transformation(X_test, feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'name': 'Wrap up final datasets', 'code': 'X_train_final, y_train_final = X_train_final, y_trat', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c969afb6-beca-462c-994b-3711f45b9725', 'name': 'Check shapes', 'code': 'print(X_train_final.shape)\nprint(y_train_final.shape)\nprint(X_test_final.shape)\nprint(y_test.shape)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'name': 'Metrics function', 'code': "def useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '10188aaf-83cc-4fcb-afe3-d7520346a34a', 'name': 'Chosen model baseline', 'code': 'gnb = GaussianNB()\ngnb.fit(X_train_final, y_train_final)\n\ncat = CatBoostClassifier(silent=True)\ncat.fit(X_train_final, y_train_final)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\n\nmodels = [gnb, cat, xgb]\n\nfor model in models:\n\n    print(model.__class__.__name__)\n\n    model.fit(X_train_final, y_train_final)\n\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\n                         y_test, model))\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'name': 'Optuna dataset', 'code': 'X_optuna = pd.concat([X_train_final, X_test_final])\ny_optuna = pd.concat([y_train_final, y_test])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'name': 'Optuna function Gaussian', 'code': "\nsequence = [ ]\nfor i in range(-9, 1):\n    sequence.append(10**i)\n\ndef objective_gnb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'var_smoothing': trial.suggest_categorical('var_smoothing', sequence)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = GaussianNB(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'name': 'Optuna function LR', 'code': "def objective_lr(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'max_iter':10000\n    }\n    \n    oversample_grid = {\n        'sampling_strategy': trial.suggest_float('sampling_strategy',0.5,1.0,step=0.01)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = LogisticRegression(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n    \n    over_under = ADASYN(**oversample_grid)\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n        \n        X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'name': 'Optuna Run LR', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_lr, n_trials=100)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4', 'name': 'Optuna Results LR', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'name': 'Optuna function XGB', 'code': "def objective_xgb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n\n    model_grid = {\n        # Prevent Overfit\n        'max_depth': trial.suggest_int('max_depth', 3, 7, step=1),\n        'min_child_weight': trial.suggest_int('min_child_weight', 1, 7, step=1),\n        'gamma': trial.suggest_int('gamma', 0, 7, step=1),\n        # Imbalanced dataset\n        'max_delta_step': trial.suggest_int('max_delta_step', 0, 10, step=1)\n    }\n\n    param_grid = {\n        'threshold': trial.suggest_float('threshold', 0.2, 1.0, step=0.01)\n    }\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation, evaluation])\n\n    return(F_evaluation.f1_score.std(),\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\n           F_evaluation.recall_score.mean(),\n           F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'name': 'Optuna Run XGB', 'code': "study = optuna.create_study(directions=['minimize', 'maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_xgb, n_trials=50)\n\nduration = 2000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c8443305-4d7a-4455-9492-a7aeaaff5e07', 'name': 'Optuna Results XGB', 'code': "metrics_name = ['std_F1','F1', 'Precision', 'Recall', 'Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n\n    for metric, value in zip(metrics_name, trial.values):\n\n        try_1[metric] = value\n\n    try_1['Params'] = str(trial.params)\n\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n\n    tries = tries[tries.Precision > 0]\n\nbest_params = tries.sort_values(['std_F1', 'Precision','F1','Brier'], ascending= [True, False, True, False]).head(100)\n\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'name': 'Optuna run Gaussian', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_gnb, n_trials=200)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '05f7e787-a336-4342-b603-78809382262e', 'name': 'Optuna results', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74', 'name': 'Top 20 results optuna', 'code': "tries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'name': 'Final model params', 'code': "params = {'max_depth': 6, 'min_child_weight': 4, 'gamma': 1, 'max_delta_step': 10}\n\nthreshold = 0.52\n\ngnb = GaussianNB()\n\nlr = LogisticRegression(max_iter=10000)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\n\nover_under = ADASYN(sampling_strategy=0.64)\n\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac', 'name': 'Yellowbricks threshold', 'code': 'from yellowbrick.classifier import DiscriminationThreshold\n\n\n# Instantiate the classification model and visualizer\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\nvisualizer = DiscriminationThreshold(model)\n\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\nvisualizer.show()           # Finalize and render the figure', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'name': 'Final model stats', 'code': 'X_dataset, y_dataset = X_optuna, y_optuna\n\nmodel = xgb\n\nevaluation = pd.DataFrame()\n\nassertiveness = pd.DataFrame()\n\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\n\ncount = 0\n\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\n\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\n        \n        #Exclude if no oversample\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train,y_train)\n\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\n        \n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\n        \n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\n        \n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\n        \n\n        count+=1\n        \n        print("Shuffle " + str(count), end = "\\r")\n        \nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\n        \ngrouped_stats = assertiveness.groupby(\'index\').agg(\n        avg_correct_percent =(\'correct\', \'mean\'),\n        avg_precision = (\'precision\', np.nanmean),\n        avg_recall = (\'recall\', np.nanmean),\n        std = (\'brier\', np.std),\n        brier = (\'brier\', np.mean),\n        count = (\'brier\', \'count\')\n        )\n        \nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\n\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '1dd18a01-147a-489b-941e-867a5fc7389b', 'name': 'Stats visualization', 'code': "duration = 1000  # milliseconds\nfreq = 440# Hz\nwinsound.Beep(freq, duration)\nax = sns.boxplot(x='variable', y='value', data=pd.melt(evaluation))\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '7122c816-b17e-4185-9c99-0fc03101be5b', 'name': 'Prepare X_holdout dataset', 'code': "X_holdout_final = final_transformation(X_holdout,feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'name': 'Final Results', 'code': 'xgb.fit(X_optuna, y_optuna)\n\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\n\nconfusion_matrix = metrics.confusion_matrix(\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\n\ntn, fp, fn, tp = confusion_matrix.ravel()\nspecificity = tn / (tn+fp)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'name': 'Confusion Matrix', 'code': 'cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\n\ncm_display.plot()\nplt.grid(False)\nplt.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'name': 'Laymans Results', 'code': 'print(f"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\n")\n\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\n\nprint(\'\\nExcelente notícia!!!!\')\n\n\n\nduration = 1000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca', 'name': 'Save Model', 'code': "dump(xgb, open('turnover_general_model.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}], 'edges': [{'parent': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'child': 'df37f106-a4ff-49cb-9f22-c550f0812b37'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '651d005e-5f45-4ca8-96ed-50c5783a308d'}, {'parent': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'child': 'd695fd5d-fedd-440a-933a-e6b09ae9902b'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '4dabbcf4-809d-4903-8e32-26279499c336'}, {'parent': '4dabbcf4-809d-4903-8e32-26279499c336', 'child': 'ce04c155-4800-4dae-9253-501682182090'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': 'd3a63656-d9e4-4200-80a2-ff1e529262ab'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '501b8112-a010-4f1a-9bed-41508f2b1acb'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '953422cc-3fb0-4601-952c-2840da505de3'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '953422cc-3fb0-4601-952c-2840da505de3', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a7324ce3-3533-4319-82d0-3360324d7249'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a3fde54e-894a-488e-a629-25ac13ec53e0'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '825318b2-890f-4cd9-984b-5d282130a117'}, {'parent': '825318b2-890f-4cd9-984b-5d282130a117', 'child': '04b793a6-4c8e-4598-828a-62fa4903b5bb'}, {'parent': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'child': 'c649590d-5e04-47b6-8889-a0bd2901b1ba'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '71269304-ddf9-4591-a4d0-c45357dfb043'}, {'parent': '71269304-ddf9-4591-a4d0-c45357dfb043', 'child': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f'}, {'parent': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'child': '3c5a1393-9b6d-4206-83ff-660448ee4528'}, {'parent': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'child': '11d639e9-9f16-4840-9ca2-932561027791'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '68316262-8a81-4e81-8305-99a17550bfcc'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '616712eb-bc91-4af4-9b97-9bf57d3df147'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4'}, {'parent': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'child': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb'}, {'parent': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'child': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821'}, {'parent': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'child': 'dac101ac-b57e-445a-8101-b90e36ac28f7'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '60fd0370-09a6-49e3-abdf-9c29067c6754'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288'}, {'parent': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'child': '2873ca00-5d55-4437-9f3d-1c723e51a070'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'child': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': 'c969afb6-beca-462c-994b-3711f45b9725'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': '16da288a-1d46-4d2f-96e9-b9e59c5505f3'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': '10188aaf-83cc-4fcb-afe3-d7520346a34a'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': 'a878d86e-3707-49be-bb85-3a5c0cbe3972'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': 'd5742407-e18a-4185-a945-f5ac11dcb854'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175'}, {'parent': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'child': '2ff29722-5176-486b-8ec0-7b138fbe2c05'}, {'parent': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'child': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '8f560d16-8a82-4a85-821e-0a6dbf399eaf'}, {'parent': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'child': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0'}, {'parent': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'child': 'c8443305-4d7a-4455-9492-a7aeaaff5e07'}, {'parent': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'child': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257'}, {'parent': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'child': '05f7e787-a336-4342-b603-78809382262e'}, {'parent': '05f7e787-a336-4342-b603-78809382262e', 'child': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d'}, {'parent': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'child': '1dd18a01-147a-489b-941e-867a5fc7389b'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': '7122c816-b17e-4185-9c99-0fc03101be5b', 'child': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0'}, {'parent': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'child': '2b54670b-7be3-4478-a89c-0fb50685bba2'}, {'parent': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'child': '4b0268ef-ea00-4441-a8ad-58cdb5372c28'}, {'parent': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'child': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca'}]}
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:22] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Import libs (74e47343-3dbf-44f8-8228-e584f90a0e16), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:23] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: args: Namespace(base_url='http://localhost:8888/', header='Accept-Encoding=gzip,%20deflate,%20br;Host=localhost:8888;%20Authorization=token%2028f6151ce9fbd73f4964bf998f83d5913e6655dbb33ebbe0', cookie='_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20username-localhost-8888=2%7C1:0%7C10:1670443735%7C23:username-localhost-8888%7C44:MTVlNWE1NjdiYmY0NDVlOTg5MDMwNTRjMDc0OWJiYjM=%7C2c5042bf84065a5ae00961dfd08beb6261dd2f3ea78cce85edd9e4fca0d1e16a', cell='{"nodes":[{"id":"74e47343-3dbf-44f8-8228-e584f90a0e16","name":"Import libs","code":"import pandas as pd\\nimport numpy as np\\nfrom pickle import dump, load\\nimport itertools\\nimport winsound\\n\\nimport Custom_Tools\\nfrom sksurv.nonparametric import kaplan_meier_estimator\\nfrom target_definition import target_definition\\nfrom feature_engineering import feature_engineering\\nfrom drop_turnover import drop_turnover\\nfrom preprocess_turnover import preprocess_turnover\\nfrom scale_dataset import scale_dataset\\nfrom final_transformation import final_transformation\\nfrom population_filter import population_filter\\n\\n\\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\\nfrom sklearn.preprocessing import MinMaxScaler\\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\\n\\n\\nfrom imblearn.over_sampling import ADASYN\\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\\nfrom sklearn.linear_model import LogisticRegression\\nfrom lightgbm import LGBMClassifier\\nfrom xgboost import XGBClassifier\\nfrom catboost import CatBoostClassifier\\nfrom sklearn.naive_bayes import GaussianNB\\nfrom sklearn import metrics\\n\\n\\nimport plotly.express as px\\nimport seaborn as sns\\nimport matplotlib.pyplot as plt\\n\\n\\nimport optuna","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"df37f106-a4ff-49cb-9f22-c550f0812b37","name":"First dataset","code":"df = pd.read_excel(\'C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/\'\\n                   \'Python/Análise_Headcount.xlsx\')\\n\\n\'\'\'\\nAdicionar tipo de função (Gestor, não gestor)\\nFeature Hashing - funcao_descricao, codsecao\\nSalário, méritos e promoções\\nPulses\\n\\nfilial_descricao não vai entrar porque codsecao pega filial e área.\\n\'\'\'","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"651d005e-5f45-4ca8-96ed-50c5783a308d","name":"Survival analysis preparation","code":"df_surv = feature_engineering(target_definition(df, \'tipo_colaborador\', \'CLT\'))\\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\\ndf_surv.loc[df_surv.tipo_função == \'Docente\',\'tipo_filial\'] = \'DOCENTE\'","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d695fd5d-fedd-440a-933a-e6b09ae9902b","name":"Generate plots","code":"data_x = df_surv.copy()\\n\\ndata_y = df_surv.desligado==1\\n\\nsurv_days = data_x.tempo_de_casa\\n\\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\\n\\nfor i in analyze:\\n\\n    analisar = i\\n\\n    plt.figure(figsize=(12, 12), dpi=80)\\n\\n    for value in data_x[analisar].unique():\\n        mask = data_x[analisar] == value\\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\\n                                                               surv_days[mask])\\n        plt.step(time_cell, survival_prob_cell, where=\\"post\\",\\n                 label=\\"%s (n = %d)\\" % (value, mask.sum()));\\n\\n    plt.ylabel(\\"est. probability of survival $\\\\hat{S}(t)$\\")\\n    plt.xlabel(\\"Months\\")\\n    plt.legend(loc=\\"best\\");\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4dabbcf4-809d-4903-8e32-26279499c336","name":"Target definition","code":"df_alvo = target_definition(df, \'tipo_colaborador\', \'CLT\')\\n\\ndf_alvo = population_filter(df_alvo)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"ce04c155-4800-4dae-9253-501682182090","name":"Holdout","code":"X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop([\'desligado\'], axis=1), df_alvo[\'desligado\'], test_size=0.1, random_state=42, stratify=df_alvo[\'desligado\']) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64","name":"Check proportions Holdout","code":"print(y.value_counts()/y.shape[0])\\nprint(y_holdout.value_counts()/y_holdout.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","name":"Train test","code":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3","name":"Check proportion Train Test","code":"print(y_train.value_counts()/y_train.shape[0])\\nprint(y_test.value_counts()/y_test.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"d3a63656-d9e4-4200-80a2-ff1e529262ab","name":"Averages for input","code":"print(X_train.idade.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"501b8112-a010-4f1a-9bed-41508f2b1acb","name":"Engineer Drop and Preprocess","code":"df_trat = X_train\\n\\ny_trat = y_train.loc[df_trat.index]\\n\\ndf_eng = feature_engineering(df_trat)\\n\\ndf_trat_drop = drop_turnover(df_eng)\\n\\ndf_preprocess = preprocess_turnover(df_trat_drop)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"953422cc-3fb0-4601-952c-2840da505de3","name":"Engineer info","code":"print(df_preprocess.columns)\\nprint(df_preprocess.shape)\\nprint(y_trat.shape)\\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\\nprint(df_preprocess.isnull().sum())\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"719aa0e4-d5ec-44f6-a6c2-79117c96874e","name":"Scaling fit","code":"Scaler = MinMaxScaler((0,1))\\nScaler.fit(df_preprocess)\\ndump(Scaler, open(\'Scaler.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"#FAFF00","comments":[],"diskcache":false}},{"id":"a7324ce3-3533-4319-82d0-3360324d7249","name":"Hashing High Cardinality test","code":"from sklearn.feature_extraction import FeatureHasher\\n\\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])\\n\\nscores = pd.DataFrame()\\n\\nfrom tqdm.notebook import tqdm\\n\\nfor i in tqdm(range(3,50)):\\n\\n    n_features = i\\n\\n    hashf = FeatureHasher(n_features=n_features,  input_type=\'string\')\\n\\n    funcao_cols = [\'funcao_\'+str(i) for i in range(n_features)]\\n\\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\\n\\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\n    model.fit(train_hash, y_trat)\\n    \\n    score = useful_metrics(test_hash, y_test, model)\\n    \\n    score[\'cols\'] = i\\n    \\n    scores = pd.concat([scores, score])\\n    ","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a3fde54e-894a-488e-a629-25ac13ec53e0","name":"Scaling transform","code":"Scaler = load(open(\'Scaler.pkl\', \'rb\'))\\nfeature = df_preprocess.columns.tolist()\\nscaled_df = df_preprocess\\nscaled_df = scale_dataset(df_preprocess, feature, None)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"825318b2-890f-4cd9-984b-5d282130a117","name":"Custom Tool analysis","code":"df_preprocess_analysis = scaled_df.copy()\\ndf_preprocess_analysis[\'desligado\'] = y_train\\n\\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\\n\\ncols = aval.col_missing()\\n\\ncard = aval.cardinality()\\n\\nrws = aval.row_missing()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"04b793a6-4c8e-4598-828a-62fa4903b5bb","name":"Row evaluation","code":"print(rws[rws > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"c649590d-5e04-47b6-8889-a0bd2901b1ba","name":"Column evaluation","code":"print(cols[cols > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"71269304-ddf9-4591-a4d0-c45357dfb043","name":"Feature Selection run","code":"algorithms = [chi2, f_classif, mutual_info_classif]\\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","name":"Feature Selection results","code":"features = selection.columns.tolist()\\nfeatures.remove(\'Total_points\')\\nKbest_eval = selection.groupby(\'Columns\').sum()[\'Total_points\'].sort_values(ascending=False) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"3c5a1393-9b6d-4206-83ff-660448ee4528","name":"Dropping redundant features","code":"Kbest_eval[(Kbest_eval.index != \'agrup_salario\') & (Kbest_eval.index != \'tempo_de_casa\') & (Kbest_eval.index != \'ord_faixa_etaria\')][:Kbest_eval.shape[0]//2].index.tolist()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"11d639e9-9f16-4840-9ca2-932561027791","name":"Features selected and save","code":"# Tempo de casa redundante com ord_faixa_tempo_casa\\nfeature_final = [\'VP_descricao_VICEPRESIDENCIADEOPERACOES\',\\n \'tipo_filial_DIGITAL\',\\n \'VP_descricao_VICEPRESIDENCIADEMERCADO\',\\n \'tipo_filial_UNDERGRADUATE\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS\',\\n \'salario\',\\n \'ord_faixa_tempo_casa\',\\n \'idade\',\\n \'cotapcd\',\\n \'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS\',\\n \'VP_descricao_VICEPRESIDENCIADEMARKETING\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA\',\\n \'genero_Masculino\',\\n \'genero_Feminino\']\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"68316262-8a81-4e81-8305-99a17550bfcc","name":"Final features","code":"#feature_final = load(open(\'feature_selection.pkl\', \'rb\'))\\nfeature_final = [x for x in scaled_df]\\n\\n# Comment if feature selection was used\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))\\n\\n#feature_final.remove(\'escolaridade_classificao\')\\nX_train_final = scaled_df[feature_final]","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"616712eb-bc91-4af4-9b97-9bf57d3df147","name":"Models init overfit eval","code":"lr = LogisticRegression(max_iter=10000)\\nlgbm = LGBMClassifier()\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\ncat = CatBoostClassifier(silent=True)\\next = ExtraTreesClassifier()\\ngnb = GaussianNB()\\n\\n\\nmodels = {\'Logistic Regression\': lr,\\n          \'LGBM\': lgbm,\\n          \'XGBoost\': xgb,\\n          \'CatBoost | Default\': cat,\\n          \'Gaussian NB\': gnb,\\n          \'Extra trees | Default\': ExtraTreesClassifier(),\\n          \'Extra trees | balanced \': ExtraTreesClassifier(class_weight=\'balanced\'), # noqa E501\\n          \'Extra trees | balanced_subsample\': ExtraTreesClassifier(class_weight=\'balanced_subsample\'), # noqa E501\\n          \'Random Forest | Default\': RandomForestClassifier()}\\n\\nfor a in range(5, 2, -1):\\n    models[\'Random Forest - Max_depth:\'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\\n\\ndepth = [3]\\nrs = [0.5]\\nparams_list=[ depth, rs ]\\n\\nfor depth_at, rs_at in list(itertools.product(*params_list)):\\n    models[\'CatBoostClassifier | Early_Stopping:4\'+\' | depth:\'+str(depth_at)+\' | strength:\'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","name":"One model test","code":"models_1 = {\'Random Forest - Default\': RandomForestClassifier()}","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","name":"Test results","code":"test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\\ntest_results = test.overfit(metrics.f1_score)\\ntest_results","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"b2b08397-d1fa-49bb-b121-6d2fbd86f821","name":"Test results chart","code":"fig = px.line(test_results, x=\\"Sample\\", y=\\"f1_score\\", color=\\"Dataset\\", facet_col=\\"Model\\", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\\nfig.show()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"dac101ac-b57e-445a-8101-b90e36ac28f7","name":"All models run F1 score","code":"All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"60fd0370-09a6-49e3-abdf-9c29067c6754","name":"F1 Score","code":"pivot_f1 = All_models_results_f1.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'f1_score\') # noqa E501\\npivot_f1[\'Overfit\'] = abs(pivot_f1[\'Test\']-pivot_f1[\'Train\'])\\npivot_f1 = pivot_f1.groupby([\'Model\'])[[\'Overfit\', \'Test\']].mean().sort_values([\'Overfit\']) # noqa E501\\npivot_f1[pivot_f1.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","name":"All models run recall score","code":"All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf","name":"Recall score","code":"pivot_recall = All_models_results_recall.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'recall_score\') # noqa E501\\npivot_recall[\'Overfit\'] = abs(pivot_recall[\'Test\']-pivot_recall[\'Train\'])\\npivot_recall = pivot_recall.groupby(\'Model\')[\'Overfit\', \'Test\'].mean().sort_values(\'Overfit\') # noqa E501\\npivot_recall[pivot_recall.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","name":"All models run precision score","code":"All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"2873ca00-5d55-4437-9f3d-1c723e51a070","name":"Precision score","code":"pivot_precision = All_models_results_precision.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'precision_score\') # noqa E501\\npivot_precision[\'Overfit\'] = abs(pivot_precision[\'Test\']-pivot_precision[\'Train\'])\\npivot_precision = pivot_precision.groupby(\'Model\')[[\'Overfit\', \'Test\']].mean().sort_values(\'Overfit\') # noqa E501\\npivot_precision[pivot_precision.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"180c9593-1123-4208-aa33-b2bf9c86b1e8","name":"Prepare X_test dataset","code":"X_test_final = final_transformation(X_test, feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","name":"Wrap up final datasets","code":"X_train_final, y_train_final = X_train_final, y_trat","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c969afb6-beca-462c-994b-3711f45b9725","name":"Check shapes","code":"print(X_train_final.shape)\\nprint(y_train_final.shape)\\nprint(X_test_final.shape)\\nprint(y_test.shape)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","name":"Metrics function","code":"def useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"10188aaf-83cc-4fcb-afe3-d7520346a34a","name":"Chosen model baseline","code":"gnb = GaussianNB()\\ngnb.fit(X_train_final, y_train_final)\\n\\ncat = CatBoostClassifier(silent=True)\\ncat.fit(X_train_final, y_train_final)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\nmodels = [gnb, cat, xgb]\\n\\nfor model in models:\\n\\n    print(model.__class__.__name__)\\n\\n    model.fit(X_train_final, y_train_final)\\n\\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\\n                         y_test, model))\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a878d86e-3707-49be-bb85-3a5c0cbe3972","name":"Optuna dataset","code":"X_optuna = pd.concat([X_train_final, X_test_final])\\ny_optuna = pd.concat([y_train_final, y_test])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"d5742407-e18a-4185-a945-f5ac11dcb854","name":"Optuna function Gaussian","code":"\\nsequence = [ ]\\nfor i in range(-9, 1):\\n    sequence.append(10**i)\\n\\ndef objective_gnb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'var_smoothing\': trial.suggest_categorical(\'var_smoothing\', sequence)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = GaussianNB(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","name":"Optuna function LR","code":"def objective_lr(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'max_iter\':10000\\n    }\\n    \\n    oversample_grid = {\\n        \'sampling_strategy\': trial.suggest_float(\'sampling_strategy\',0.5,1.0,step=0.01)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = LogisticRegression(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n    \\n    over_under = ADASYN(**oversample_grid)\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n        \\n        X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2ff29722-5176-486b-8ec0-7b138fbe2c05","name":"Optuna Run LR","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_lr, n_trials=100)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4","name":"Optuna Results LR","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","name":"Optuna function XGB","code":"def objective_xgb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n\\n    model_grid = {\\n        # Prevent Overfit\\n        \'max_depth\': trial.suggest_int(\'max_depth\', 3, 7, step=1),\\n        \'min_child_weight\': trial.suggest_int(\'min_child_weight\', 1, 7, step=1),\\n        \'gamma\': trial.suggest_int(\'gamma\', 0, 7, step=1),\\n        # Imbalanced dataset\\n        \'max_delta_step\': trial.suggest_int(\'max_delta_step\', 0, 10, step=1)\\n    }\\n\\n    param_grid = {\\n        \'threshold\': trial.suggest_float(\'threshold\', 0.2, 1.0, step=0.01)\\n    }\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n\\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation, evaluation])\\n\\n    return(F_evaluation.f1_score.std(),\\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\\n           F_evaluation.recall_score.mean(),\\n           F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","name":"Optuna Run XGB","code":"study = optuna.create_study(directions=[\'minimize\', \'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_xgb, n_trials=50)\\n\\nduration = 2000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c8443305-4d7a-4455-9492-a7aeaaff5e07","name":"Optuna Results XGB","code":"metrics_name = [\'std_F1\',\'F1\', \'Precision\', \'Recall\', \'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n\\n    for metric, value in zip(metrics_name, trial.values):\\n\\n        try_1[metric] = value\\n\\n    try_1[\'Params\'] = str(trial.params)\\n\\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n\\n    tries = tries[tries.Precision > 0]\\n\\nbest_params = tries.sort_values([\'std_F1\', \'Precision\',\'F1\',\'Brier\'], ascending= [True, False, True, False]).head(100)\\n\\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","name":"Optuna run Gaussian","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_gnb, n_trials=200)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"05f7e787-a336-4342-b603-78809382262e","name":"Optuna results","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d7fdb49f-1502-43d4-87ef-e452da6ecf74","name":"Top 20 results optuna","code":"tries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","name":"Final model params","code":"params = {\'max_depth\': 6, \'min_child_weight\': 4, \'gamma\': 1, \'max_delta_step\': 10}\\n\\nthreshold = 0.52\\n\\ngnb = GaussianNB()\\n\\nlr = LogisticRegression(max_iter=10000)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\\n\\nover_under = ADASYN(sampling_strategy=0.64)\\n\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac","name":"Yellowbricks threshold","code":"from yellowbrick.classifier import DiscriminationThreshold\\n\\n\\n# Instantiate the classification model and visualizer\\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\\nvisualizer = DiscriminationThreshold(model)\\n\\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\\nvisualizer.show()           # Finalize and render the figure","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","name":"Final model stats","code":"X_dataset, y_dataset = X_optuna, y_optuna\\n\\nmodel = xgb\\n\\nevaluation = pd.DataFrame()\\n\\nassertiveness = pd.DataFrame()\\n\\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\\n\\ncount = 0\\n\\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\\n\\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\\n        \\n        #Exclude if no oversample\\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train,y_train)\\n\\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\\n        \\n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\\n        \\n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\\n        \\n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\\n        \\n\\n        count+=1\\n        \\n        print(\\"Shuffle \\" + str(count), end = \\"\\\\r\\")\\n        \\nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\n        \\ngrouped_stats = assertiveness.groupby(\'index\').agg(\\n        avg_correct_percent =(\'correct\', \'mean\'),\\n        avg_precision = (\'precision\', np.nanmean),\\n        avg_recall = (\'recall\', np.nanmean),\\n        std = (\'brier\', np.std),\\n        brier = (\'brier\', np.mean),\\n        count = (\'brier\', \'count\')\\n        )\\n        \\nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\\n\\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"1dd18a01-147a-489b-941e-867a5fc7389b","name":"Stats visualization","code":"duration = 1000  # milliseconds\\nfreq = 440# Hz\\nwinsound.Beep(freq, duration)\\nax = sns.boxplot(x=\'variable\', y=\'value\', data=pd.melt(evaluation))\\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"7122c816-b17e-4185-9c99-0fc03101be5b","name":"Prepare X_holdout dataset","code":"X_holdout_final = final_transformation(X_holdout,feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","name":"Final Results","code":"xgb.fit(X_optuna, y_optuna)\\n\\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\\n\\nconfusion_matrix = metrics.confusion_matrix(\\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\\n\\ntn, fp, fn, tp = confusion_matrix.ravel()\\nspecificity = tn / (tn+fp)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b54670b-7be3-4478-a89c-0fb50685bba2","name":"Confusion Matrix","code":"cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\\n\\ncm_display.plot()\\nplt.grid(False)\\nplt.show()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","name":"Laymans Results","code":"print(f\\"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\\\n\\")\\n\\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\\n\\nprint(\'\\\\nExcelente notícia!!!!\')\\n\\n\\n\\nduration = 1000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca","name":"Save Model","code":"dump(xgb, open(\'turnover_general_model.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}}],"edges":[{"parent":"74e47343-3dbf-44f8-8228-e584f90a0e16","child":"df37f106-a4ff-49cb-9f22-c550f0812b37"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"651d005e-5f45-4ca8-96ed-50c5783a308d"},{"parent":"651d005e-5f45-4ca8-96ed-50c5783a308d","child":"d695fd5d-fedd-440a-933a-e6b09ae9902b"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"4dabbcf4-809d-4903-8e32-26279499c336"},{"parent":"4dabbcf4-809d-4903-8e32-26279499c336","child":"ce04c155-4800-4dae-9253-501682182090"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"d3a63656-d9e4-4200-80a2-ff1e529262ab"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"501b8112-a010-4f1a-9bed-41508f2b1acb"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"953422cc-3fb0-4601-952c-2840da505de3"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"953422cc-3fb0-4601-952c-2840da505de3","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a7324ce3-3533-4319-82d0-3360324d7249"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a3fde54e-894a-488e-a629-25ac13ec53e0"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"825318b2-890f-4cd9-984b-5d282130a117"},{"parent":"825318b2-890f-4cd9-984b-5d282130a117","child":"04b793a6-4c8e-4598-828a-62fa4903b5bb"},{"parent":"04b793a6-4c8e-4598-828a-62fa4903b5bb","child":"c649590d-5e04-47b6-8889-a0bd2901b1ba"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"71269304-ddf9-4591-a4d0-c45357dfb043"},{"parent":"71269304-ddf9-4591-a4d0-c45357dfb043","child":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f"},{"parent":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","child":"3c5a1393-9b6d-4206-83ff-660448ee4528"},{"parent":"3c5a1393-9b6d-4206-83ff-660448ee4528","child":"11d639e9-9f16-4840-9ca2-932561027791"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"68316262-8a81-4e81-8305-99a17550bfcc"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"616712eb-bc91-4af4-9b97-9bf57d3df147"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4"},{"parent":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","child":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb"},{"parent":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","child":"b2b08397-d1fa-49bb-b121-6d2fbd86f821"},{"parent":"616712eb-bc91-4af4-9b97-9bf57d3df147","child":"dac101ac-b57e-445a-8101-b90e36ac28f7"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"60fd0370-09a6-49e3-abdf-9c29067c6754"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288"},{"parent":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","child":"2873ca00-5d55-4437-9f3d-1c723e51a070"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"180c9593-1123-4208-aa33-b2bf9c86b1e8","child":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"c969afb6-beca-462c-994b-3711f45b9725"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"16da288a-1d46-4d2f-96e9-b9e59c5505f3"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"10188aaf-83cc-4fcb-afe3-d7520346a34a"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"a878d86e-3707-49be-bb85-3a5c0cbe3972"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"d5742407-e18a-4185-a945-f5ac11dcb854"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175"},{"parent":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","child":"2ff29722-5176-486b-8ec0-7b138fbe2c05"},{"parent":"2ff29722-5176-486b-8ec0-7b138fbe2c05","child":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"8f560d16-8a82-4a85-821e-0a6dbf399eaf"},{"parent":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","child":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0"},{"parent":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","child":"c8443305-4d7a-4455-9492-a7aeaaff5e07"},{"parent":"d5742407-e18a-4185-a945-f5ac11dcb854","child":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257"},{"parent":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","child":"05f7e787-a336-4342-b603-78809382262e"},{"parent":"05f7e787-a336-4342-b603-78809382262e","child":"d7fdb49f-1502-43d4-87ef-e452da6ecf74"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d"},{"parent":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","child":"1dd18a01-147a-489b-941e-867a5fc7389b"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"7122c816-b17e-4185-9c99-0fc03101be5b","child":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0"},{"parent":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","child":"2b54670b-7be3-4478-a89c-0fb50685bba2"},{"parent":"2b54670b-7be3-4478-a89c-0fb50685bba2","child":"4b0268ef-ea00-4441-a8ad-58cdb5372c28"},{"parent":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","child":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca"}]}\n')
[2022-12-07 17:08:58] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: graph: {'nodes': [{'id': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'name': 'Import libs', 'code': 'import pandas as pd\nimport numpy as np\nfrom pickle import dump, load\nimport itertools\nimport winsound\n\nimport Custom_Tools\nfrom sksurv.nonparametric import kaplan_meier_estimator\nfrom target_definition import target_definition\nfrom feature_engineering import feature_engineering\nfrom drop_turnover import drop_turnover\nfrom preprocess_turnover import preprocess_turnover\nfrom scale_dataset import scale_dataset\nfrom final_transformation import final_transformation\nfrom population_filter import population_filter\n\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\n\n\nfrom imblearn.over_sampling import ADASYN\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics\n\n\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport optuna', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'name': 'First dataset', 'code': "df = pd.read_excel('C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/'\n                   'Python/Análise_Headcount.xlsx')\n\n'''\nAdicionar tipo de função (Gestor, não gestor)\nFeature Hashing - funcao_descricao, codsecao\nSalário, méritos e promoções\nPulses\n\nfilial_descricao não vai entrar porque codsecao pega filial e área.\n'''", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'name': 'Survival analysis preparation', 'code': "df_surv = feature_engineering(target_definition(df, 'tipo_colaborador', 'CLT'))\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\ndf_surv.loc[df_surv.tipo_função == 'Docente','tipo_filial'] = 'DOCENTE'", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd695fd5d-fedd-440a-933a-e6b09ae9902b', 'name': 'Generate plots', 'code': 'data_x = df_surv.copy()\n\ndata_y = df_surv.desligado==1\n\nsurv_days = data_x.tempo_de_casa\n\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\n\nfor i in analyze:\n\n    analisar = i\n\n    plt.figure(figsize=(12, 12), dpi=80)\n\n    for value in data_x[analisar].unique():\n        mask = data_x[analisar] == value\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\n                                                               surv_days[mask])\n        plt.step(time_cell, survival_prob_cell, where="post",\n                 label="%s (n = %d)" % (value, mask.sum()));\n\n    plt.ylabel("est. probability of survival $\\hat{S}(t)$")\n    plt.xlabel("Months")\n    plt.legend(loc="best");\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4dabbcf4-809d-4903-8e32-26279499c336', 'name': 'Target definition', 'code': "df_alvo = target_definition(df, 'tipo_colaborador', 'CLT')\n\ndf_alvo = population_filter(df_alvo)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'ce04c155-4800-4dae-9253-501682182090', 'name': 'Holdout', 'code': "X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop(['desligado'], axis=1), df_alvo['desligado'], test_size=0.1, random_state=42, stratify=df_alvo['desligado']) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64', 'name': 'Check proportions Holdout', 'code': 'print(y.value_counts()/y.shape[0])\nprint(y_holdout.value_counts()/y_holdout.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'name': 'Train test', 'code': 'X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3', 'name': 'Check proportion Train Test', 'code': 'print(y_train.value_counts()/y_train.shape[0])\nprint(y_test.value_counts()/y_test.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'd3a63656-d9e4-4200-80a2-ff1e529262ab', 'name': 'Averages for input', 'code': 'print(X_train.idade.mean())', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'name': 'Engineer Drop and Preprocess', 'code': 'df_trat = X_train\n\ny_trat = y_train.loc[df_trat.index]\n\ndf_eng = feature_engineering(df_trat)\n\ndf_trat_drop = drop_turnover(df_eng)\n\ndf_preprocess = preprocess_turnover(df_trat_drop)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '953422cc-3fb0-4601-952c-2840da505de3', 'name': 'Engineer info', 'code': 'print(df_preprocess.columns)\nprint(df_preprocess.shape)\nprint(y_trat.shape)\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\nprint(df_preprocess.isnull().sum())\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '719aa0e4-d5ec-44f6-a6c2-79117c96874e', 'name': 'Scaling fit', 'code': "Scaler = MinMaxScaler((0,1))\nScaler.fit(df_preprocess)\ndump(Scaler, open('Scaler.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': '#FAFF00', 'comments': [], 'diskcache': False}}, {'id': 'a7324ce3-3533-4319-82d0-3360324d7249', 'name': 'Hashing High Cardinality test', 'code': "from sklearn.feature_extraction import FeatureHasher\n\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])\n\nscores = pd.DataFrame()\n\nfrom tqdm.notebook import tqdm\n\nfor i in tqdm(range(3,50)):\n\n    n_features = i\n\n    hashf = FeatureHasher(n_features=n_features,  input_type='string')\n\n    funcao_cols = ['funcao_'+str(i) for i in range(n_features)]\n\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\n\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\n\n    model.fit(train_hash, y_trat)\n    \n    score = useful_metrics(test_hash, y_test, model)\n    \n    score['cols'] = i\n    \n    scores = pd.concat([scores, score])\n    ", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'name': 'Scaling transform', 'code': "Scaler = load(open('Scaler.pkl', 'rb'))\nfeature = df_preprocess.columns.tolist()\nscaled_df = df_preprocess\nscaled_df = scale_dataset(df_preprocess, feature, None)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '825318b2-890f-4cd9-984b-5d282130a117', 'name': 'Custom Tool analysis', 'code': "df_preprocess_analysis = scaled_df.copy()\ndf_preprocess_analysis['desligado'] = y_train\n\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\n\ncols = aval.col_missing()\n\ncard = aval.cardinality()\n\nrws = aval.row_missing()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'name': 'Row evaluation', 'code': 'print(rws[rws > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'c649590d-5e04-47b6-8889-a0bd2901b1ba', 'name': 'Column evaluation', 'code': 'print(cols[cols > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '71269304-ddf9-4591-a4d0-c45357dfb043', 'name': 'Feature Selection run', 'code': 'algorithms = [chi2, f_classif, mutual_info_classif]\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'name': 'Feature Selection results', 'code': "features = selection.columns.tolist()\nfeatures.remove('Total_points')\nKbest_eval = selection.groupby('Columns').sum()['Total_points'].sort_values(ascending=False) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'name': 'Dropping redundant features', 'code': "Kbest_eval[(Kbest_eval.index != 'agrup_salario') & (Kbest_eval.index != 'tempo_de_casa') & (Kbest_eval.index != 'ord_faixa_etaria')][:Kbest_eval.shape[0]//2].index.tolist()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '11d639e9-9f16-4840-9ca2-932561027791', 'name': 'Features selected and save', 'code': "# Tempo de casa redundante com ord_faixa_tempo_casa\nfeature_final = ['VP_descricao_VICEPRESIDENCIADEOPERACOES',\n 'tipo_filial_DIGITAL',\n 'VP_descricao_VICEPRESIDENCIADEMERCADO',\n 'tipo_filial_UNDERGRADUATE',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS',\n 'salario',\n 'ord_faixa_tempo_casa',\n 'idade',\n 'cotapcd',\n 'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS',\n 'VP_descricao_VICEPRESIDENCIADEMARKETING',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA',\n 'genero_Masculino',\n 'genero_Feminino']\ndump(feature_final, open('feature_selection.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '68316262-8a81-4e81-8305-99a17550bfcc', 'name': 'Final features', 'code': "#feature_final = load(open('feature_selection.pkl', 'rb'))\nfeature_final = [x for x in scaled_df]\n\n# Comment if feature selection was used\ndump(feature_final, open('feature_selection.pkl', 'wb'))\n\n#feature_final.remove('escolaridade_classificao')\nX_train_final = scaled_df[feature_final]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'name': 'Models init overfit eval', 'code': "lr = LogisticRegression(max_iter=10000)\nlgbm = LGBMClassifier()\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\ncat = CatBoostClassifier(silent=True)\next = ExtraTreesClassifier()\ngnb = GaussianNB()\n\n\nmodels = {'Logistic Regression': lr,\n          'LGBM': lgbm,\n          'XGBoost': xgb,\n          'CatBoost | Default': cat,\n          'Gaussian NB': gnb,\n          'Extra trees | Default': ExtraTreesClassifier(),\n          'Extra trees | balanced ': ExtraTreesClassifier(class_weight='balanced'), # noqa E501\n          'Extra trees | balanced_subsample': ExtraTreesClassifier(class_weight='balanced_subsample'), # noqa E501\n          'Random Forest | Default': RandomForestClassifier()}\n\nfor a in range(5, 2, -1):\n    models['Random Forest - Max_depth:'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\n\ndepth = [3]\nrs = [0.5]\nparams_list=[ depth, rs ]\n\nfor depth_at, rs_at in list(itertools.product(*params_list)):\n    models['CatBoostClassifier | Early_Stopping:4'+' | depth:'+str(depth_at)+' | strength:'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'name': 'One model test', 'code': "models_1 = {'Random Forest - Default': RandomForestClassifier()}", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'name': 'Test results', 'code': 'test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\ntest_results = test.overfit(metrics.f1_score)\ntest_results', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821', 'name': 'Test results chart', 'code': 'fig = px.line(test_results, x="Sample", y="f1_score", color="Dataset", facet_col="Model", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\nfig.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'name': 'All models run F1 score', 'code': 'All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '60fd0370-09a6-49e3-abdf-9c29067c6754', 'name': 'F1 Score', 'code': "pivot_f1 = All_models_results_f1.pivot(index=['Sample', 'Model'], columns='Dataset', values='f1_score') # noqa E501\npivot_f1['Overfit'] = abs(pivot_f1['Test']-pivot_f1['Train'])\npivot_f1 = pivot_f1.groupby(['Model'])[['Overfit', 'Test']].mean().sort_values(['Overfit']) # noqa E501\npivot_f1[pivot_f1.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'name': 'All models run recall score', 'code': 'All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf', 'name': 'Recall score', 'code': "pivot_recall = All_models_results_recall.pivot(index=['Sample', 'Model'], columns='Dataset', values='recall_score') # noqa E501\npivot_recall['Overfit'] = abs(pivot_recall['Test']-pivot_recall['Train'])\npivot_recall = pivot_recall.groupby('Model')['Overfit', 'Test'].mean().sort_values('Overfit') # noqa E501\npivot_recall[pivot_recall.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'name': 'All models run precision score', 'code': 'All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '2873ca00-5d55-4437-9f3d-1c723e51a070', 'name': 'Precision score', 'code': "pivot_precision = All_models_results_precision.pivot(index=['Sample', 'Model'], columns='Dataset', values='precision_score') # noqa E501\npivot_precision['Overfit'] = abs(pivot_precision['Test']-pivot_precision['Train'])\npivot_precision = pivot_precision.groupby('Model')[['Overfit', 'Test']].mean().sort_values('Overfit') # noqa E501\npivot_precision[pivot_precision.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'name': 'Prepare X_test dataset', 'code': "X_test_final = final_transformation(X_test, feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'name': 'Wrap up final datasets', 'code': 'X_train_final, y_train_final = X_train_final, y_trat', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c969afb6-beca-462c-994b-3711f45b9725', 'name': 'Check shapes', 'code': 'print(X_train_final.shape)\nprint(y_train_final.shape)\nprint(X_test_final.shape)\nprint(y_test.shape)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'name': 'Metrics function', 'code': "def useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '10188aaf-83cc-4fcb-afe3-d7520346a34a', 'name': 'Chosen model baseline', 'code': 'gnb = GaussianNB()\ngnb.fit(X_train_final, y_train_final)\n\ncat = CatBoostClassifier(silent=True)\ncat.fit(X_train_final, y_train_final)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\n\nmodels = [gnb, cat, xgb]\n\nfor model in models:\n\n    print(model.__class__.__name__)\n\n    model.fit(X_train_final, y_train_final)\n\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\n                         y_test, model))\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'name': 'Optuna dataset', 'code': 'X_optuna = pd.concat([X_train_final, X_test_final])\ny_optuna = pd.concat([y_train_final, y_test])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'name': 'Optuna function Gaussian', 'code': "\nsequence = [ ]\nfor i in range(-9, 1):\n    sequence.append(10**i)\n\ndef objective_gnb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'var_smoothing': trial.suggest_categorical('var_smoothing', sequence)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = GaussianNB(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'name': 'Optuna function LR', 'code': "def objective_lr(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'max_iter':10000\n    }\n    \n    oversample_grid = {\n        'sampling_strategy': trial.suggest_float('sampling_strategy',0.5,1.0,step=0.01)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = LogisticRegression(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n    \n    over_under = ADASYN(**oversample_grid)\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n        \n        X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'name': 'Optuna Run LR', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_lr, n_trials=100)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4', 'name': 'Optuna Results LR', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'name': 'Optuna function XGB', 'code': "def objective_xgb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n\n    model_grid = {\n        # Prevent Overfit\n        'max_depth': trial.suggest_int('max_depth', 3, 7, step=1),\n        'min_child_weight': trial.suggest_int('min_child_weight', 1, 7, step=1),\n        'gamma': trial.suggest_int('gamma', 0, 7, step=1),\n        # Imbalanced dataset\n        'max_delta_step': trial.suggest_int('max_delta_step', 0, 10, step=1)\n    }\n\n    param_grid = {\n        'threshold': trial.suggest_float('threshold', 0.2, 1.0, step=0.01)\n    }\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation, evaluation])\n\n    return(F_evaluation.f1_score.std(),\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\n           F_evaluation.recall_score.mean(),\n           F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'name': 'Optuna Run XGB', 'code': "study = optuna.create_study(directions=['minimize', 'maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_xgb, n_trials=50)\n\nduration = 2000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c8443305-4d7a-4455-9492-a7aeaaff5e07', 'name': 'Optuna Results XGB', 'code': "metrics_name = ['std_F1','F1', 'Precision', 'Recall', 'Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n\n    for metric, value in zip(metrics_name, trial.values):\n\n        try_1[metric] = value\n\n    try_1['Params'] = str(trial.params)\n\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n\n    tries = tries[tries.Precision > 0]\n\nbest_params = tries.sort_values(['std_F1', 'Precision','F1','Brier'], ascending= [True, False, True, False]).head(100)\n\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'name': 'Optuna run Gaussian', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_gnb, n_trials=200)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '05f7e787-a336-4342-b603-78809382262e', 'name': 'Optuna results', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74', 'name': 'Top 20 results optuna', 'code': "tries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'name': 'Final model params', 'code': "params = {'max_depth': 6, 'min_child_weight': 4, 'gamma': 1, 'max_delta_step': 10}\n\nthreshold = 0.52\n\ngnb = GaussianNB()\n\nlr = LogisticRegression(max_iter=10000)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\n\nover_under = ADASYN(sampling_strategy=0.64)\n\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac', 'name': 'Yellowbricks threshold', 'code': 'from yellowbrick.classifier import DiscriminationThreshold\n\n\n# Instantiate the classification model and visualizer\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\nvisualizer = DiscriminationThreshold(model)\n\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\nvisualizer.show()           # Finalize and render the figure', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'name': 'Final model stats', 'code': 'X_dataset, y_dataset = X_optuna, y_optuna\n\nmodel = xgb\n\nevaluation = pd.DataFrame()\n\nassertiveness = pd.DataFrame()\n\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\n\ncount = 0\n\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\n\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\n        \n        #Exclude if no oversample\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train,y_train)\n\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\n        \n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\n        \n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\n        \n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\n        \n\n        count+=1\n        \n        print("Shuffle " + str(count), end = "\\r")\n        \nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\n        \ngrouped_stats = assertiveness.groupby(\'index\').agg(\n        avg_correct_percent =(\'correct\', \'mean\'),\n        avg_precision = (\'precision\', np.nanmean),\n        avg_recall = (\'recall\', np.nanmean),\n        std = (\'brier\', np.std),\n        brier = (\'brier\', np.mean),\n        count = (\'brier\', \'count\')\n        )\n        \nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\n\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '1dd18a01-147a-489b-941e-867a5fc7389b', 'name': 'Stats visualization', 'code': "duration = 1000  # milliseconds\nfreq = 440# Hz\nwinsound.Beep(freq, duration)\nax = sns.boxplot(x='variable', y='value', data=pd.melt(evaluation))\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '7122c816-b17e-4185-9c99-0fc03101be5b', 'name': 'Prepare X_holdout dataset', 'code': "X_holdout_final = final_transformation(X_holdout,feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'name': 'Final Results', 'code': 'xgb.fit(X_optuna, y_optuna)\n\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\n\nconfusion_matrix = metrics.confusion_matrix(\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\n\ntn, fp, fn, tp = confusion_matrix.ravel()\nspecificity = tn / (tn+fp)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'name': 'Confusion Matrix', 'code': 'cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\n\ncm_display.plot()\nplt.grid(False)\nplt.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'name': 'Laymans Results', 'code': 'print(f"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\n")\n\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\n\nprint(\'\\nExcelente notícia!!!!\')\n\n\n\nduration = 1000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca', 'name': 'Save Model', 'code': "dump(xgb, open('turnover_general_model.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}], 'edges': [{'parent': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'child': 'df37f106-a4ff-49cb-9f22-c550f0812b37'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '651d005e-5f45-4ca8-96ed-50c5783a308d'}, {'parent': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'child': 'd695fd5d-fedd-440a-933a-e6b09ae9902b'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '4dabbcf4-809d-4903-8e32-26279499c336'}, {'parent': '4dabbcf4-809d-4903-8e32-26279499c336', 'child': 'ce04c155-4800-4dae-9253-501682182090'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': 'd3a63656-d9e4-4200-80a2-ff1e529262ab'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '501b8112-a010-4f1a-9bed-41508f2b1acb'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '953422cc-3fb0-4601-952c-2840da505de3'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '953422cc-3fb0-4601-952c-2840da505de3', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a7324ce3-3533-4319-82d0-3360324d7249'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a3fde54e-894a-488e-a629-25ac13ec53e0'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '825318b2-890f-4cd9-984b-5d282130a117'}, {'parent': '825318b2-890f-4cd9-984b-5d282130a117', 'child': '04b793a6-4c8e-4598-828a-62fa4903b5bb'}, {'parent': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'child': 'c649590d-5e04-47b6-8889-a0bd2901b1ba'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '71269304-ddf9-4591-a4d0-c45357dfb043'}, {'parent': '71269304-ddf9-4591-a4d0-c45357dfb043', 'child': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f'}, {'parent': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'child': '3c5a1393-9b6d-4206-83ff-660448ee4528'}, {'parent': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'child': '11d639e9-9f16-4840-9ca2-932561027791'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '68316262-8a81-4e81-8305-99a17550bfcc'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '616712eb-bc91-4af4-9b97-9bf57d3df147'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4'}, {'parent': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'child': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb'}, {'parent': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'child': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821'}, {'parent': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'child': 'dac101ac-b57e-445a-8101-b90e36ac28f7'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '60fd0370-09a6-49e3-abdf-9c29067c6754'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288'}, {'parent': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'child': '2873ca00-5d55-4437-9f3d-1c723e51a070'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'child': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': 'c969afb6-beca-462c-994b-3711f45b9725'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': '16da288a-1d46-4d2f-96e9-b9e59c5505f3'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': '10188aaf-83cc-4fcb-afe3-d7520346a34a'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': 'a878d86e-3707-49be-bb85-3a5c0cbe3972'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': 'd5742407-e18a-4185-a945-f5ac11dcb854'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175'}, {'parent': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'child': '2ff29722-5176-486b-8ec0-7b138fbe2c05'}, {'parent': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'child': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '8f560d16-8a82-4a85-821e-0a6dbf399eaf'}, {'parent': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'child': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0'}, {'parent': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'child': 'c8443305-4d7a-4455-9492-a7aeaaff5e07'}, {'parent': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'child': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257'}, {'parent': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'child': '05f7e787-a336-4342-b603-78809382262e'}, {'parent': '05f7e787-a336-4342-b603-78809382262e', 'child': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d'}, {'parent': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'child': '1dd18a01-147a-489b-941e-867a5fc7389b'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': '7122c816-b17e-4185-9c99-0fc03101be5b', 'child': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0'}, {'parent': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'child': '2b54670b-7be3-4478-a89c-0fb50685bba2'}, {'parent': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'child': '4b0268ef-ea00-4441-a8ad-58cdb5372c28'}, {'parent': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'child': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca'}]}
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Import libs (74e47343-3dbf-44f8-8228-e584f90a0e16), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:08:58] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:20] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: args: Namespace(base_url='http://localhost:8888/', header='Accept-Encoding=gzip,%20deflate,%20br;Host=localhost:8888;%20Authorization=token%2028f6151ce9fbd73f4964bf998f83d5913e6655dbb33ebbe0', cookie='_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20_ga=GA1.1.1642067376.1666625473;%20ajs_user_id=%252243c7a417-9a26-561d-83d1-4878f0593861%2522;%20ajs_anonymous_id=%25223622454d-fe44-4982-ba26-7345955de1ec%2522;%20_xsrf=2%7C648014bf%7Cff0ead510a319c89e2f47b4952c4d334%7C1670441617;%20_ga_R3VN4GNEX2=GS1.1.1670441622.53.1.1670443540.0.0.0;%20username-localhost-8888=2%7C1:0%7C10:1670443753%7C23:username-localhost-8888%7C44:ODdmZmEyYWJmYTNjNDc4NWFhYzRhYWM3YzYyOWU4MTc=%7C752dd5d13ed9b3b7d89fd24664140e023c0e8e220aec8e30361243335605fedf', cell='{"nodes":[{"id":"74e47343-3dbf-44f8-8228-e584f90a0e16","name":"Import libs","code":"import pandas as pd\\nimport numpy as np\\nfrom pickle import dump, load\\nimport itertools\\nimport winsound\\n\\nimport Custom_Tools\\nfrom sksurv.nonparametric import kaplan_meier_estimator\\nfrom target_definition import target_definition\\nfrom feature_engineering import feature_engineering\\nfrom drop_turnover import drop_turnover\\nfrom preprocess_turnover import preprocess_turnover\\nfrom scale_dataset import scale_dataset\\nfrom final_transformation import final_transformation\\nfrom population_filter import population_filter\\n\\n\\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\\nfrom sklearn.preprocessing import MinMaxScaler\\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\\n\\n\\nfrom imblearn.over_sampling import ADASYN\\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\\nfrom sklearn.linear_model import LogisticRegression\\nfrom lightgbm import LGBMClassifier\\nfrom xgboost import XGBClassifier\\nfrom catboost import CatBoostClassifier\\nfrom sklearn.naive_bayes import GaussianNB\\nfrom sklearn import metrics\\n\\n\\nimport plotly.express as px\\nimport seaborn as sns\\nimport matplotlib.pyplot as plt\\n\\n\\nimport optuna","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"df37f106-a4ff-49cb-9f22-c550f0812b37","name":"First dataset","code":"df = pd.read_excel(\'C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/\'\\n                   \'Python/Análise_Headcount.xlsx\')\\n\\n\'\'\'\\nAdicionar tipo de função (Gestor, não gestor)\\nFeature Hashing - funcao_descricao, codsecao\\nSalário, méritos e promoções\\nPulses\\n\\nfilial_descricao não vai entrar porque codsecao pega filial e área.\\n\'\'\'","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"651d005e-5f45-4ca8-96ed-50c5783a308d","name":"Survival analysis preparation","code":"df_surv = feature_engineering(target_definition(df, \'tipo_colaborador\', \'CLT\'))\\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\\ndf_surv.loc[df_surv.tipo_função == \'Docente\',\'tipo_filial\'] = \'DOCENTE\'","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d695fd5d-fedd-440a-933a-e6b09ae9902b","name":"Generate plots","code":"data_x = df_surv.copy()\\n\\ndata_y = df_surv.desligado==1\\n\\nsurv_days = data_x.tempo_de_casa\\n\\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\\n\\nfor i in analyze:\\n\\n    analisar = i\\n\\n    plt.figure(figsize=(12, 12), dpi=80)\\n\\n    for value in data_x[analisar].unique():\\n        mask = data_x[analisar] == value\\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\\n                                                               surv_days[mask])\\n        plt.step(time_cell, survival_prob_cell, where=\\"post\\",\\n                 label=\\"%s (n = %d)\\" % (value, mask.sum()));\\n\\n    plt.ylabel(\\"est. probability of survival $\\\\hat{S}(t)$\\")\\n    plt.xlabel(\\"Months\\")\\n    plt.legend(loc=\\"best\\");\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4dabbcf4-809d-4903-8e32-26279499c336","name":"Target definition","code":"df_alvo = target_definition(df, \'tipo_colaborador\', \'CLT\')\\n\\ndf_alvo = population_filter(df_alvo)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"ce04c155-4800-4dae-9253-501682182090","name":"Holdout","code":"X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop([\'desligado\'], axis=1), df_alvo[\'desligado\'], test_size=0.1, random_state=42, stratify=df_alvo[\'desligado\']) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64","name":"Check proportions Holdout","code":"print(y.value_counts()/y.shape[0])\\nprint(y_holdout.value_counts()/y_holdout.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","name":"Train test","code":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3","name":"Check proportion Train Test","code":"print(y_train.value_counts()/y_train.shape[0])\\nprint(y_test.value_counts()/y_test.shape[0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"d3a63656-d9e4-4200-80a2-ff1e529262ab","name":"Averages for input","code":"print(X_train.idade.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"501b8112-a010-4f1a-9bed-41508f2b1acb","name":"Engineer Drop and Preprocess","code":"df_trat = X_train\\n\\ny_trat = y_train.loc[df_trat.index]\\n\\ndf_eng = feature_engineering(df_trat)\\n\\ndf_trat_drop = drop_turnover(df_eng)\\n\\ndf_preprocess = preprocess_turnover(df_trat_drop)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"953422cc-3fb0-4601-952c-2840da505de3","name":"Engineer info","code":"print(df_preprocess.columns)\\nprint(df_preprocess.shape)\\nprint(y_trat.shape)\\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\\nprint(df_preprocess.isnull().sum())\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"719aa0e4-d5ec-44f6-a6c2-79117c96874e","name":"Scaling fit","code":"Scaler = MinMaxScaler((0,1))\\nScaler.fit(df_preprocess)\\ndump(Scaler, open(\'Scaler.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"#FAFF00","comments":[],"diskcache":false}},{"id":"a7324ce3-3533-4319-82d0-3360324d7249","name":"Hashing High Cardinality test","code":"from sklearn.feature_extraction import FeatureHasher\\n\\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])\\n\\nscores = pd.DataFrame()\\n\\nfrom tqdm.notebook import tqdm\\n\\nfor i in tqdm(range(3,50)):\\n\\n    n_features = i\\n\\n    hashf = FeatureHasher(n_features=n_features,  input_type=\'string\')\\n\\n    funcao_cols = [\'funcao_\'+str(i) for i in range(n_features)]\\n\\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\\n\\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\n    model.fit(train_hash, y_trat)\\n    \\n    score = useful_metrics(test_hash, y_test, model)\\n    \\n    score[\'cols\'] = i\\n    \\n    scores = pd.concat([scores, score])\\n    ","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a3fde54e-894a-488e-a629-25ac13ec53e0","name":"Scaling transform","code":"Scaler = load(open(\'Scaler.pkl\', \'rb\'))\\nfeature = df_preprocess.columns.tolist()\\nscaled_df = df_preprocess\\nscaled_df = scale_dataset(df_preprocess, feature, None)","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"825318b2-890f-4cd9-984b-5d282130a117","name":"Custom Tool analysis","code":"df_preprocess_analysis = scaled_df.copy()\\ndf_preprocess_analysis[\'desligado\'] = y_train\\n\\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\\n\\ncols = aval.col_missing()\\n\\ncard = aval.cardinality()\\n\\nrws = aval.row_missing()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"04b793a6-4c8e-4598-828a-62fa4903b5bb","name":"Row evaluation","code":"print(rws[rws > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"c649590d-5e04-47b6-8889-a0bd2901b1ba","name":"Column evaluation","code":"print(cols[cols > 0])","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"71269304-ddf9-4591-a4d0-c45357dfb043","name":"Feature Selection run","code":"algorithms = [chi2, f_classif, mutual_info_classif]\\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","name":"Feature Selection results","code":"features = selection.columns.tolist()\\nfeatures.remove(\'Total_points\')\\nKbest_eval = selection.groupby(\'Columns\').sum()[\'Total_points\'].sort_values(ascending=False) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"3c5a1393-9b6d-4206-83ff-660448ee4528","name":"Dropping redundant features","code":"Kbest_eval[(Kbest_eval.index != \'agrup_salario\') & (Kbest_eval.index != \'tempo_de_casa\') & (Kbest_eval.index != \'ord_faixa_etaria\')][:Kbest_eval.shape[0]//2].index.tolist()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"11d639e9-9f16-4840-9ca2-932561027791","name":"Features selected and save","code":"# Tempo de casa redundante com ord_faixa_tempo_casa\\nfeature_final = [\'VP_descricao_VICEPRESIDENCIADEOPERACOES\',\\n \'tipo_filial_DIGITAL\',\\n \'VP_descricao_VICEPRESIDENCIADEMERCADO\',\\n \'tipo_filial_UNDERGRADUATE\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS\',\\n \'salario\',\\n \'ord_faixa_tempo_casa\',\\n \'idade\',\\n \'cotapcd\',\\n \'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS\',\\n \'VP_descricao_VICEPRESIDENCIADEMARKETING\',\\n \'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA\',\\n \'genero_Masculino\',\\n \'genero_Feminino\']\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"68316262-8a81-4e81-8305-99a17550bfcc","name":"Final features","code":"#feature_final = load(open(\'feature_selection.pkl\', \'rb\'))\\nfeature_final = [x for x in scaled_df]\\n\\n# Comment if feature selection was used\\ndump(feature_final, open(\'feature_selection.pkl\', \'wb\'))\\n\\n#feature_final.remove(\'escolaridade_classificao\')\\nX_train_final = scaled_df[feature_final]","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":true}},{"id":"616712eb-bc91-4af4-9b97-9bf57d3df147","name":"Models init overfit eval","code":"lr = LogisticRegression(max_iter=10000)\\nlgbm = LGBMClassifier()\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\ncat = CatBoostClassifier(silent=True)\\next = ExtraTreesClassifier()\\ngnb = GaussianNB()\\n\\n\\nmodels = {\'Logistic Regression\': lr,\\n          \'LGBM\': lgbm,\\n          \'XGBoost\': xgb,\\n          \'CatBoost | Default\': cat,\\n          \'Gaussian NB\': gnb,\\n          \'Extra trees | Default\': ExtraTreesClassifier(),\\n          \'Extra trees | balanced \': ExtraTreesClassifier(class_weight=\'balanced\'), # noqa E501\\n          \'Extra trees | balanced_subsample\': ExtraTreesClassifier(class_weight=\'balanced_subsample\'), # noqa E501\\n          \'Random Forest | Default\': RandomForestClassifier()}\\n\\nfor a in range(5, 2, -1):\\n    models[\'Random Forest - Max_depth:\'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\\n\\ndepth = [3]\\nrs = [0.5]\\nparams_list=[ depth, rs ]\\n\\nfor depth_at, rs_at in list(itertools.product(*params_list)):\\n    models[\'CatBoostClassifier | Early_Stopping:4\'+\' | depth:\'+str(depth_at)+\' | strength:\'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","name":"One model test","code":"models_1 = {\'Random Forest - Default\': RandomForestClassifier()}","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","name":"Test results","code":"test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\\ntest_results = test.overfit(metrics.f1_score)\\ntest_results","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"b2b08397-d1fa-49bb-b121-6d2fbd86f821","name":"Test results chart","code":"fig = px.line(test_results, x=\\"Sample\\", y=\\"f1_score\\", color=\\"Dataset\\", facet_col=\\"Model\\", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\\nfig.show()","metadata":{"componentType":"CodeCell","headerColor":"none","comments":[],"diskcache":false}},{"id":"dac101ac-b57e-445a-8101-b90e36ac28f7","name":"All models run F1 score","code":"All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"60fd0370-09a6-49e3-abdf-9c29067c6754","name":"F1 Score","code":"pivot_f1 = All_models_results_f1.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'f1_score\') # noqa E501\\npivot_f1[\'Overfit\'] = abs(pivot_f1[\'Test\']-pivot_f1[\'Train\'])\\npivot_f1 = pivot_f1.groupby([\'Model\'])[[\'Overfit\', \'Test\']].mean().sort_values([\'Overfit\']) # noqa E501\\npivot_f1[pivot_f1.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","name":"All models run recall score","code":"All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf","name":"Recall score","code":"pivot_recall = All_models_results_recall.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'recall_score\') # noqa E501\\npivot_recall[\'Overfit\'] = abs(pivot_recall[\'Test\']-pivot_recall[\'Train\'])\\npivot_recall = pivot_recall.groupby(\'Model\')[\'Overfit\', \'Test\'].mean().sort_values(\'Overfit\') # noqa E501\\npivot_recall[pivot_recall.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","name":"All models run precision score","code":"All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"2873ca00-5d55-4437-9f3d-1c723e51a070","name":"Precision score","code":"pivot_precision = All_models_results_precision.pivot(index=[\'Sample\', \'Model\'], columns=\'Dataset\', values=\'precision_score\') # noqa E501\\npivot_precision[\'Overfit\'] = abs(pivot_precision[\'Test\']-pivot_precision[\'Train\'])\\npivot_precision = pivot_precision.groupby(\'Model\')[[\'Overfit\', \'Test\']].mean().sort_values(\'Overfit\') # noqa E501\\npivot_precision[pivot_precision.Test > 0]","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"180c9593-1123-4208-aa33-b2bf9c86b1e8","name":"Prepare X_test dataset","code":"X_test_final = final_transformation(X_test, feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","name":"Wrap up final datasets","code":"X_train_final, y_train_final = X_train_final, y_trat","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c969afb6-beca-462c-994b-3711f45b9725","name":"Check shapes","code":"print(X_train_final.shape)\\nprint(y_train_final.shape)\\nprint(X_test_final.shape)\\nprint(y_test.shape)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","name":"Metrics function","code":"def useful_metrics(X_df, y_df, model, threshold=0.5):\\n    evaluation = {}\\n    \\n    results = model.predict_proba(X_df)[:,-1]>threshold\\n\\n    base_metrics = [\\n                metrics.f1_score,\\n                metrics.recall_score,\\n                metrics.precision_score,\\n                metrics.brier_score_loss]\\n\\n    for metric in base_metrics:\\n            \\n        if metric.__name__ == \'brier_score_loss\':\\n        \\n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\\n        \\n        else:\\n            \\n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\\n\\n    return pd.DataFrame(evaluation, index=[0])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"10188aaf-83cc-4fcb-afe3-d7520346a34a","name":"Chosen model baseline","code":"gnb = GaussianNB()\\ngnb.fit(X_train_final, y_train_final)\\n\\ncat = CatBoostClassifier(silent=True)\\ncat.fit(X_train_final, y_train_final)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\\n\\nmodels = [gnb, cat, xgb]\\n\\nfor model in models:\\n\\n    print(model.__class__.__name__)\\n\\n    model.fit(X_train_final, y_train_final)\\n\\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\\n                         y_test, model))\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"a878d86e-3707-49be-bb85-3a5c0cbe3972","name":"Optuna dataset","code":"X_optuna = pd.concat([X_train_final, X_test_final])\\ny_optuna = pd.concat([y_train_final, y_test])","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"d5742407-e18a-4185-a945-f5ac11dcb854","name":"Optuna function Gaussian","code":"\\nsequence = [ ]\\nfor i in range(-9, 1):\\n    sequence.append(10**i)\\n\\ndef objective_gnb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'var_smoothing\': trial.suggest_categorical(\'var_smoothing\', sequence)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = GaussianNB(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","name":"Optuna function LR","code":"def objective_lr(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n    \\n    model_grid = {\\n        \'max_iter\':10000\\n    }\\n    \\n    oversample_grid = {\\n        \'sampling_strategy\': trial.suggest_float(\'sampling_strategy\',0.5,1.0,step=0.01)\\n    }\\n    \\n\\n    param_grid = {\\n    \'threshold\': trial.suggest_float(\'threshold\',0.2,1.0,step=0.01)\\n    }\\n\\n    model = LogisticRegression(**model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n    \\n    over_under = ADASYN(**oversample_grid)\\n\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n        \\n        X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train, y_train)\\n        \\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation,evaluation])\\n\\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2ff29722-5176-486b-8ec0-7b138fbe2c05","name":"Optuna Run LR","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_lr, n_trials=100)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4","name":"Optuna Results LR","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","name":"Optuna function XGB","code":"def objective_xgb(trial):\\n\\n    skf = StratifiedKFold(n_splits=5)\\n\\n    model_grid = {\\n        # Prevent Overfit\\n        \'max_depth\': trial.suggest_int(\'max_depth\', 3, 7, step=1),\\n        \'min_child_weight\': trial.suggest_int(\'min_child_weight\', 1, 7, step=1),\\n        \'gamma\': trial.suggest_int(\'gamma\', 0, 7, step=1),\\n        # Imbalanced dataset\\n        \'max_delta_step\': trial.suggest_int(\'max_delta_step\', 0, 10, step=1)\\n    }\\n\\n    param_grid = {\\n        \'threshold\': trial.suggest_float(\'threshold\', 0.2, 1.0, step=0.01)\\n    }\\n\\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\\n\\n    F_evaluation = pd.DataFrame()\\n\\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\\n\\n        model.fit(X_train, y_train)\\n\\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\\n\\n        F_evaluation = pd.concat([F_evaluation, evaluation])\\n\\n    return(F_evaluation.f1_score.std(),\\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\\n           F_evaluation.recall_score.mean(),\\n           F_evaluation.brier_score_loss.mean())","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","name":"Optuna Run XGB","code":"study = optuna.create_study(directions=[\'minimize\', \'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_xgb, n_trials=50)\\n\\nduration = 2000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"c8443305-4d7a-4455-9492-a7aeaaff5e07","name":"Optuna Results XGB","code":"metrics_name = [\'std_F1\',\'F1\', \'Precision\', \'Recall\', \'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n\\n    for metric, value in zip(metrics_name, trial.values):\\n\\n        try_1[metric] = value\\n\\n    try_1[\'Params\'] = str(trial.params)\\n\\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n\\n    tries = tries[tries.Precision > 0]\\n\\nbest_params = tries.sort_values([\'std_F1\', \'Precision\',\'F1\',\'Brier\'], ascending= [True, False, True, False]).head(100)\\n\\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","name":"Optuna run Gaussian","code":"study = optuna.create_study(directions=[\'maximize\',\'maximize\', \'maximize\', \'minimize\'])\\nstudy.optimize(objective_gnb, n_trials=200)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"05f7e787-a336-4342-b603-78809382262e","name":"Optuna results","code":"metrics_name = [\'F1\',\'Precision\',\'Recall\',\'Brier\']\\n\\ntries = pd.DataFrame()\\ntry_1 = {}\\nfor trial in study.best_trials:\\n    \\n    for metric, value in zip(metrics_name,trial.values):\\n        \\n        try_1[metric] = value\\n        \\n    try_1[\'Params\'] = str(trial.params)\\n    \\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\\n    \\n    tries = tries[tries.Precision > 0]\\n    \\ntries","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"d7fdb49f-1502-43d4-87ef-e452da6ecf74","name":"Top 20 results optuna","code":"tries.sort_values([\'F1\',\'Brier\',\'Precision\'], ascending= [False, True, False]).head(20)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","name":"Final model params","code":"params = {\'max_depth\': 6, \'min_child_weight\': 4, \'gamma\': 1, \'max_delta_step\': 10}\\n\\nthreshold = 0.52\\n\\ngnb = GaussianNB()\\n\\nlr = LogisticRegression(max_iter=10000)\\n\\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\\n\\nover_under = ADASYN(sampling_strategy=0.64)\\n\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac","name":"Yellowbricks threshold","code":"from yellowbrick.classifier import DiscriminationThreshold\\n\\n\\n# Instantiate the classification model and visualizer\\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\\nvisualizer = DiscriminationThreshold(model)\\n\\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\\nvisualizer.show()           # Finalize and render the figure","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","name":"Final model stats","code":"X_dataset, y_dataset = X_optuna, y_optuna\\n\\nmodel = xgb\\n\\nevaluation = pd.DataFrame()\\n\\nassertiveness = pd.DataFrame()\\n\\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\\n\\ncount = 0\\n\\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\\n\\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\\n        \\n        #Exclude if no oversample\\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\\n\\n        model.fit(X_train,y_train)\\n\\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\\n        \\n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\\n        \\n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\\n        \\n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\\n        \\n\\n        count+=1\\n        \\n        print(\\"Shuffle \\" + str(count), end = \\"\\\\r\\")\\n        \\nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\\n        \\ngrouped_stats = assertiveness.groupby(\'index\').agg(\\n        avg_correct_percent =(\'correct\', \'mean\'),\\n        avg_precision = (\'precision\', np.nanmean),\\n        avg_recall = (\'recall\', np.nanmean),\\n        std = (\'brier\', np.std),\\n        brier = (\'brier\', np.mean),\\n        count = (\'brier\', \'count\')\\n        )\\n        \\nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\\n\\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"1dd18a01-147a-489b-941e-867a5fc7389b","name":"Stats visualization","code":"duration = 1000  # milliseconds\\nfreq = 440# Hz\\nwinsound.Beep(freq, duration)\\nax = sns.boxplot(x=\'variable\', y=\'value\', data=pd.melt(evaluation))\\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":false}},{"id":"7122c816-b17e-4185-9c99-0fc03101be5b","name":"Prepare X_holdout dataset","code":"X_holdout_final = final_transformation(X_holdout,feature_final, 0, \'N\')","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","name":"Final Results","code":"xgb.fit(X_optuna, y_optuna)\\n\\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\\n\\nconfusion_matrix = metrics.confusion_matrix(\\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\\n\\ntn, fp, fn, tp = confusion_matrix.ravel()\\nspecificity = tn / (tn+fp)","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b54670b-7be3-4478-a89c-0fb50685bba2","name":"Confusion Matrix","code":"cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\\n\\ncm_display.plot()\\nplt.grid(False)\\nplt.show()","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","name":"Laymans Results","code":"print(f\\"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\\\n\\")\\n\\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\\n\\nprint(\'\\\\nExcelente notícia!!!!\')\\n\\n\\n\\nduration = 1000  # milliseconds\\nfreq = 440  # Hz\\nwinsound.Beep(freq, duration)\\n","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}},{"id":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca","name":"Save Model","code":"dump(xgb, open(\'turnover_general_model.pkl\', \'wb\'))","metadata":{"componentType":"CodeCell","headerColor":"inherit","comments":[],"diskcache":true}}],"edges":[{"parent":"74e47343-3dbf-44f8-8228-e584f90a0e16","child":"df37f106-a4ff-49cb-9f22-c550f0812b37"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"651d005e-5f45-4ca8-96ed-50c5783a308d"},{"parent":"651d005e-5f45-4ca8-96ed-50c5783a308d","child":"d695fd5d-fedd-440a-933a-e6b09ae9902b"},{"parent":"df37f106-a4ff-49cb-9f22-c550f0812b37","child":"4dabbcf4-809d-4903-8e32-26279499c336"},{"parent":"4dabbcf4-809d-4903-8e32-26279499c336","child":"ce04c155-4800-4dae-9253-501682182090"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"daf95a54-ce4c-46cc-92a8-93cafd7fbb64"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"55d86d91-0a4f-4b95-8f8b-30ade51cc1f3"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"d3a63656-d9e4-4200-80a2-ff1e529262ab"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"501b8112-a010-4f1a-9bed-41508f2b1acb"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"953422cc-3fb0-4601-952c-2840da505de3"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"953422cc-3fb0-4601-952c-2840da505de3","child":"719aa0e4-d5ec-44f6-a6c2-79117c96874e"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a7324ce3-3533-4319-82d0-3360324d7249"},{"parent":"501b8112-a010-4f1a-9bed-41508f2b1acb","child":"a3fde54e-894a-488e-a629-25ac13ec53e0"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"825318b2-890f-4cd9-984b-5d282130a117"},{"parent":"825318b2-890f-4cd9-984b-5d282130a117","child":"04b793a6-4c8e-4598-828a-62fa4903b5bb"},{"parent":"04b793a6-4c8e-4598-828a-62fa4903b5bb","child":"c649590d-5e04-47b6-8889-a0bd2901b1ba"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"71269304-ddf9-4591-a4d0-c45357dfb043"},{"parent":"71269304-ddf9-4591-a4d0-c45357dfb043","child":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f"},{"parent":"682bc2af-bc55-4ab6-b54e-6fe993e32e8f","child":"3c5a1393-9b6d-4206-83ff-660448ee4528"},{"parent":"3c5a1393-9b6d-4206-83ff-660448ee4528","child":"11d639e9-9f16-4840-9ca2-932561027791"},{"parent":"a3fde54e-894a-488e-a629-25ac13ec53e0","child":"68316262-8a81-4e81-8305-99a17550bfcc"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"616712eb-bc91-4af4-9b97-9bf57d3df147"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4"},{"parent":"debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4","child":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb"},{"parent":"ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb","child":"b2b08397-d1fa-49bb-b121-6d2fbd86f821"},{"parent":"616712eb-bc91-4af4-9b97-9bf57d3df147","child":"dac101ac-b57e-445a-8101-b90e36ac28f7"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"60fd0370-09a6-49e3-abdf-9c29067c6754"},{"parent":"dac101ac-b57e-445a-8101-b90e36ac28f7","child":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"ccc11b2b-9de9-48b0-83f2-e68c8c091fbf"},{"parent":"3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4","child":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288"},{"parent":"031c15a8-39ef-4fbe-8dfd-30eb5cc95288","child":"2873ca00-5d55-4437-9f3d-1c723e51a070"},{"parent":"68316262-8a81-4e81-8305-99a17550bfcc","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"2c4a93db-e6d0-47c0-87ec-4a71151ad0e7","child":"180c9593-1123-4208-aa33-b2bf9c86b1e8"},{"parent":"180c9593-1123-4208-aa33-b2bf9c86b1e8","child":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"c969afb6-beca-462c-994b-3711f45b9725"},{"parent":"bdd387d9-c775-4d8e-9f80-bac1575a1ef0","child":"16da288a-1d46-4d2f-96e9-b9e59c5505f3"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"10188aaf-83cc-4fcb-afe3-d7520346a34a"},{"parent":"16da288a-1d46-4d2f-96e9-b9e59c5505f3","child":"a878d86e-3707-49be-bb85-3a5c0cbe3972"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"d5742407-e18a-4185-a945-f5ac11dcb854"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175"},{"parent":"4c1c6b7a-df84-4315-87d9-7f5cf80bf175","child":"2ff29722-5176-486b-8ec0-7b138fbe2c05"},{"parent":"2ff29722-5176-486b-8ec0-7b138fbe2c05","child":"88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"8f560d16-8a82-4a85-821e-0a6dbf399eaf"},{"parent":"8f560d16-8a82-4a85-821e-0a6dbf399eaf","child":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0"},{"parent":"eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0","child":"c8443305-4d7a-4455-9492-a7aeaaff5e07"},{"parent":"d5742407-e18a-4185-a945-f5ac11dcb854","child":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257"},{"parent":"871e9ac7-aa0b-4abc-82a3-450b1bb7b257","child":"05f7e787-a336-4342-b603-78809382262e"},{"parent":"05f7e787-a336-4342-b603-78809382262e","child":"d7fdb49f-1502-43d4-87ef-e452da6ecf74"},{"parent":"a878d86e-3707-49be-bb85-3a5c0cbe3972","child":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"b92fccc0-7bb1-4c27-a1a0-f5642df563ac"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d"},{"parent":"4eed2dda-4508-42ca-9d82-1d58c3b6a41d","child":"1dd18a01-147a-489b-941e-867a5fc7389b"},{"parent":"5fc0c45d-b30d-4092-b717-eeaf44c5e2c7","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"ce04c155-4800-4dae-9253-501682182090","child":"7122c816-b17e-4185-9c99-0fc03101be5b"},{"parent":"7122c816-b17e-4185-9c99-0fc03101be5b","child":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0"},{"parent":"54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0","child":"2b54670b-7be3-4478-a89c-0fb50685bba2"},{"parent":"2b54670b-7be3-4478-a89c-0fb50685bba2","child":"4b0268ef-ea00-4441-a8ad-58cdb5372c28"},{"parent":"4b0268ef-ea00-4441-a8ad-58cdb5372c28","child":"2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca"}]}\n')
[2022-12-07 17:09:20] mrx-link.MRXLinkMagics.mrxlink_update_dag() DEBUG: graph: {'nodes': [{'id': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'name': 'Import libs', 'code': 'import pandas as pd\nimport numpy as np\nfrom pickle import dump, load\nimport itertools\nimport winsound\n\nimport Custom_Tools\nfrom sksurv.nonparametric import kaplan_meier_estimator\nfrom target_definition import target_definition\nfrom feature_engineering import feature_engineering\nfrom drop_turnover import drop_turnover\nfrom preprocess_turnover import preprocess_turnover\nfrom scale_dataset import scale_dataset\nfrom final_transformation import final_transformation\nfrom population_filter import population_filter\n\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, ShuffleSplit\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.feature_selection import chi2, f_classif, mutual_info_classif\n\n\nfrom imblearn.over_sampling import ADASYN\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics\n\n\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nimport optuna', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'name': 'First dataset', 'code': "df = pd.read_excel('C:/Users/Gabriel.Gomes/OneDrive/Materiais de Referencia/'\n                   'Python/Análise_Headcount.xlsx')\n\n'''\nAdicionar tipo de função (Gestor, não gestor)\nFeature Hashing - funcao_descricao, codsecao\nSalário, méritos e promoções\nPulses\n\nfilial_descricao não vai entrar porque codsecao pega filial e área.\n'''", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'name': 'Survival analysis preparation', 'code': "df_surv = feature_engineering(target_definition(df, 'tipo_colaborador', 'CLT'))\ndf_surv = df_surv[(df_surv.tempo_de_casa > 0) & (df_surv.tempo_de_casa < 62)]\ndf_surv.loc[df_surv.tipo_função == 'Docente','tipo_filial'] = 'DOCENTE'", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd695fd5d-fedd-440a-933a-e6b09ae9902b', 'name': 'Generate plots', 'code': 'data_x = df_surv.copy()\n\ndata_y = df_surv.desligado==1\n\nsurv_days = data_x.tempo_de_casa\n\nanalyze = [\'tipo_filial\',\'VP_descricao\',\'genero\', \'corraca_descricao\']\n\nfor i in analyze:\n\n    analisar = i\n\n    plt.figure(figsize=(12, 12), dpi=80)\n\n    for value in data_x[analisar].unique():\n        mask = data_x[analisar] == value\n        time_cell, survival_prob_cell = kaplan_meier_estimator(data_y[mask],\n                                                               surv_days[mask])\n        plt.step(time_cell, survival_prob_cell, where="post",\n                 label="%s (n = %d)" % (value, mask.sum()));\n\n    plt.ylabel("est. probability of survival $\\hat{S}(t)$")\n    plt.xlabel("Months")\n    plt.legend(loc="best");\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4dabbcf4-809d-4903-8e32-26279499c336', 'name': 'Target definition', 'code': "df_alvo = target_definition(df, 'tipo_colaborador', 'CLT')\n\ndf_alvo = population_filter(df_alvo)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'ce04c155-4800-4dae-9253-501682182090', 'name': 'Holdout', 'code': "X, X_holdout, y, y_holdout = train_test_split(df_alvo.drop(['desligado'], axis=1), df_alvo['desligado'], test_size=0.1, random_state=42, stratify=df_alvo['desligado']) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64', 'name': 'Check proportions Holdout', 'code': 'print(y.value_counts()/y.shape[0])\nprint(y_holdout.value_counts()/y_holdout.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'name': 'Train test', 'code': 'X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3', 'name': 'Check proportion Train Test', 'code': 'print(y_train.value_counts()/y_train.shape[0])\nprint(y_test.value_counts()/y_test.shape[0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'd3a63656-d9e4-4200-80a2-ff1e529262ab', 'name': 'Averages for input', 'code': 'print(X_train.idade.mean())', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'name': 'Engineer Drop and Preprocess', 'code': 'df_trat = X_train\n\ny_trat = y_train.loc[df_trat.index]\n\ndf_eng = feature_engineering(df_trat)\n\ndf_trat_drop = drop_turnover(df_eng)\n\ndf_preprocess = preprocess_turnover(df_trat_drop)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '953422cc-3fb0-4601-952c-2840da505de3', 'name': 'Engineer info', 'code': 'print(df_preprocess.columns)\nprint(df_preprocess.shape)\nprint(y_trat.shape)\n#print(pd.cut(df_trat_drop.salario, [0,5000,10000,15000,20000]).value_counts()/df_trat_drop.shape[0])\nprint(df_preprocess.isnull().sum())\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '719aa0e4-d5ec-44f6-a6c2-79117c96874e', 'name': 'Scaling fit', 'code': "Scaler = MinMaxScaler((0,1))\nScaler.fit(df_preprocess)\ndump(Scaler, open('Scaler.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': '#FAFF00', 'comments': [], 'diskcache': False}}, {'id': 'a7324ce3-3533-4319-82d0-3360324d7249', 'name': 'Hashing High Cardinality test', 'code': "from sklearn.feature_extraction import FeatureHasher\n\ndef useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])\n\nscores = pd.DataFrame()\n\nfrom tqdm.notebook import tqdm\n\nfor i in tqdm(range(3,50)):\n\n    n_features = i\n\n    hashf = FeatureHasher(n_features=n_features,  input_type='string')\n\n    funcao_cols = ['funcao_'+str(i) for i in range(n_features)]\n\n    train_hash = pd.DataFrame(hashf.fit_transform(df_eng.codsecao).toarray(), columns = funcao_cols )\n\n    test_hash = pd.DataFrame(hashf.transform(X_test.codsecao).toarray(), columns = funcao_cols)\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0)\n\n    model.fit(train_hash, y_trat)\n    \n    score = useful_metrics(test_hash, y_test, model)\n    \n    score['cols'] = i\n    \n    scores = pd.concat([scores, score])\n    ", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'name': 'Scaling transform', 'code': "Scaler = load(open('Scaler.pkl', 'rb'))\nfeature = df_preprocess.columns.tolist()\nscaled_df = df_preprocess\nscaled_df = scale_dataset(df_preprocess, feature, None)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '825318b2-890f-4cd9-984b-5d282130a117', 'name': 'Custom Tool analysis', 'code': "df_preprocess_analysis = scaled_df.copy()\ndf_preprocess_analysis['desligado'] = y_train\n\naval = Custom_Tools.preprocess_afya(df_preprocess_analysis)\n\ncols = aval.col_missing()\n\ncard = aval.cardinality()\n\nrws = aval.row_missing()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'name': 'Row evaluation', 'code': 'print(rws[rws > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'c649590d-5e04-47b6-8889-a0bd2901b1ba', 'name': 'Column evaluation', 'code': 'print(cols[cols > 0])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '71269304-ddf9-4591-a4d0-c45357dfb043', 'name': 'Feature Selection run', 'code': 'algorithms = [chi2, f_classif, mutual_info_classif]\nselection = Custom_Tools.feature_selection(df_preprocess, y_trat, algorithms,500)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'name': 'Feature Selection results', 'code': "features = selection.columns.tolist()\nfeatures.remove('Total_points')\nKbest_eval = selection.groupby('Columns').sum()['Total_points'].sort_values(ascending=False) # noqa E501", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'name': 'Dropping redundant features', 'code': "Kbest_eval[(Kbest_eval.index != 'agrup_salario') & (Kbest_eval.index != 'tempo_de_casa') & (Kbest_eval.index != 'ord_faixa_etaria')][:Kbest_eval.shape[0]//2].index.tolist()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '11d639e9-9f16-4840-9ca2-932561027791', 'name': 'Features selected and save', 'code': "# Tempo de casa redundante com ord_faixa_tempo_casa\nfeature_final = ['VP_descricao_VICEPRESIDENCIADEOPERACOES',\n 'tipo_filial_DIGITAL',\n 'VP_descricao_VICEPRESIDENCIADEMERCADO',\n 'tipo_filial_UNDERGRADUATE',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOESERVDIGITAIS',\n 'salario',\n 'ord_faixa_tempo_casa',\n 'idade',\n 'cotapcd',\n 'VP_descricao_VICEPRESIDENCIADEGENTEGESTAOESERVICOS',\n 'VP_descricao_VICEPRESIDENCIADEMARKETING',\n 'VP_descricao_VICEPRESIDENCIADEINOVACAOETECNOLOGIA',\n 'genero_Masculino',\n 'genero_Feminino']\ndump(feature_final, open('feature_selection.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': '68316262-8a81-4e81-8305-99a17550bfcc', 'name': 'Final features', 'code': "#feature_final = load(open('feature_selection.pkl', 'rb'))\nfeature_final = [x for x in scaled_df]\n\n# Comment if feature selection was used\ndump(feature_final, open('feature_selection.pkl', 'wb'))\n\n#feature_final.remove('escolaridade_classificao')\nX_train_final = scaled_df[feature_final]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': True}}, {'id': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'name': 'Models init overfit eval', 'code': "lr = LogisticRegression(max_iter=10000)\nlgbm = LGBMClassifier()\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\ncat = CatBoostClassifier(silent=True)\next = ExtraTreesClassifier()\ngnb = GaussianNB()\n\n\nmodels = {'Logistic Regression': lr,\n          'LGBM': lgbm,\n          'XGBoost': xgb,\n          'CatBoost | Default': cat,\n          'Gaussian NB': gnb,\n          'Extra trees | Default': ExtraTreesClassifier(),\n          'Extra trees | balanced ': ExtraTreesClassifier(class_weight='balanced'), # noqa E501\n          'Extra trees | balanced_subsample': ExtraTreesClassifier(class_weight='balanced_subsample'), # noqa E501\n          'Random Forest | Default': RandomForestClassifier()}\n\nfor a in range(5, 2, -1):\n    models['Random Forest - Max_depth:'+str(a)] = RandomForestClassifier(max_depth=a) # noqa E501\n\ndepth = [3]\nrs = [0.5]\nparams_list=[ depth, rs ]\n\nfor depth_at, rs_at in list(itertools.product(*params_list)):\n    models['CatBoostClassifier | Early_Stopping:4'+' | depth:'+str(depth_at)+' | strength:'+str(rs_at)] = CatBoostClassifier(silent=True, early_stopping_rounds=4, depth = depth_at, random_strength = rs_at) # noqa E501\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'name': 'One model test', 'code': "models_1 = {'Random Forest - Default': RandomForestClassifier()}", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'name': 'Test results', 'code': 'test = Custom_Tools.overfit(X_train_final, y_trat, models_1, None, None)\ntest_results = test.overfit(metrics.f1_score)\ntest_results', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821', 'name': 'Test results chart', 'code': 'fig = px.line(test_results, x="Sample", y="f1_score", color="Dataset", facet_col="Model", facet_col_wrap=4, height=500, range_y=[0,1]) # noqa E501\nfig.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'none', 'comments': [], 'diskcache': False}}, {'id': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'name': 'All models run F1 score', 'code': 'All_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, None)\nAll_models_results_f1 = All_models_f1.overfit(metrics.f1_score)\nAll_models_f1 = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_f1 = pd.concat([All_models_results_f1, All_models_f1.overfit(metrics.f1_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '60fd0370-09a6-49e3-abdf-9c29067c6754', 'name': 'F1 Score', 'code': "pivot_f1 = All_models_results_f1.pivot(index=['Sample', 'Model'], columns='Dataset', values='f1_score') # noqa E501\npivot_f1['Overfit'] = abs(pivot_f1['Test']-pivot_f1['Train'])\npivot_f1 = pivot_f1.groupby(['Model'])[['Overfit', 'Test']].mean().sort_values(['Overfit']) # noqa E501\npivot_f1[pivot_f1.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'name': 'All models run recall score', 'code': 'All_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_recall = All_models_recall.overfit(metrics.recall_score)\nAll_models_recall = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_recall = pd.concat([All_models_results_recall, All_models_recall.overfit(metrics.recall_score)]) # noqa E501', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf', 'name': 'Recall score', 'code': "pivot_recall = All_models_results_recall.pivot(index=['Sample', 'Model'], columns='Dataset', values='recall_score') # noqa E501\npivot_recall['Overfit'] = abs(pivot_recall['Test']-pivot_recall['Train'])\npivot_recall = pivot_recall.groupby('Model')['Overfit', 'Test'].mean().sort_values('Overfit') # noqa E501\npivot_recall[pivot_recall.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'name': 'All models run precision score', 'code': 'All_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, None) # noqa E501\nAll_models_results_precision = All_models_precision.overfit(metrics.f1_score)\nAll_models_precision = Custom_Tools.overfit(X_train_final, y_trat, models, None, ADASYN(sampling_strategy= 1.0)) # noqa E501\nAll_models_results_precision = pd.concat([All_models_results_precision, All_models_precision.overfit(metrics.precision_score)]) # noqa E501\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '2873ca00-5d55-4437-9f3d-1c723e51a070', 'name': 'Precision score', 'code': "pivot_precision = All_models_results_precision.pivot(index=['Sample', 'Model'], columns='Dataset', values='precision_score') # noqa E501\npivot_precision['Overfit'] = abs(pivot_precision['Test']-pivot_precision['Train'])\npivot_precision = pivot_precision.groupby('Model')[['Overfit', 'Test']].mean().sort_values('Overfit') # noqa E501\npivot_precision[pivot_precision.Test > 0]", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'name': 'Prepare X_test dataset', 'code': "X_test_final = final_transformation(X_test, feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'name': 'Wrap up final datasets', 'code': 'X_train_final, y_train_final = X_train_final, y_trat', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c969afb6-beca-462c-994b-3711f45b9725', 'name': 'Check shapes', 'code': 'print(X_train_final.shape)\nprint(y_train_final.shape)\nprint(X_test_final.shape)\nprint(y_test.shape)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'name': 'Metrics function', 'code': "def useful_metrics(X_df, y_df, model, threshold=0.5):\n    evaluation = {}\n    \n    results = model.predict_proba(X_df)[:,-1]>threshold\n\n    base_metrics = [\n                metrics.f1_score,\n                metrics.recall_score,\n                metrics.precision_score,\n                metrics.brier_score_loss]\n\n    for metric in base_metrics:\n            \n        if metric.__name__ == 'brier_score_loss':\n        \n            evaluation[metric.__name__] = round(metric(y_df, model.predict_proba(X_df)[:,-1]),2)\n        \n        else:\n            \n            evaluation[metric.__name__] = round(metric(y_df, results, zero_division=0),2)\n\n    return pd.DataFrame(evaluation, index=[0])", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '10188aaf-83cc-4fcb-afe3-d7520346a34a', 'name': 'Chosen model baseline', 'code': 'gnb = GaussianNB()\ngnb.fit(X_train_final, y_train_final)\n\ncat = CatBoostClassifier(silent=True)\ncat.fit(X_train_final, y_train_final)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0)\n\nmodels = [gnb, cat, xgb]\n\nfor model in models:\n\n    print(model.__class__.__name__)\n\n    model.fit(X_train_final, y_train_final)\n\n    print(useful_metrics(X_test_final[X_train_final.columns.tolist()],\n                         y_test, model))\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'name': 'Optuna dataset', 'code': 'X_optuna = pd.concat([X_train_final, X_test_final])\ny_optuna = pd.concat([y_train_final, y_test])', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'name': 'Optuna function Gaussian', 'code': "\nsequence = [ ]\nfor i in range(-9, 1):\n    sequence.append(10**i)\n\ndef objective_gnb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'var_smoothing': trial.suggest_categorical('var_smoothing', sequence)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = GaussianNB(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'name': 'Optuna function LR', 'code': "def objective_lr(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n    \n    model_grid = {\n        'max_iter':10000\n    }\n    \n    oversample_grid = {\n        'sampling_strategy': trial.suggest_float('sampling_strategy',0.5,1.0,step=0.01)\n    }\n    \n\n    param_grid = {\n    'threshold': trial.suggest_float('threshold',0.2,1.0,step=0.01)\n    }\n\n    model = LogisticRegression(**model_grid)\n\n    F_evaluation = pd.DataFrame()\n    \n    over_under = ADASYN(**oversample_grid)\n\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n        \n        X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train, y_train)\n        \n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation,evaluation])\n\n    return(F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),F_evaluation.recall_score.mean(),F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'name': 'Optuna Run LR', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_lr, n_trials=100)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4', 'name': 'Optuna Results LR', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'name': 'Optuna function XGB', 'code': "def objective_xgb(trial):\n\n    skf = StratifiedKFold(n_splits=5)\n\n    model_grid = {\n        # Prevent Overfit\n        'max_depth': trial.suggest_int('max_depth', 3, 7, step=1),\n        'min_child_weight': trial.suggest_int('min_child_weight', 1, 7, step=1),\n        'gamma': trial.suggest_int('gamma', 0, 7, step=1),\n        # Imbalanced dataset\n        'max_delta_step': trial.suggest_int('max_delta_step', 0, 10, step=1)\n    }\n\n    param_grid = {\n        'threshold': trial.suggest_float('threshold', 0.2, 1.0, step=0.01)\n    }\n\n    model = XGBClassifier(use_label_encoder=False, verbosity=0, **model_grid)\n\n    F_evaluation = pd.DataFrame()\n\n    for train_index, test_index in skf.split(X_optuna, y_optuna):\n        X_train, y_train = X_optuna.iloc[train_index], y_optuna.iloc[train_index]\n        X_test, y_test = X_optuna.iloc[test_index], y_optuna.iloc[test_index]\n\n        model.fit(X_train, y_train)\n\n        evaluation = useful_metrics(X_test, y_test, model, **param_grid)\n\n        F_evaluation = pd.concat([F_evaluation, evaluation])\n\n    return(F_evaluation.f1_score.std(),\n           F_evaluation.f1_score.mean(), F_evaluation.precision_score.mean(),\n           F_evaluation.recall_score.mean(),\n           F_evaluation.brier_score_loss.mean())", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'name': 'Optuna Run XGB', 'code': "study = optuna.create_study(directions=['minimize', 'maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_xgb, n_trials=50)\n\nduration = 2000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'c8443305-4d7a-4455-9492-a7aeaaff5e07', 'name': 'Optuna Results XGB', 'code': "metrics_name = ['std_F1','F1', 'Precision', 'Recall', 'Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n\n    for metric, value in zip(metrics_name, trial.values):\n\n        try_1[metric] = value\n\n    try_1['Params'] = str(trial.params)\n\n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n\n    tries = tries[tries.Precision > 0]\n\nbest_params = tries.sort_values(['std_F1', 'Precision','F1','Brier'], ascending= [True, False, True, False]).head(100)\n\nbest_params[(best_params.Recall > 0.100) & (best_params.Precision > 0.700)].drop_duplicates()", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'name': 'Optuna run Gaussian', 'code': "study = optuna.create_study(directions=['maximize','maximize', 'maximize', 'minimize'])\nstudy.optimize(objective_gnb, n_trials=200)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '05f7e787-a336-4342-b603-78809382262e', 'name': 'Optuna results', 'code': "metrics_name = ['F1','Precision','Recall','Brier']\n\ntries = pd.DataFrame()\ntry_1 = {}\nfor trial in study.best_trials:\n    \n    for metric, value in zip(metrics_name,trial.values):\n        \n        try_1[metric] = value\n        \n    try_1['Params'] = str(trial.params)\n    \n    tries = pd.concat([tries, pd.DataFrame(try_1, index=[0])], ignore_index=True)\n    \n    tries = tries[tries.Precision > 0]\n    \ntries", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74', 'name': 'Top 20 results optuna', 'code': "tries.sort_values(['F1','Brier','Precision'], ascending= [False, True, False]).head(20)", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'name': 'Final model params', 'code': "params = {'max_depth': 6, 'min_child_weight': 4, 'gamma': 1, 'max_delta_step': 10}\n\nthreshold = 0.52\n\ngnb = GaussianNB()\n\nlr = LogisticRegression(max_iter=10000)\n\nxgb = XGBClassifier(use_label_encoder=False, verbosity=0, random_state=42, **params)\n\nover_under = ADASYN(sampling_strategy=0.64)\n\n", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac', 'name': 'Yellowbricks threshold', 'code': 'from yellowbrick.classifier import DiscriminationThreshold\n\n\n# Instantiate the classification model and visualizer\nmodel = XGBClassifier(use_label_encoder=False, verbosity=0, **params)\nvisualizer = DiscriminationThreshold(model)\n\nvisualizer.fit(X_train_final, y_train_final)        # Fit the data to the visualizer\nvisualizer.show()           # Finalize and render the figure', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'name': 'Final model stats', 'code': 'X_dataset, y_dataset = X_optuna, y_optuna\n\nmodel = xgb\n\nevaluation = pd.DataFrame()\n\nassertiveness = pd.DataFrame()\n\nshf = ShuffleSplit(n_splits=100,test_size=0.3)\n\ncount = 0\n\nfor train_index, test_index in shf.split(X_dataset,y_dataset):\n\n        X_train, y_train  = X_dataset.iloc[train_index].copy(), y_dataset.iloc[train_index].copy()\n        X_test, y_test = X_dataset.iloc[test_index].copy(), y_dataset.iloc[test_index].copy()\n        \n        #Exclude if no oversample\n        #X_train, y_train = over_under.fit_resample(X_train, y_train)\n\n        model.fit(X_train,y_train)\n\n        probabilities = [round(x,2) for x in model.predict_proba(X_test)[:,-1]]\n        \n        evaluation = pd.concat([evaluation, useful_metrics(X_test, y_test, model, threshold)],ignore_index=True)\n        \n        assertiveness_rec = pd.DataFrame({\'index\':X_test.index, \'probabilities\': probabilities, \'y_true\': y_test})\n        \n        assertiveness = pd.concat([assertiveness, assertiveness_rec])\n        \n\n        count+=1\n        \n        print("Shuffle " + str(count), end = "\\r")\n        \nassertiveness[\'correct\'] = assertiveness.y_true == (assertiveness.probabilities > threshold)\nassertiveness[\'brier\'] = abs(assertiveness.y_true - assertiveness.probabilities)\nassertiveness[\'precision\'] = [y if x ==0 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\nassertiveness[\'recall\'] = [y if x ==1 else np.nan for x,y in zip(assertiveness.y_true,assertiveness.correct)]\n        \ngrouped_stats = assertiveness.groupby(\'index\').agg(\n        avg_correct_percent =(\'correct\', \'mean\'),\n        avg_precision = (\'precision\', np.nanmean),\n        avg_recall = (\'recall\', np.nanmean),\n        std = (\'brier\', np.std),\n        brier = (\'brier\', np.mean),\n        count = (\'brier\', \'count\')\n        )\n        \nX_dataset_stats = pd.merge(X_dataset,grouped_stats, left_index=True, right_index=True)\n\nX_dataset_stats = pd.merge(X_dataset_stats,pd.get_dummies(y_dataset, prefix=\'target\'), left_index=True, right_index=True)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '1dd18a01-147a-489b-941e-867a5fc7389b', 'name': 'Stats visualization', 'code': "duration = 1000  # milliseconds\nfreq = 440# Hz\nwinsound.Beep(freq, duration)\nax = sns.boxplot(x='variable', y='value', data=pd.melt(evaluation))\nax.set_xticklabels(ax.get_xticklabels(),rotation=30);", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': False}}, {'id': '7122c816-b17e-4185-9c99-0fc03101be5b', 'name': 'Prepare X_holdout dataset', 'code': "X_holdout_final = final_transformation(X_holdout,feature_final, 0, 'N')", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'name': 'Final Results', 'code': 'xgb.fit(X_optuna, y_optuna)\n\nmetrics_final = useful_metrics(X_holdout_final, y_holdout, xgb, threshold)\n\nconfusion_matrix = metrics.confusion_matrix(\n    y_holdout, xgb.predict_proba(X_holdout_final)[:, -1] > threshold)\n\ntn, fp, fn, tp = confusion_matrix.ravel()\nspecificity = tn / (tn+fp)', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'name': 'Confusion Matrix', 'code': 'cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=confusion_matrix)\n\ncm_display.plot()\nplt.grid(False)\nplt.show()', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'name': 'Laymans Results', 'code': 'print(f"O teste final do modelo conseguiu capturar {round(metrics_final[\'recall_score\'][0]*100,2)}% ({tp} pessoa(s)) que iriam sair.\\n")\n\nprint(f\'O custo desse tipo de predição foi de {round(100-specificity*100,1)}%.\\n Resumindo, o modelo previu que {fp} pessoa(s) da base iria sair, mas não saiu...\')\n\nprint(\'\\nExcelente notícia!!!!\')\n\n\n\nduration = 1000  # milliseconds\nfreq = 440  # Hz\nwinsound.Beep(freq, duration)\n', 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}, {'id': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca', 'name': 'Save Model', 'code': "dump(xgb, open('turnover_general_model.pkl', 'wb'))", 'metadata': {'componentType': 'CodeCell', 'headerColor': 'inherit', 'comments': [], 'diskcache': True}}], 'edges': [{'parent': '74e47343-3dbf-44f8-8228-e584f90a0e16', 'child': 'df37f106-a4ff-49cb-9f22-c550f0812b37'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '651d005e-5f45-4ca8-96ed-50c5783a308d'}, {'parent': '651d005e-5f45-4ca8-96ed-50c5783a308d', 'child': 'd695fd5d-fedd-440a-933a-e6b09ae9902b'}, {'parent': 'df37f106-a4ff-49cb-9f22-c550f0812b37', 'child': '4dabbcf4-809d-4903-8e32-26279499c336'}, {'parent': '4dabbcf4-809d-4903-8e32-26279499c336', 'child': 'ce04c155-4800-4dae-9253-501682182090'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': 'daf95a54-ce4c-46cc-92a8-93cafd7fbb64'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '55d86d91-0a4f-4b95-8f8b-30ade51cc1f3'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': 'd3a63656-d9e4-4200-80a2-ff1e529262ab'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '501b8112-a010-4f1a-9bed-41508f2b1acb'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '953422cc-3fb0-4601-952c-2840da505de3'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '953422cc-3fb0-4601-952c-2840da505de3', 'child': '719aa0e4-d5ec-44f6-a6c2-79117c96874e'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a7324ce3-3533-4319-82d0-3360324d7249'}, {'parent': '501b8112-a010-4f1a-9bed-41508f2b1acb', 'child': 'a3fde54e-894a-488e-a629-25ac13ec53e0'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '825318b2-890f-4cd9-984b-5d282130a117'}, {'parent': '825318b2-890f-4cd9-984b-5d282130a117', 'child': '04b793a6-4c8e-4598-828a-62fa4903b5bb'}, {'parent': '04b793a6-4c8e-4598-828a-62fa4903b5bb', 'child': 'c649590d-5e04-47b6-8889-a0bd2901b1ba'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '71269304-ddf9-4591-a4d0-c45357dfb043'}, {'parent': '71269304-ddf9-4591-a4d0-c45357dfb043', 'child': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f'}, {'parent': '682bc2af-bc55-4ab6-b54e-6fe993e32e8f', 'child': '3c5a1393-9b6d-4206-83ff-660448ee4528'}, {'parent': '3c5a1393-9b6d-4206-83ff-660448ee4528', 'child': '11d639e9-9f16-4840-9ca2-932561027791'}, {'parent': 'a3fde54e-894a-488e-a629-25ac13ec53e0', 'child': '68316262-8a81-4e81-8305-99a17550bfcc'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '616712eb-bc91-4af4-9b97-9bf57d3df147'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4'}, {'parent': 'debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4', 'child': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb'}, {'parent': 'ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb', 'child': 'b2b08397-d1fa-49bb-b121-6d2fbd86f821'}, {'parent': '616712eb-bc91-4af4-9b97-9bf57d3df147', 'child': 'dac101ac-b57e-445a-8101-b90e36ac28f7'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '60fd0370-09a6-49e3-abdf-9c29067c6754'}, {'parent': 'dac101ac-b57e-445a-8101-b90e36ac28f7', 'child': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': 'ccc11b2b-9de9-48b0-83f2-e68c8c091fbf'}, {'parent': '3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4', 'child': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288'}, {'parent': '031c15a8-39ef-4fbe-8dfd-30eb5cc95288', 'child': '2873ca00-5d55-4437-9f3d-1c723e51a070'}, {'parent': '68316262-8a81-4e81-8305-99a17550bfcc', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '2c4a93db-e6d0-47c0-87ec-4a71151ad0e7', 'child': '180c9593-1123-4208-aa33-b2bf9c86b1e8'}, {'parent': '180c9593-1123-4208-aa33-b2bf9c86b1e8', 'child': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': 'c969afb6-beca-462c-994b-3711f45b9725'}, {'parent': 'bdd387d9-c775-4d8e-9f80-bac1575a1ef0', 'child': '16da288a-1d46-4d2f-96e9-b9e59c5505f3'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': '10188aaf-83cc-4fcb-afe3-d7520346a34a'}, {'parent': '16da288a-1d46-4d2f-96e9-b9e59c5505f3', 'child': 'a878d86e-3707-49be-bb85-3a5c0cbe3972'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': 'd5742407-e18a-4185-a945-f5ac11dcb854'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175'}, {'parent': '4c1c6b7a-df84-4315-87d9-7f5cf80bf175', 'child': '2ff29722-5176-486b-8ec0-7b138fbe2c05'}, {'parent': '2ff29722-5176-486b-8ec0-7b138fbe2c05', 'child': '88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '8f560d16-8a82-4a85-821e-0a6dbf399eaf'}, {'parent': '8f560d16-8a82-4a85-821e-0a6dbf399eaf', 'child': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0'}, {'parent': 'eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0', 'child': 'c8443305-4d7a-4455-9492-a7aeaaff5e07'}, {'parent': 'd5742407-e18a-4185-a945-f5ac11dcb854', 'child': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257'}, {'parent': '871e9ac7-aa0b-4abc-82a3-450b1bb7b257', 'child': '05f7e787-a336-4342-b603-78809382262e'}, {'parent': '05f7e787-a336-4342-b603-78809382262e', 'child': 'd7fdb49f-1502-43d4-87ef-e452da6ecf74'}, {'parent': 'a878d86e-3707-49be-bb85-3a5c0cbe3972', 'child': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': 'b92fccc0-7bb1-4c27-a1a0-f5642df563ac'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d'}, {'parent': '4eed2dda-4508-42ca-9d82-1d58c3b6a41d', 'child': '1dd18a01-147a-489b-941e-867a5fc7389b'}, {'parent': '5fc0c45d-b30d-4092-b717-eeaf44c5e2c7', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': 'ce04c155-4800-4dae-9253-501682182090', 'child': '7122c816-b17e-4185-9c99-0fc03101be5b'}, {'parent': '7122c816-b17e-4185-9c99-0fc03101be5b', 'child': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0'}, {'parent': '54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0', 'child': '2b54670b-7be3-4478-a89c-0fb50685bba2'}, {'parent': '2b54670b-7be3-4478-a89c-0fb50685bba2', 'child': '4b0268ef-ea00-4441-a8ad-58cdb5372c28'}, {'parent': '4b0268ef-ea00-4441-a8ad-58cdb5372c28', 'child': '2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca'}]}
[2022-12-07 17:09:20] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:20] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:20] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:20] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:20] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear First dataset (df37f106-a4ff-49cb-9f22-c550f0812b37), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Import libs (74e47343-3dbf-44f8-8228-e584f90a0e16), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportions Holdout (daf95a54-ce4c-46cc-92a8-93cafd7fbb64), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Holdout (ce04c155-4800-4dae-9253-501682182090), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Target definition (4dabbcf4-809d-4903-8e32-26279499c336), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run F1 score (dac101ac-b57e-445a-8101-b90e36ac28f7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run precision score (031c15a8-39ef-4fbe-8dfd-30eb5cc95288), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Recall score (ccc11b2b-9de9-48b0-83f2-e68c8c091fbf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check proportion Train Test (55d86d91-0a4f-4b95-8f8b-30ade51cc1f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Models init overfit eval (616712eb-bc91-4af4-9b97-9bf57d3df147), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final features (68316262-8a81-4e81-8305-99a17550bfcc), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear All models run recall score (3b7b5c94-c5c8-4e8a-b3bd-44ba9599ffe4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer Drop and Preprocess (501b8112-a010-4f1a-9bed-41508f2b1acb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling transform (a3fde54e-894a-488e-a629-25ac13ec53e0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Train test (2c4a93db-e6d0-47c0-87ec-4a71151ad0e7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Averages for input (d3a63656-d9e4-4200-80a2-ff1e529262ab), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Survival analysis preparation (651d005e-5f45-4ca8-96ed-50c5783a308d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Generate plots (d695fd5d-fedd-440a-933a-e6b09ae9902b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear F1 Score (60fd0370-09a6-49e3-abdf-9c29067c6754), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Dropping redundant features (3c5a1393-9b6d-4206-83ff-660448ee4528), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Features selected and save (11d639e9-9f16-4840-9ca2-932561027791), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection run (71269304-ddf9-4591-a4d0-c45357dfb043), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Feature Selection results (682bc2af-bc55-4ab6-b54e-6fe993e32e8f), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear One model test (debb4de3-4dc3-47f9-bc4a-2fdc9b774ed4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Engineer info (953422cc-3fb0-4601-952c-2840da505de3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Scaling fit (719aa0e4-d5ec-44f6-a6c2-79117c96874e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Column evaluation (c649590d-5e04-47b6-8889-a0bd2901b1ba), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Custom Tool analysis (825318b2-890f-4cd9-984b-5d282130a117), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Row evaluation (04b793a6-4c8e-4598-828a-62fa4903b5bb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Wrap up final datasets (bdd387d9-c775-4d8e-9f80-bac1575a1ef0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Chosen model baseline (10188aaf-83cc-4fcb-afe3-d7520346a34a), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function Gaussian (d5742407-e18a-4185-a945-f5ac11dcb854), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model stats (4eed2dda-4508-42ca-9d82-1d58c3b6a41d), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Top 20 results optuna (d7fdb49f-1502-43d4-87ef-e452da6ecf74), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna results (05f7e787-a336-4342-b603-78809382262e), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Laymans Results (4b0268ef-ea00-4441-a8ad-58cdb5372c28), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run XGB (eff17d3c-b5ab-4ccc-8088-4f7673a9e4a0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final model params (5fc0c45d-b30d-4092-b717-eeaf44c5e2c7), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Confusion Matrix (2b54670b-7be3-4478-a89c-0fb50685bba2), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results LR (88d3d4bc-b1c4-4988-bbf4-44be5ff37fc4), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna dataset (a878d86e-3707-49be-bb85-3a5c0cbe3972), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Yellowbricks threshold (b92fccc0-7bb1-4c27-a1a0-f5642df563ac), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Stats visualization (1dd18a01-147a-489b-941e-867a5fc7389b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Run LR (2ff29722-5176-486b-8ec0-7b138fbe2c05), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna run Gaussian (871e9ac7-aa0b-4abc-82a3-450b1bb7b257), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Metrics function (16da288a-1d46-4d2f-96e9-b9e59c5505f3), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Check shapes (c969afb6-beca-462c-994b-3711f45b9725), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function XGB (8f560d16-8a82-4a85-821e-0a6dbf399eaf), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Final Results (54cd23f1-9a30-44d0-9ae0-d2e25a0baeb0), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna function LR (4c1c6b7a-df84-4315-87d9-7f5cf80bf175), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Save Model (2b107a46-0cd0-49cb-9e5f-9a88fd5f07ca), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_test dataset (180c9593-1123-4208-aa33-b2bf9c86b1e8), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Prepare X_holdout dataset (7122c816-b17e-4185-9c99-0fc03101be5b), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Optuna Results XGB (c8443305-4d7a-4455-9492-a7aeaaff5e07), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Hashing High Cardinality test (a7324ce3-3533-4319-82d0-3360324d7249), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results chart (b2b08397-d1fa-49bb-b121-6d2fbd86f821), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Test results (ef1548bb-523d-4e9d-bb0b-5e25c8f4bbeb), status MRXLinkComponentStatus.INVALID
[2022-12-07 17:09:21] mrx-link.MRXLinkDag.mrxlink_update_dag() DEBUG: Clear Precision score (2873ca00-5d55-4437-9f3d-1c723e51a070), status MRXLinkComponentStatus.INVALID
